{
  "info": {
    "title": "Telnyx Numbers API", 
    "version": "2.0.0", 
    "description": "Telnyx Numbers API.", 
    "license": {
      "name": "MIT"
    }, 
    "contact": {
      "email": "support@telnyx.com"
    }
  }, 
  "paths": {
    "/sim_cards/{id}/actions/deactivate": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "202": {
            "description": "Successful response"
          }
        }, 
        "description": "The SIM card won't be able to connect to the network after the deactivation is completed, thus making it impossible consume data with it.</br>\nTransitioning to the inactive state may take a period of time. Until the transition is completed, the SIM card status will be <code>inactivating</code>.\n", 
        "parameters": [
          {
            "description": "Uniquely identifies the resource or object.", 
            "required": true, 
            "in": "path", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "SIM Cards"
        ], 
        "summary": "Request a SIM card deactivation", 
        "operationId": "SimCardDeactivate"
      }
    }, 
    "/calls/{call_control_id}/actions/gather_using_speak": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Gather using speak", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "voice", 
                  "language", 
                  "payload"
                ], 
                "type": "object", 
                "properties": {
                  "maximum_digits": {
                    "default": 128, 
                    "example": 10, 
                    "type": "integer", 
                    "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.", 
                    "format": "int32"
                  }, 
                  "terminating_digit": {
                    "default": "#", 
                    "type": "string", 
                    "description": "The digit used to terminate input if fewer than `maximum_digits` digits have been gathered.", 
                    "example": "#"
                  }, 
                  "payload": {
                    "type": "string", 
                    "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.", 
                    "example": "Say this on the call"
                  }, 
                  "language": {
                    "enum": [
                      "de-DE", 
                      "en-AU", 
                      "en-GB", 
                      "en-US", 
                      "es-ES", 
                      "fr-CA", 
                      "fr-FR", 
                      "it-IT", 
                      "ja-JP", 
                      "ko-KR", 
                      "nl-NL", 
                      "pt-BR", 
                      "sv-SE", 
                      "tr-TR"
                    ], 
                    "type": "string", 
                    "description": "The language you want spoken.", 
                    "example": "en-US"
                  }, 
                  "inter_digit_timeout_millis": {
                    "default": 5000, 
                    "example": 10000, 
                    "type": "integer", 
                    "description": "The number of milliseconds to wait for input between digits.", 
                    "format": "int32"
                  }, 
                  "minimum_digits": {
                    "default": 1, 
                    "example": 1, 
                    "type": "integer", 
                    "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.", 
                    "format": "int32"
                  }, 
                  "valid_digits": {
                    "default": "0123456789#*", 
                    "type": "string", 
                    "description": "A list of all digits accepted as valid.", 
                    "example": "123"
                  }, 
                  "timeout_millis": {
                    "default": 60000, 
                    "example": 60000, 
                    "type": "integer", 
                    "description": "The number of milliseconds to wait for a DTMF response after speak ends before a replaying the sound file.", 
                    "format": "int32"
                  }, 
                  "invalid_payload": {
                    "type": "string", 
                    "description": "The text or SSML to be converted into speech when digits don't match the `valid_digits` parameter or the number of digits is not between `min` and `max`. There is a 5,000 character limit.", 
                    "example": "Say this on the call"
                  }, 
                  "service_level": {
                    "default": "premium", 
                    "enum": [
                      "basic", 
                      "premium"
                    ], 
                    "type": "string", 
                    "description": "This parameter impacts speech quality, language options and payload types. When using `basic`, only the `en-US` language and payload type `text` are allowed.", 
                    "example": "premium"
                  }, 
                  "payload_type": {
                    "default": "text", 
                    "enum": [
                      "text", 
                      "ssml"
                    ], 
                    "type": "string", 
                    "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).", 
                    "example": "ssml"
                  }, 
                  "voice": {
                    "enum": [
                      "male", 
                      "female"
                    ], 
                    "type": "string", 
                    "description": "The gender of the voice used to speak back the text.", 
                    "example": "female"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "maximum_tries": {
                    "default": 3, 
                    "example": 3, 
                    "type": "integer", 
                    "description": "The maximum number of times that a file should be played back if there is no input from the user on the call.", 
                    "format": "int32"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Gather using speak with all parameters request"
              }
            }
          }, 
          "required": true, 
          "description": "Gather using speak request"
        }, 
        "callbacks": {
          "callGatherEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "digits": {
                                "type": "string", 
                                "example": "5503", 
                                "description": "The received DTMF digit or symbol."
                              }, 
                              "status": {
                                "enum": [
                                  "valid", 
                                  "invalid", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "valid", 
                                "description": "Reflects how command ended."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.gather.ended"
                            ], 
                            "type": "string", 
                            "example": "call.gather.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callDtmfReceived": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "digit": {
                                "type": "string", 
                                "example": "#", 
                                "description": "The received DTMF digit or symbol."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Uniquely identifies the resource or object."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.dtmf.received"
                            ], 
                            "type": "string", 
                            "example": "call.dtmf.received", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlGatherUsingSpeak", 
        "description": "Convert text to speech and play it on the call until the required DTMF signals are gathered to build interactive menus.\n\nYou can pass a list of valid digits along with an 'invalid_payload', which will be played back at the beginning of each prompt. Speech will be interrupted when a DTMF signal is received. The [Answer](/docs/api/v2/call-control/Call-Commands#CallControlAnswer) command must be issued before the `gather_using_speak` command.\n\n**Expected Webhooks:**\n\n- `call.dtmf.received` (you may receive many of these webhooks)\n- `call.gather.ended`\n"
      }
    }, 
    "/calls/{call_control_id}/actions/record_stop": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Recording stop", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Strop Recording request"
              }
            }
          }, 
          "required": true, 
          "description": "Answer call request"
        }, 
        "callbacks": {
          "callRecordingSaved": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "recording_started_at": {
                                "format": "date-time", 
                                "type": "string", 
                                "description": "ISO-8601 datetime of when recording started.", 
                                "example": "2018-02-02T22:20:27.521992Z"
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "recording_urls": {
                                "type": "object", 
                                "description": "Recording URLs in requested format valid for 10 minutes. After 10 minutes, you may retrieve recordings via API using Reports -> Call Recordings documentation, or via Mission Control under Reporting -> Recordings.", 
                                "properties": {
                                  "wav": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `wav` format.", 
                                    "example": "http://example.com/recording.wav"
                                  }, 
                                  "mp3": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `mp3` format.", 
                                    "example": "http://example.com/recording.mp3"
                                  }
                                }
                              }, 
                              "recording_ended_at": {
                                "format": "date-time", 
                                "type": "string", 
                                "description": "ISO-8601 datetime of when recording ended.", 
                                "example": "2018-02-02T22:25:27.521992Z"
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "public_recording_urls": {
                                "type": "object", 
                                "description": "Recording URLs in requested format. The URL is valid for as long as the file exists. For security purposes, this feature is activated on a per request basis.  Please contact customer support with your Account ID to request activation.", 
                                "properties": {
                                  "wav": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `wav` format.", 
                                    "example": "http://example.com/recording.wav"
                                  }, 
                                  "mp3": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `mp3` format.", 
                                    "example": "http://example.com/recording.mp3"
                                  }
                                }
                              }, 
                              "channels": {
                                "enum": [
                                  "single", 
                                  "dual"
                                ], 
                                "type": "string", 
                                "example": "single", 
                                "description": "Whether recording was recorded in `single` or `dual` channel."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.recording.saved"
                            ], 
                            "type": "string", 
                            "example": "call.recording.saved", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlRecordStop", 
        "description": "Stop recording the call.\n\n**Expected Webhooks:**\n\n- `call.recording.saved`\n"
      }
    }, 
    "/regulatory_requirements/{requirement_id}": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "field_type": {
                          "enum": [
                            "text field", 
                            "file upload", 
                            "address", 
                            "datetime"
                          ], 
                          "type": "string"
                        }, 
                        "requirement_type": {
                          "enum": [
                            "entity identification", 
                            "end user address", 
                            "end user proof of address"
                          ], 
                          "type": "string"
                        }, 
                        "description": {
                          "type": "string"
                        }, 
                        "label": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number order regulatory requirement was found"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number order regulatory requirement id", 
            "name": "requirement_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Order Regulatory Requirements"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Gets a single Number Order Regulatory Requirement", 
        "operationId": "retrieveNumberOrderRegulatoryRequirement", 
        "description": "Gets a single Number Order Regulatory Requirement"
      }
    }, 
    "/calls/{call_control_id}/actions/fork_start": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Forking start", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "rx": {
                    "type": "string", 
                    "description": "The network target, <udp:ip_address:port>, where the call's incoming RTP media packets should be forwarded.", 
                    "example": "192.0.2.1:9000"
                  }, 
                  "target": {
                    "type": "string", 
                    "description": "The network target, <udp:ip_address:port>, where the call's RTP media packets should be forwarded. Both incoming and outgoing media packets will be delivered to the specified target, and information about the stream will be included in the encapsulation protocol header, including the direction (0 = inbound; 1 = outbound), leg (0 = A-leg; 1 = B-leg), and call_leg_id.", 
                    "example": "udp:192.0.2.1:9000"
                  }, 
                  "tx": {
                    "type": "string", 
                    "description": "The network target, <udp:ip_address:port>, where the call's outgoing RTP media packets should be forwarded.", 
                    "example": "192.0.2.1:9001"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Start Forking request"
              }
            }
          }, 
          "required": true, 
          "description": "Fork media request"
        }, 
        "callbacks": {
          "callForkStopped": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.fork.stopped"
                            ], 
                            "type": "string", 
                            "example": "call.fork.stopped", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callForkStarted": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.fork.started"
                            ], 
                            "type": "string", 
                            "example": "call.fork.started", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlForkStart", 
        "description": "Call forking allows you to stream the media from a call to a specific target in realtime. \nThis stream can be used to enable realtime audio analysis to support a \nvariety of use cases, including fraud detection, or the creation of AI-generated audio responses. \nRequests must specify either the `target` attribute or the `rx` and `tx` attributes.\n\n**Expected Webhooks:**\n\n- `call.fork.started`\n- `call.fork.stopped`\n\n**Simple Telnyx RTP Encapsulation Protocol (STREP)**\n\n*Note: This header/encapsulation is not used when the `rx` and `tx`\nparameters have been specified; it only applies when media is forked\nusing the `target` attribute.*\n\nIf the destination for forked media is specified using the \"target\"\nattribute, the RTP will be encapsulated in an extra Telnyx protocol,\nwhich adds a 24 byte header to the RTP payload in each packet. The STREP\nheader includes the Call Control `call_leg_id` for stream\nidentification, along with bits that represent the direction (inbound or\noutbound) of the media. This 24-byte header sits between the UDP header\nand the RTP header.\n\nThe STREP header makes it possible to fork RTP for multiple calls (or\ntwo RTP streams for the same call) to the same IP:port, where the\nstreams can be demultiplexed by your application using the information\nin the header. Of course, it's still possible to ignore this header\ncompletely, for example, if sending forked media for different calls to\ndifferent ports or IP addresses. In this case, simply strip 24 bytes\n(or use the second byte to find the header length) from the received UDP\npayload to get the RTP (RTP header and payload).\n\n```\nSTREP Specification\n\n  0                   1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |1 1|Version|L|D|    HeaderLen  |  reserved (2 bytes)           |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |       reserved (4 bytes, for UDP ports or anything else)      |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |               The call_leg_id                                 |\n |                   from Call Control                           |\n |                       (128 bits / 16 bytes)                   |\n |                           (this is binary data)               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n 11\n   Static bits 11, always set to 11 to easily distinguish forked media\n   from RTP (10) and T.38 media (usually 00) and SIP (which begins\n   with a capital letter, so begins with bits 01). This is a magic number.\n\n Version\n   Four bits to indicate the version number of the protocol, starting at 0001.\n\n L\n   One bit to represent the leg of the call (A or B).\n   0 represents the A (first) leg of the call.\n   1 represents the B (second) leg of the call.\n\n D\n   One bit to represent the direction of this RTP stream.\n   0 represents media received by Telnyx.\n   1 represents media transmitted by Telnyx.\n\n HeaderLen (1 byte)\n   The length of the header in bytes.\n   Note that this value does not include the length of the payload. The total\n   size of the RTP can be calculated by subtracting the HeaderLen from the UDP\n   length (minus 8 for the UDP header).\n   In version 1, this value will always be 24.\n\n Reserved (6 bytes)\n   Reserved for future use and to make sure that the header is a multiple of 32 bits\n\n Call Leg ID\n   A 128-bit identifier for the call leg.\n   This is the call_leg_id from Call Control.\n```\n"
      }
    }, 
    "/messages/{id}": {
      "get": {
        "tags": [
          "Messages"
        ], 
        "summary": "Retrieve a message", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "valid_until": {
                          "format": "date-time", 
                          "type": "string", 
                          "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                          "nullable": true
                        }, 
                        "media": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "url": {
                                "type": "string", 
                                "format": "url"
                              }, 
                              "content_type": {
                                "format": "mime-type", 
                                "type": "string", 
                                "nullable": true
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "direction": {
                          "enum": [
                            "outbound"
                          ], 
                          "type": "string", 
                          "example": "outbound", 
                          "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                        }, 
                        "errors": {
                          "items": {
                            "required": [
                              "code", 
                              "title"
                            ], 
                            "properties": {
                              "source": {
                                "type": "object", 
                                "properties": {
                                  "pointer": {
                                    "type": "string", 
                                    "description": "JSON pointer (RFC6901) to the offending entity.", 
                                    "format": "json-pointer"
                                  }, 
                                  "parameter": {
                                    "type": "string", 
                                    "description": "Indicates which query parameter caused the error."
                                  }
                                }
                              }, 
                              "code": {
                                "type": "string", 
                                "format": "int"
                              }, 
                              "meta": {
                                "type": "object"
                              }, 
                              "detail": {
                                "type": "string"
                              }, 
                              "title": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                        }, 
                        "from": {
                          "type": "string", 
                          "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                          "format": "address"
                        }, 
                        "record_type": {
                          "enum": [
                            "message"
                          ], 
                          "type": "string", 
                          "example": "message", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "text": {
                          "type": "string", 
                          "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "to": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "queued", 
                                  "sending", 
                                  "sent", 
                                  "delivered", 
                                  "sending_failed", 
                                  "delivery_failed", 
                                  "delivery_unconfirmed"
                                ], 
                                "type": "string"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                "format": "address"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "type": {
                          "enum": [
                            "sms", 
                            "mms"
                          ], 
                          "type": "string", 
                          "description": "The type of message. This value can be either 'sms' or 'mms'."
                        }, 
                        "parts": {
                          "minimum": 1, 
                          "type": "integer", 
                          "maximum": 10, 
                          "description": "Number of parts into which the message's body must be split."
                        }, 
                        "line_type": {
                          "enum": [
                            "Wireline", 
                            "Wireless", 
                            "VoWiFi", 
                            "VoIP", 
                            "Pre-Paid Wireless"
                          ], 
                          "type": "string", 
                          "description": "The line-type of the receiver.", 
                          "nullable": true
                        }, 
                        "carrier": {
                          "type": "string", 
                          "description": "The carrier of the receiver.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this message will be sent.", 
                          "nullable": true
                        }, 
                        "use_profile_webhooks": {
                          "default": false, 
                          "type": "boolean", 
                          "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "cost": {
                          "type": "object", 
                          "properties": {
                            "currency": {
                              "type": "string", 
                              "description": "The ISO 4217 currency identifier.", 
                              "format": "iso4217"
                            }, 
                            "amount": {
                              "type": "string", 
                              "description": "The amount deducted from your account.", 
                              "format": "decimal"
                            }
                          }, 
                          "nullable": true
                        }
                      }, 
                      "example": {
                        "valid_until": "2019-01-23T18:10:02.574Z", 
                        "direction": "outbound", 
                        "errors": [], 
                        "from": "+18445550001", 
                        "record_type": "message", 
                        "text": "Hello, World!", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "to": [
                          {
                            "status": "queued", 
                            "updated_at": "2019-01-23T18:10:02.574Z", 
                            "address": "+18665550001"
                          }
                        ], 
                        "type": "sms", 
                        "parts": 1, 
                        "line_type": "Wireless", 
                        "carrier": "Verizon", 
                        "webhook_url": "https://www.example.com/hooks", 
                        "use_profile_webhooks": false, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": "https://www.example.com/callbacks", 
                        "cost": {
                          "currency": "USD", 
                          "amount": "1.23"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Detailed message object"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the message", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "operationId": "retrieveMessage"
      }
    }, 
    "/calls/{call_control_id}/actions/transfer": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Transfer call", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "to"
                ], 
                "type": "object", 
                "properties": {
                  "from": {
                    "type": "string", 
                    "description": "The `from` number to be used as the caller id presented to the destination (`to` number). The number should be in +E164 format. This attribute will default to the `from` number of the original call if omitted.", 
                    "example": "+18005550101"
                  }, 
                  "to": {
                    "type": "string", 
                    "description": "The DID or SIP URI to dial out and bridge to the given call.", 
                    "example": "+18005550100 or SIP:username@sip.telnyx.com"
                  }, 
                  "sip_auth_password": {
                    "type": "string", 
                    "description": "SIP Authentication password used for SIP challenges."
                  }, 
                  "answering_machine_detection": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Enables Answering Machine Detection. When a call is answered, Telnyx determines whether it was picked up by a human or a machine and sends an `call.machine.detection.ended` webhook with the analysis result."
                  }, 
                  "audio_url": {
                    "type": "string", 
                    "description": "The URL of a file to be played back to the callee before bridging the call. The URL can point to either a WAV or MP3 file.", 
                    "example": "http://www.example.com/sounds/greeting.wav"
                  }, 
                  "custom_headers": {
                    "items": {
                      "required": [
                        "name", 
                        "value"
                      ], 
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string", 
                          "description": "The name of the header to add.", 
                          "example": "head_1"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "The value of the header.", 
                          "example": "val_1"
                        }
                      }, 
                      "title": "Custom SIP header"
                    }, 
                    "type": "array", 
                    "description": "Custom headers to be added to the SIP INVITE.", 
                    "example": [
                      {
                        "name": "head_1", 
                        "value": "val_1"
                      }, 
                      {
                        "name": "head_2", 
                        "value": "val_2"
                      }
                    ]
                  }, 
                  "sip_auth_username": {
                    "type": "string", 
                    "description": "SIP Authentication username used for SIP challenges."
                  }, 
                  "timeout_secs": {
                    "default": 30, 
                    "example": 60, 
                    "type": "integer", 
                    "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being transferred. If the timeout is reached before an answer is received, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `timeout` will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.", 
                    "format": "int32"
                  }, 
                  "time_limit_secs": {
                    "default": 14400, 
                    "example": 600, 
                    "type": "integer", 
                    "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `time_limit` will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.", 
                    "format": "int32"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Transfer call request"
              }
            }
          }, 
          "required": true, 
          "description": "Transfer call request"
        }, 
        "callbacks": {
          "callBridged": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "bridged"
                                ], 
                                "type": "string", 
                                "example": "bridged", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.bridged"
                            ], 
                            "type": "string", 
                            "example": "call.bridged", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callInitiated": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "direction": {
                                "enum": [
                                  "incoming", 
                                  "outgoing"
                                ], 
                                "type": "string", 
                                "example": "incoming", 
                                "description": "Whether the call is `incoming` or `outgoing`."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "parked"
                                ], 
                                "type": "string", 
                                "example": "parked", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.initiated"
                            ], 
                            "type": "string", 
                            "example": "call.initiated", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callHangup": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "sip_hangup_cause": {
                                "type": "string", 
                                "example": "603", 
                                "description": "The reason the call was ended (SIP response code). If the SIP response is unavailable (in inbound calls for example) this is set to `unspecified`."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "hangup"
                                ], 
                                "type": "string", 
                                "example": "hangup", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "hangup_cause": {
                                "enum": [
                                  "call_rejected", 
                                  "normal_clearing", 
                                  "originator_cancel", 
                                  "timeout", 
                                  "time_limit", 
                                  "user_busy", 
                                  "not_found", 
                                  "unspecified"
                                ], 
                                "type": "string", 
                                "example": "call_rejected", 
                                "description": "The reason the call was ended (`call_rejected`, `normal_clearing`, `originator_cancel`, `timeout`, `time_limit`, `user_busy`, `not_found` or `unspecified`)."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.hangup"
                            ], 
                            "type": "string", 
                            "example": "call.hangup", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callAnswered": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "answered"
                                ], 
                                "type": "string", 
                                "example": "answered", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.answered"
                            ], 
                            "type": "string", 
                            "example": "call.answered", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlTransfer", 
        "description": "Transfer a call to a new destination. If the transfer is unsuccessful, a `call.hangup` webhook will be sent indicating that the transfer could not be completed. The original call will remain active and may be issued additional commands, potentially transfering the call to an alternate destination.\n\n**Expected Webhooks:**\n\n- `call.initiated`\n- `call.bridged` to Leg B\n- `call.answered` or `call.hangup`\n"
      }
    }, 
    "/number_reservations": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "status": {
                          "readOnly": true, 
                          "enum": [
                            "pending", 
                            "success", 
                            "failure"
                          ], 
                          "type": "string", 
                          "description": "The status of the entire reservation"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the numbers reservation was created"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string for when the number reservation was updated"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "phone_number_reservation"
                        }, 
                        "phone_numbers": {
                          "items": {
                            "properties": {
                              "phone_number": {
                                "type": "string", 
                                "example": "+13125000000", 
                                "format": "e164_phone_number"
                              }, 
                              "status": {
                                "readOnly": true, 
                                "enum": [
                                  "pending", 
                                  "success", 
                                  "failure"
                                ], 
                                "type": "string", 
                                "description": "The status of the phone number's reservation"
                              }, 
                              "created_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string denoting when the individual number reservation was created"
                              }, 
                              "updated_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string for when the the individual number reservation was updated"
                              }, 
                              "record_type": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "reserved_phone_number"
                              }, 
                              "id": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                                "format": "uuid"
                              }, 
                              "expired_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string for when the individual number reservation is going to expire"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "customer_reference": {
                          "type": "string", 
                          "description": "A customer reference string for customer look ups", 
                          "example": "MY REF 001"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number reservation has been created successfully"
          }
        }, 
        "tags": [
          "Number Reservations"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Create a Phone Number Reservation", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status": {
                    "readOnly": true, 
                    "enum": [
                      "pending", 
                      "success", 
                      "failure"
                    ], 
                    "type": "string", 
                    "description": "The status of the entire reservation"
                  }, 
                  "created_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string denoting when the numbers reservation was created"
                  }, 
                  "updated_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string for when the number reservation was updated"
                  }, 
                  "record_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "phone_number_reservation"
                  }, 
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "phone_number": {
                          "type": "string", 
                          "example": "+13125000000", 
                          "format": "e164_phone_number"
                        }, 
                        "status": {
                          "readOnly": true, 
                          "enum": [
                            "pending", 
                            "success", 
                            "failure"
                          ], 
                          "type": "string", 
                          "description": "The status of the phone number's reservation"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the individual number reservation was created"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string for when the the individual number reservation was updated"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "reserved_phone_number"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                          "format": "uuid"
                        }, 
                        "expired_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string for when the individual number reservation is going to expire"
                        }
                      }
                    }, 
                    "type": "array"
                  }, 
                  "customer_reference": {
                    "type": "string", 
                    "description": "A customer reference string for customer look ups", 
                    "example": "MY REF 001"
                  }, 
                  "id": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                    "format": "uuid"
                  }
                }
              }
            }
          }, 
          "required": true
        }, 
        "operationId": "createNumberReservations", 
        "description": "Creates a Phone Number Reservation for multiple numbers"
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "properties": {
                          "status": {
                            "readOnly": true, 
                            "enum": [
                              "pending", 
                              "success", 
                              "failure"
                            ], 
                            "type": "string", 
                            "description": "The status of the entire reservation"
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string denoting when the numbers reservation was created"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string for when the number reservation was updated"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "phone_number_reservation"
                          }, 
                          "phone_numbers": {
                            "items": {
                              "properties": {
                                "phone_number": {
                                  "type": "string", 
                                  "example": "+13125000000", 
                                  "format": "e164_phone_number"
                                }, 
                                "status": {
                                  "readOnly": true, 
                                  "enum": [
                                    "pending", 
                                    "success", 
                                    "failure"
                                  ], 
                                  "type": "string", 
                                  "description": "The status of the phone number's reservation"
                                }, 
                                "created_at": {
                                  "readOnly": true, 
                                  "format": "datetime", 
                                  "type": "string", 
                                  "example": "2018-01-01T00:00:00.000000Z", 
                                  "description": "An ISO 8901 datetime string denoting when the individual number reservation was created"
                                }, 
                                "updated_at": {
                                  "readOnly": true, 
                                  "format": "datetime", 
                                  "type": "string", 
                                  "example": "2018-01-01T00:00:00.000000Z", 
                                  "description": "An ISO 8901 datetime string for when the the individual number reservation was updated"
                                }, 
                                "record_type": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "reserved_phone_number"
                                }, 
                                "id": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                                  "format": "uuid"
                                }, 
                                "expired_at": {
                                  "readOnly": true, 
                                  "format": "datetime", 
                                  "type": "string", 
                                  "example": "2018-01-01T00:00:00.000000Z", 
                                  "description": "An ISO 8901 datetime string for when the individual number reservation is going to expire"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "customer_reference": {
                            "type": "string", 
                            "description": "A customer reference string for customer look ups", 
                            "example": "MY REF 001"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                            "format": "uuid"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Returns a list of number reservations"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "Filter number reservations by status", 
            "name": "filter[status]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number reservations later than this value", 
            "name": "filter[created_at][gt]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number reservations earlier than this value", 
            "name": "filter[created_at][lt]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number reservations having these phone numbers", 
            "name": "filter[phone_numbers.phone_number]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number reservations via the customer reference set", 
            "name": "filter[customer_reference]", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Reservations"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Retrieve multiple Number Reservations", 
        "operationId": "listNumberReservations", 
        "description": "Gets a paginated list of Phone Number Reservations"
      }
    }, 
    "/calls/{call_control_id}/actions/hangup": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Hangup call", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Hangup request"
              }
            }
          }, 
          "required": true, 
          "description": "Hangup request"
        }, 
        "callbacks": {
          "callRecordingSaved": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "recording_started_at": {
                                "format": "date-time", 
                                "type": "string", 
                                "description": "ISO-8601 datetime of when recording started.", 
                                "example": "2018-02-02T22:20:27.521992Z"
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "recording_urls": {
                                "type": "object", 
                                "description": "Recording URLs in requested format valid for 10 minutes. After 10 minutes, you may retrieve recordings via API using Reports -> Call Recordings documentation, or via Mission Control under Reporting -> Recordings.", 
                                "properties": {
                                  "wav": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `wav` format.", 
                                    "example": "http://example.com/recording.wav"
                                  }, 
                                  "mp3": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `mp3` format.", 
                                    "example": "http://example.com/recording.mp3"
                                  }
                                }
                              }, 
                              "recording_ended_at": {
                                "format": "date-time", 
                                "type": "string", 
                                "description": "ISO-8601 datetime of when recording ended.", 
                                "example": "2018-02-02T22:25:27.521992Z"
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "public_recording_urls": {
                                "type": "object", 
                                "description": "Recording URLs in requested format. The URL is valid for as long as the file exists. For security purposes, this feature is activated on a per request basis.  Please contact customer support with your Account ID to request activation.", 
                                "properties": {
                                  "wav": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `wav` format.", 
                                    "example": "http://example.com/recording.wav"
                                  }, 
                                  "mp3": {
                                    "nullable": true, 
                                    "type": "string", 
                                    "description": "Recording URL in requested `mp3` format.", 
                                    "example": "http://example.com/recording.mp3"
                                  }
                                }
                              }, 
                              "channels": {
                                "enum": [
                                  "single", 
                                  "dual"
                                ], 
                                "type": "string", 
                                "example": "single", 
                                "description": "Whether recording was recorded in `single` or `dual` channel."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.recording.saved"
                            ], 
                            "type": "string", 
                            "example": "call.recording.saved", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callHangup": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "sip_hangup_cause": {
                                "type": "string", 
                                "example": "603", 
                                "description": "The reason the call was ended (SIP response code). If the SIP response is unavailable (in inbound calls for example) this is set to `unspecified`."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "hangup"
                                ], 
                                "type": "string", 
                                "example": "hangup", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "hangup_cause": {
                                "enum": [
                                  "call_rejected", 
                                  "normal_clearing", 
                                  "originator_cancel", 
                                  "timeout", 
                                  "time_limit", 
                                  "user_busy", 
                                  "not_found", 
                                  "unspecified"
                                ], 
                                "type": "string", 
                                "example": "call_rejected", 
                                "description": "The reason the call was ended (`call_rejected`, `normal_clearing`, `originator_cancel`, `timeout`, `time_limit`, `user_busy`, `not_found` or `unspecified`)."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.hangup"
                            ], 
                            "type": "string", 
                            "example": "call.hangup", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlHangup", 
        "description": "Hang up the call.\n\n**Expected Webhooks:**\n\n- `call.hangup`\n- `call.recording.saved`\n"
      }
    }, 
    "/messaging_profiles": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string", 
                          "description": "A user friendly name for the messaging profile"
                        }, 
                        "number_pool_settings": {
                          "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "toll_free_weight", 
                            "long_code_weight", 
                            "skip_unhealthy"
                          ], 
                          "type": "object", 
                          "properties": {
                            "long_code_weight": {
                              "type": "number", 
                              "example": 1.0, 
                              "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "skip_unhealthy": {
                              "type": "boolean", 
                              "example": true, 
                              "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                            }, 
                            "toll_free_weight": {
                              "type": "number", 
                              "example": 10.0, 
                              "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "sticky_sender": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                            }, 
                            "geomatch": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                            }
                          }
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "webhook_api_version": {
                          "enum": [
                            "1", 
                            "2"
                          ], 
                          "type": "string", 
                          "description": "Determines which webhook format will be used, API v1 or API v2."
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "messaging_profile"
                          ], 
                          "type": "string", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "url_shortener_settings": {
                          "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "domain"
                          ], 
                          "type": "object", 
                          "properties": {
                            "domain": {
                              "type": "string", 
                              "example": "acct.fyi", 
                              "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                            }, 
                            "prefix": {
                              "type": "string", 
                              "example": "", 
                              "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                            }
                          }
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "whitelisted_destinations": {
                          "items": {
                            "pattern": "^[A-Z]{2}$", 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code."
                          }, 
                          "type": "array", 
                          "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this messaging profile will be sent.", 
                          "nullable": true
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "enabled": {
                          "type": "boolean", 
                          "description": "Specifies whether the messaging profile is enabled or not."
                        }
                      }, 
                      "example": {
                        "name": "Profile for Messages", 
                        "webhook_api_version": "2", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "enabled": true, 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "messaging_profile", 
                        "whitelisted_destinations": [
                          "US"
                        ], 
                        "webhook_url": null, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": null
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected messaging profile response to a valid request"
          }
        }, 
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "Create a messaging profile", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ], 
                "type": "object", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "description": "A user friendly name for the messaging profile"
                  }, 
                  "webhook_api_version": {
                    "default": "2", 
                    "enum": [
                      "1", 
                      "2"
                    ], 
                    "type": "string", 
                    "description": "Determines which webhook format will be used, API v1 or API v2."
                  }, 
                  "number_pool_settings": {
                    "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                    "nullable": true, 
                    "default": null, 
                    "required": [
                      "toll_free_weight", 
                      "long_code_weight", 
                      "skip_unhealthy"
                    ], 
                    "type": "object", 
                    "properties": {
                      "long_code_weight": {
                        "type": "number", 
                        "example": 1.0, 
                        "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                      }, 
                      "skip_unhealthy": {
                        "type": "boolean", 
                        "example": true, 
                        "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                      }, 
                      "toll_free_weight": {
                        "type": "number", 
                        "example": 10.0, 
                        "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                      }, 
                      "sticky_sender": {
                        "default": false, 
                        "type": "boolean", 
                        "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                      }, 
                      "geomatch": {
                        "default": false, 
                        "type": "boolean", 
                        "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                      }
                    }
                  }, 
                  "url_shortener_settings": {
                    "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                    "nullable": true, 
                    "default": null, 
                    "required": [
                      "domain"
                    ], 
                    "type": "object", 
                    "properties": {
                      "domain": {
                        "type": "string", 
                        "example": "acct.fyi", 
                        "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                      }, 
                      "prefix": {
                        "type": "string", 
                        "example": "", 
                        "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                      }
                    }
                  }, 
                  "enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Specifies whether the messaging profile is enabled or not."
                  }, 
                  "webhook_url": {
                    "default": "", 
                    "format": "url", 
                    "type": "string", 
                    "description": "The URL where webhooks related to this messaging profile will be sent.", 
                    "nullable": true
                  }, 
                  "webhook_failover_url": {
                    "default": "", 
                    "format": "url", 
                    "type": "string", 
                    "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                    "nullable": true
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "New Messaging Profile object"
        }, 
        "callbacks": {
          "inboundMessage": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "event_type": {
                            "enum": [
                              "message.received"
                            ], 
                            "type": "string", 
                            "example": "message.received", 
                            "description": "The type of event being delivered."
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "payload": {
                            "properties": {
                              "media": {
                                "items": {
                                  "type": "object", 
                                  "properties": {
                                    "url": {
                                      "type": "string", 
                                      "format": "url"
                                    }, 
                                    "hash_sha256": {
                                      "minLength": 32, 
                                      "type": "string", 
                                      "maxLength": 32
                                    }, 
                                    "content_type": {
                                      "type": "string", 
                                      "format": "mime-type"
                                    }, 
                                    "size": {
                                      "type": "integer"
                                    }
                                  }
                                }, 
                                "type": "array"
                              }, 
                              "direction": {
                                "enum": [
                                  "inbound"
                                ], 
                                "type": "string", 
                                "example": "inbound", 
                                "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                              }, 
                              "from": {
                                "type": "string", 
                                "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                                "format": "address"
                              }, 
                              "messaging_profile_id": {
                                "type": "string", 
                                "description": "Unique identifier for a messaging profile.", 
                                "format": "uuid"
                              }, 
                              "record_type": {
                                "enum": [
                                  "message"
                                ], 
                                "type": "string", 
                                "example": "message", 
                                "description": "Identifies the type of the resource."
                              }, 
                              "cc": {
                                "items": {
                                  "type": "string", 
                                  "format": "address"
                                }, 
                                "type": "array"
                              }, 
                              "text": {
                                "type": "string", 
                                "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                              }, 
                              "created_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was created.", 
                                "format": "date-time"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "to": {
                                "type": "string", 
                                "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                "format": "address"
                              }, 
                              "parts": {
                                "type": "integer", 
                                "example": 1, 
                                "description": "The ISO 4217 currency identifier."
                              }, 
                              "line_type": {
                                "enum": [
                                  "Wireline", 
                                  "Wireless", 
                                  "VoWiFi", 
                                  "VoIP", 
                                  "Pre-Paid Wireless"
                                ], 
                                "type": "string", 
                                "description": "The line-type of the sender.", 
                                "nullable": true
                              }, 
                              "carrier": {
                                "type": "string", 
                                "description": "The carrier of the sender.", 
                                "nullable": true
                              }, 
                              "type": {
                                "enum": [
                                  "sms", 
                                  "mms"
                                ], 
                                "type": "string", 
                                "description": "The type of message. This value can be either 'sms' or 'mms'."
                              }, 
                              "id": {
                                "type": "string", 
                                "description": "Uniquely identifies the resource or object.", 
                                "format": "uuid"
                              }, 
                              "cost": {
                                "type": "object", 
                                "properties": {
                                  "currency": {
                                    "type": "string", 
                                    "description": "The ISO 4217 currency identifier.", 
                                    "format": "iso4217"
                                  }, 
                                  "amount": {
                                    "type": "string", 
                                    "description": "The amount deducted from your account.", 
                                    "format": "decimal"
                                  }
                                }
                              }
                            }
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "event_type": {
                            "type": "string", 
                            "example": "message.delivery_update"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "created_at": {
                            "type": "string", 
                            "format": "date-time"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "valid_until": {
                                "format": "date-time", 
                                "type": "string", 
                                "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                                "nullable": true
                              }, 
                              "media": {
                                "items": {
                                  "type": "object", 
                                  "properties": {
                                    "url": {
                                      "type": "string", 
                                      "format": "url"
                                    }, 
                                    "content_type": {
                                      "format": "mime-type", 
                                      "type": "string", 
                                      "nullable": true
                                    }
                                  }
                                }, 
                                "type": "array"
                              }, 
                              "direction": {
                                "enum": [
                                  "outbound"
                                ], 
                                "type": "string", 
                                "example": "outbound", 
                                "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                              }, 
                              "errors": {
                                "items": {
                                  "required": [
                                    "code", 
                                    "title"
                                  ], 
                                  "properties": {
                                    "source": {
                                      "type": "object", 
                                      "properties": {
                                        "pointer": {
                                          "type": "string", 
                                          "description": "JSON pointer (RFC6901) to the offending entity.", 
                                          "format": "json-pointer"
                                        }, 
                                        "parameter": {
                                          "type": "string", 
                                          "description": "Indicates which query parameter caused the error."
                                        }
                                      }
                                    }, 
                                    "code": {
                                      "type": "string", 
                                      "format": "int"
                                    }, 
                                    "meta": {
                                      "type": "object"
                                    }, 
                                    "detail": {
                                      "type": "string"
                                    }, 
                                    "title": {
                                      "type": "string"
                                    }
                                  }
                                }, 
                                "type": "array", 
                                "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                              }, 
                              "from": {
                                "type": "string", 
                                "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                                "format": "address"
                              }, 
                              "record_type": {
                                "enum": [
                                  "message"
                                ], 
                                "type": "string", 
                                "example": "message", 
                                "description": "Identifies the type of the resource."
                              }, 
                              "text": {
                                "type": "string", 
                                "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                              }, 
                              "created_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was created.", 
                                "format": "date-time"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "to": {
                                "items": {
                                  "type": "object", 
                                  "properties": {
                                    "status": {
                                      "enum": [
                                        "queued", 
                                        "sending", 
                                        "sent", 
                                        "delivered", 
                                        "sending_failed", 
                                        "delivery_failed", 
                                        "delivery_unconfirmed"
                                      ], 
                                      "type": "string"
                                    }, 
                                    "updated_at": {
                                      "type": "string", 
                                      "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                      "format": "date-time"
                                    }, 
                                    "address": {
                                      "type": "string", 
                                      "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                      "format": "address"
                                    }
                                  }
                                }, 
                                "type": "array"
                              }, 
                              "type": {
                                "enum": [
                                  "sms", 
                                  "mms"
                                ], 
                                "type": "string", 
                                "description": "The type of message. This value can be either 'sms' or 'mms'."
                              }, 
                              "parts": {
                                "minimum": 1, 
                                "type": "integer", 
                                "maximum": 10, 
                                "description": "Number of parts into which the message's body must be split."
                              }, 
                              "line_type": {
                                "enum": [
                                  "Wireline", 
                                  "Wireless", 
                                  "VoWiFi", 
                                  "VoIP", 
                                  "Pre-Paid Wireless"
                                ], 
                                "type": "string", 
                                "description": "The line-type of the receiver.", 
                                "nullable": true
                              }, 
                              "carrier": {
                                "type": "string", 
                                "description": "The carrier of the receiver.", 
                                "nullable": true
                              }, 
                              "webhook_url": {
                                "format": "url", 
                                "type": "string", 
                                "description": "The URL where webhooks related to this message will be sent.", 
                                "nullable": true
                              }, 
                              "use_profile_webhooks": {
                                "default": false, 
                                "type": "boolean", 
                                "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                              }, 
                              "id": {
                                "type": "string", 
                                "description": "Uniquely identifies the resource or object.", 
                                "format": "uuid"
                              }, 
                              "webhook_failover_url": {
                                "format": "url", 
                                "type": "string", 
                                "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                                "nullable": true
                              }, 
                              "cost": {
                                "type": "object", 
                                "properties": {
                                  "currency": {
                                    "type": "string", 
                                    "description": "The ISO 4217 currency identifier.", 
                                    "format": "iso4217"
                                  }, 
                                  "amount": {
                                    "type": "string", 
                                    "description": "The amount deducted from your account.", 
                                    "format": "decimal"
                                  }
                                }, 
                                "nullable": true
                              }
                            }, 
                            "example": {
                              "valid_until": "2019-01-23T18:10:02.574Z", 
                              "direction": "outbound", 
                              "errors": [], 
                              "from": "+18445550001", 
                              "record_type": "message", 
                              "text": "Hello, World!", 
                              "created_at": "2019-01-23T18:10:02.574Z", 
                              "updated_at": "2019-01-23T18:10:02.574Z", 
                              "to": [
                                {
                                  "status": "queued", 
                                  "updated_at": "2019-01-23T18:10:02.574Z", 
                                  "address": "+18665550001"
                                }
                              ], 
                              "type": "sms", 
                              "parts": 1, 
                              "line_type": "Wireless", 
                              "carrier": "Verizon", 
                              "webhook_url": "https://www.example.com/hooks", 
                              "use_profile_webhooks": false, 
                              "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                              "webhook_failover_url": "https://www.example.com/callbacks", 
                              "cost": {
                                "currency": "USD", 
                                "amount": "1.23"
                              }
                            }
                          }, 
                          "id": {
                            "type": "string", 
                            "format": "uuid"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "createMessagingProfile"
      }, 
      "get": {
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "List all messaging profiles", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "name": {
                            "type": "string", 
                            "description": "A user friendly name for the messaging profile"
                          }, 
                          "number_pool_settings": {
                            "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                            "nullable": true, 
                            "default": null, 
                            "required": [
                              "toll_free_weight", 
                              "long_code_weight", 
                              "skip_unhealthy"
                            ], 
                            "type": "object", 
                            "properties": {
                              "long_code_weight": {
                                "type": "number", 
                                "example": 1.0, 
                                "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                              }, 
                              "skip_unhealthy": {
                                "type": "boolean", 
                                "example": true, 
                                "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                              }, 
                              "toll_free_weight": {
                                "type": "number", 
                                "example": 10.0, 
                                "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                              }, 
                              "sticky_sender": {
                                "default": false, 
                                "type": "boolean", 
                                "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                              }, 
                              "geomatch": {
                                "default": false, 
                                "type": "boolean", 
                                "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                              }
                            }
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "webhook_api_version": {
                            "enum": [
                              "1", 
                              "2"
                            ], 
                            "type": "string", 
                            "description": "Determines which webhook format will be used, API v1 or API v2."
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "organization_id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Unique identifier for the organization that owns the resource.", 
                            "format": "uuid"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "enum": [
                              "messaging_profile"
                            ], 
                            "type": "string", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "url_shortener_settings": {
                            "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                            "nullable": true, 
                            "default": null, 
                            "required": [
                              "domain"
                            ], 
                            "type": "object", 
                            "properties": {
                              "domain": {
                                "type": "string", 
                                "example": "acct.fyi", 
                                "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                              }, 
                              "prefix": {
                                "type": "string", 
                                "example": "", 
                                "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                              }
                            }
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                            "nullable": true
                          }, 
                          "whitelisted_destinations": {
                            "items": {
                              "pattern": "^[A-Z]{2}$", 
                              "type": "string", 
                              "description": "ISO 3166-1 alpha-2 country code."
                            }, 
                            "type": "array", 
                            "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.", 
                            "nullable": true
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The URL where webhooks related to this messaging profile will be sent.", 
                            "nullable": true
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }, 
                          "enabled": {
                            "type": "boolean", 
                            "description": "Specifies whether the messaging profile is enabled or not."
                          }
                        }, 
                        "example": {
                          "name": "Profile for Messages", 
                          "webhook_api_version": "2", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "enabled": true, 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "record_type": "messaging_profile", 
                          "whitelisted_destinations": [
                            "US"
                          ], 
                          "webhook_url": null, 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "webhook_failover_url": null
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "A paginated array of Messaging Profiles"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }, 
          {
            "in": "query", 
            "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.", 
            "name": "page[token]", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "operationId": "listMessagingProfiles"
      }
    }, 
    "/conferences/{id}/actions/unmute": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "title": "Command result", 
                      "required": [
                        "result"
                      ], 
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Conference command response"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "query", 
            "name": "id", 
            "schema": {
              "type": "object", 
              "properties": {
                "call_control_ids": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array", 
                  "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be muted."
                }
              }, 
              "title": "Mute Conference participants request"
            }
          }
        ], 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "Unmute a conference participant.", 
        "security": [
          {
            "basicAuth": []
          }, 
          {
            "bearerAuth": []
          }
        ], 
        "operationId": "UnmuteConference", 
        "description": "Unmute a list of participants in a conference call"
      }
    }, 
    "/conferences": {
      "post": {
        "description": "Create a conference from an existing call leg using a `call_control_id` and a conference name. Upon creating the conference, the call will be automatically bridged to the conference. Conferences will expire after all participants have left the conference or after 4 hours regardless of the number of active participants.\n\n**Expected Webhooks:**\n\n- `conference.participant.joined`\n- `conference.participant.left`\n", 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "Create conference", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "call_control_id", 
                  "name"
                ], 
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "call_control_id": {
                    "type": "string", 
                    "description": "Unique identifier and token for controlling the call", 
                    "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                  }, 
                  "name": {
                    "type": "string", 
                    "description": "Name of the conference", 
                    "example": "Business"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same `command_id` as one that has already been executed.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Create conference request"
              }
            }
          }, 
          "required": true, 
          "description": "Create a conference"
        }, 
        "callbacks": {
          "conferenceParticipantJoined": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "conference_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "Conference ID that the participant joined."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "conference.participant.joined"
                            ], 
                            "type": "string", 
                            "example": "conference.participant.joined", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "conferenceParticipantLeft": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "conference_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "Conference ID that the participant joined."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "conference.participant.left"
                            ], 
                            "type": "string", 
                            "example": "conference.participant.left", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CreateConference", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "required": [
                        "record_type", 
                        "id", 
                        "name", 
                        "created_at", 
                        "expires_at"
                      ], 
                      "type": "object", 
                      "properties": {
                        "record_type": {
                          "enum": [
                            "conference"
                          ], 
                          "type": "string"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date of when the conference was created"
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "Unique identifier of the conference"
                        }, 
                        "expires_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date of when the conference will expire"
                        }, 
                        "name": {
                          "type": "string", 
                          "description": "Name of the conference"
                        }
                      }, 
                      "example": {
                        "record_type": "conference", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "expires_at": "2019-01-23T18:10:02.574Z", 
                        "name": "All hands meeting"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected response to successful conference creation"
          }
        }
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "required": [
                          "record_type", 
                          "id", 
                          "name", 
                          "created_at", 
                          "expires_at"
                        ], 
                        "type": "object", 
                        "properties": {
                          "record_type": {
                            "enum": [
                              "conference"
                            ], 
                            "type": "string"
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date of when the conference was created"
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "Unique identifier of the conference"
                          }, 
                          "expires_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date of when the conference will expire"
                          }, 
                          "name": {
                            "type": "string", 
                            "description": "Name of the conference"
                          }
                        }, 
                        "example": {
                          "record_type": "conference", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "expires_at": "2019-01-23T18:10:02.574Z", 
                          "name": "All hands meeting"
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "A paginated array of conferences"
          }
        }, 
        "description": "Lists conferences. Conferences are created on demand, and will expire after all participants have left the conference or after 4 hours regardless of the number of active participants. Conferences are listed in descending order by `expires_at`.", 
        "parameters": [
          {
            "in": "query", 
            "description": "If present, conferences will be filtered to those with a matching `name` attribute. Matching is case-sensitive", 
            "name": "filter[name]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }
        ], 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "List conferences", 
        "operationId": "GetConferences"
      }
    }, 
    "/calls/{call_control_id}/actions/speak": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Speak text", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "payload", 
                  "voice", 
                  "language"
                ], 
                "type": "object", 
                "properties": {
                  "service_level": {
                    "default": "premium", 
                    "enum": [
                      "basic", 
                      "premium"
                    ], 
                    "type": "string", 
                    "description": "This parameter impacts speech quality, language options and payload types. When using `basic`, only the `en-US` language and payload type `text` are allowed.", 
                    "example": "premium"
                  }, 
                  "language": {
                    "enum": [
                      "de-DE", 
                      "en-AU", 
                      "en-GB", 
                      "en-US", 
                      "es-ES", 
                      "fr-CA", 
                      "fr-FR", 
                      "it-IT", 
                      "ja-JP", 
                      "ko-KR", 
                      "nl-NL", 
                      "pt-BR", 
                      "sv-SE", 
                      "tr-TR"
                    ], 
                    "type": "string", 
                    "description": "The language you want spoken.", 
                    "example": "en-US"
                  }, 
                  "stop": {
                    "default": null, 
                    "type": "string", 
                    "description": "When specified, it stops the current audio being played.  Specify `current` to stop the current audio being played, and to play the next file in the queue. Specify `all` to stop the current audio file being played and to also clear all audio files from the queue.", 
                    "example": "current"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "payload_type": {
                    "default": "text", 
                    "enum": [
                      "text", 
                      "ssml"
                    ], 
                    "type": "string", 
                    "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).", 
                    "example": "ssml"
                  }, 
                  "voice": {
                    "enum": [
                      "male", 
                      "female"
                    ], 
                    "type": "string", 
                    "description": "The gender of the voice used to speak back the text.", 
                    "example": "female"
                  }, 
                  "payload": {
                    "type": "string", 
                    "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.", 
                    "example": "Say this on the call"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Speak request"
              }
            }
          }, 
          "required": true, 
          "description": "Speak request"
        }, 
        "callbacks": {
          "callSpeakEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "completed", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "completed", 
                                "description": "Reflects how `speak` ended."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.speak.ended"
                            ], 
                            "type": "string", 
                            "example": "call.speak.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callSpeakStarted": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.speak.started"
                            ], 
                            "type": "string", 
                            "example": "call.speak.started", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlSpeak", 
        "description": "Convert text to speech and play it back on the call. If multiple speak text commands are issued consecutively, the audio files will be placed in a queue awaiting playback.\n\n**Expected Webhooks:**\n\n- `call.speak.started`\n- `call.speak.ended`\n"
      }
    }, 
    "/calls/{call_control_id}/actions/fork_stop": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Forking stop", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Stop Forking request"
              }
            }
          }, 
          "required": true, 
          "description": "Stop forking media request"
        }, 
        "callbacks": {
          "callForkStopped": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.fork.stopped"
                            ], 
                            "type": "string", 
                            "example": "call.fork.stopped", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlForkStop", 
        "description": "Stop forking a call.\n\n**Expected Webhooks:**\n\n- `call.fork.stopped`\n"
      }
    }, 
    "/conferences/{id}/actions/hold": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "title": "Command result", 
                      "required": [
                        "result"
                      ], 
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Conference command response"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "query", 
            "name": "id", 
            "schema": {
              "type": "object", 
              "properties": {
                "audio_url": {
                  "type": "string", 
                  "example": "http://example.com/message.wav", 
                  "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
                }, 
                "call_control_ids": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array", 
                  "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be placed on hold."
                }
              }, 
              "title": "Hold Conference participants request"
            }
          }
        ], 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "Hold a conference participant.", 
        "security": [
          {
            "basicAuth": []
          }, 
          {
            "bearerAuth": []
          }
        ], 
        "operationId": "HoldConference", 
        "description": "Hold a list of participants in a conference call"
      }
    }, 
    "/regulatory_requirements": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "properties": {
                          "field_type": {
                            "enum": [
                              "text field", 
                              "file upload", 
                              "address", 
                              "datetime"
                            ], 
                            "type": "string"
                          }, 
                          "requirement_type": {
                            "enum": [
                              "entity identification", 
                              "end user address", 
                              "end user proof of address"
                            ], 
                            "type": "string"
                          }, 
                          "description": {
                            "type": "string"
                          }, 
                          "label": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Returns a list of number order regulatory requirements"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "Filter number order regulatory requirements by requirement_id", 
            "name": "filter[requirement_id]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number order regulatory requirements by field_type", 
            "name": "filter[field_type]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number order regulatory requirements by requirement_type", 
            "name": "filter[requirement_type]", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Order Regulatory Requirements"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Gets a paginated list of Number Order Regulatory Requirements", 
        "operationId": "listNumberOrderRegulatoryRequirements", 
        "description": "Gets a paginated list of Number Order Regulatory Requirements"
      }
    }, 
    "/sim_cards": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "status": {
                            "enum": [
                              "activating", 
                              "active", 
                              "inactivating", 
                              "inactive", 
                              "data_limit_exceeded"
                            ], 
                            "type": "string", 
                            "description": "The current status of the SIM card. It will be one of: </br>\n<ul>\n  <li><code>activating</code> - the card is being activated</li>\n  <li><code>active</code> - the card is active and ready for use</li>\n  <li><code>inactivating</code> - the card is being inactivated</li>\n  <li><code>inactive</code> - the card has been inactivated and cannot be used</li>\n  <li><code>data_limit_exceeded</code> - the card has exceeded its data consumption limit</li>\n</ul>\nTransitioning between the active and inactive states may take a period of time.\n", 
                            "example": "active"
                          }, 
                          "tags": {
                            "items": {
                              "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Searchable tags associated with the SIM card", 
                            "example": [
                              "personal", 
                              "customers", 
                              "active-customers"
                            ]
                          }, 
                          "msisdn": {
                            "type": "string", 
                            "description": "Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. </br>\nMSISDN is defined by the E.164 numbering plan. It includes a country code and a National Destination Code which identifies the subscriber's operator.\n", 
                            "example": "+13109976224"
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "example": "2018-02-02T22:25:27.521Z"
                          }, 
                          "updated_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "example": "2018-02-02T22:2520:27.521Z"
                          }, 
                          "record_type": {
                            "type": "string", 
                            "description": "Identifies the type of the resource.", 
                            "example": "sim_card"
                          }, 
                          "iccid": {
                            "type": "string", 
                            "description": "The ICCID is the identifier of the specific SIM card/chip. Each SIM is internationally identified by its integrated circuit card identifier (ICCID). ICCIDs are stored in the SIM card's memory and are also engraved or printed on the SIM card body during a process called personalization.\n", 
                            "example": "89310410106543789301"
                          }, 
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
                            "description": "Uniquely identifies the resource or object."
                          }, 
                          "imsi": {
                            "type": "string", 
                            "description": "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). </br>\nMobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the appropriate network. It is used to acquire the details of the mobile in the Home Location Register (HLR) or the Visitor Location Register (VLR).\n", 
                            "example": "081932214823362973"
                          }, 
                          "sim_card_group_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
                            "description": "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource."
                          }
                        }, 
                        "title": "SIMCard"
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Successful response"
          }
        }, 
        "description": "Get all SIM cards belonging to the user that match the given filters.", 
        "parameters": [
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }, 
          {
            "description": "A list of SIM card tags to filter on.</br></br>\nIf the SIM card contains <b><i>all</i></b> of the given <code>tags</code> they will be found.</br></br>\nFor example, if the SIM cards have the following tags: <ul>\n  <li><code>['customers', 'staff', 'test']</code>\n  <li><code>['test']</code></li>\n  <li><code>['customers']</code></li>\n</ul>\nSearching for <code>['customers', 'test']</code> returns only the first because it's the only one with both tags.</br> Searching for <code>test</code> returns the first two SIMs, because both of them have such tag.</br> Searching for <code>customers</code> returns the first and last SIMs.</br>\n", 
            "required": false, 
            "in": "query", 
            "name": "filter[tags]", 
            "schema": {
              "items": {
                "type": "string"
              }, 
              "type": "array", 
              "example": [
                "personal", 
                "customers", 
                "active-customers"
              ]
            }
          }, 
          {
            "description": "A search string to partially match for the SIM card's ICCID.", 
            "required": false, 
            "in": "query", 
            "name": "filter[iccid]", 
            "schema": {
              "type": "string", 
              "example": "89310410106543789301"
            }
          }, 
          {
            "description": "A valid SIM card group ID.", 
            "required": false, 
            "in": "query", 
            "name": "filter[sim_card_group_id]", 
            "schema": {
              "type": "string", 
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "SIM Cards"
        ], 
        "summary": "Get all SIM cards", 
        "operationId": "SimCardsGet"
      }
    }, 
    "/conferences/{id}/actions/unhold": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "title": "Command result", 
                      "required": [
                        "result"
                      ], 
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Conference command response"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "query", 
            "name": "id", 
            "schema": {
              "type": "object", 
              "properties": {
                "audio_url": {
                  "type": "string", 
                  "example": "http://example.com/message.wav", 
                  "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
                }, 
                "call_control_ids": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array", 
                  "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be placed on hold."
                }
              }, 
              "title": "Hold Conference participants request"
            }
          }
        ], 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "Unhold a conference participant.", 
        "security": [
          {
            "basicAuth": []
          }, 
          {
            "bearerAuth": []
          }
        ], 
        "operationId": "UnholdConference", 
        "description": "Unhold a list of participants in a conference call"
      }
    }, 
    "/sim_cards/{id}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "status": {
                          "enum": [
                            "activating", 
                            "active", 
                            "inactivating", 
                            "inactive", 
                            "data_limit_exceeded"
                          ], 
                          "type": "string", 
                          "description": "The current status of the SIM card. It will be one of: </br>\n<ul>\n  <li><code>activating</code> - the card is being activated</li>\n  <li><code>active</code> - the card is active and ready for use</li>\n  <li><code>inactivating</code> - the card is being inactivated</li>\n  <li><code>inactive</code> - the card has been inactivated and cannot be used</li>\n  <li><code>data_limit_exceeded</code> - the card has exceeded its data consumption limit</li>\n</ul>\nTransitioning between the active and inactive states may take a period of time.\n", 
                          "example": "active"
                        }, 
                        "tags": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array", 
                          "description": "Searchable tags associated with the SIM card", 
                          "example": [
                            "personal", 
                            "customers", 
                            "active-customers"
                          ]
                        }, 
                        "msisdn": {
                          "type": "string", 
                          "description": "Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. </br>\nMSISDN is defined by the E.164 numbering plan. It includes a country code and a National Destination Code which identifies the subscriber's operator.\n", 
                          "example": "+13109976224"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "example": "2018-02-02T22:25:27.521Z"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "example": "2018-02-02T22:2520:27.521Z"
                        }, 
                        "record_type": {
                          "type": "string", 
                          "description": "Identifies the type of the resource.", 
                          "example": "sim_card"
                        }, 
                        "ipv4": {
                          "type": "string", 
                          "description": "The SIM's address in the currently connected network. This IPv4 address is usually obtained dynamically so it may vary according to the location or new connections.\n", 
                          "example": "192.168.0.0"
                        }, 
                        "ipv6": {
                          "type": "string", 
                          "description": "The SIM's address in the currently connected network. This IPv6 address is usually obtained dynamically so it may vary according to the location or new connections.\n", 
                          "example": "2001:cdba:0000:0000:0000:0000:3257:9652"
                        }, 
                        "iccid": {
                          "type": "string", 
                          "description": "The ICCID is the identifier of the specific SIM card/chip. Each SIM is internationally identified by its integrated circuit card identifier (ICCID). ICCIDs are stored in the SIM card's memory and are also engraved or printed on the SIM card body during a process called personalization.\n", 
                          "example": "89310410106543789301"
                        }, 
                        "id": {
                          "format": "uuid", 
                          "type": "string", 
                          "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
                          "description": "Uniquely identifies the resource or object."
                        }, 
                        "imsi": {
                          "type": "string", 
                          "description": "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). </br>\nMobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the appropriate network. It is used to acquire the details of the mobile in the Home Location Register (HLR) or the Visitor Location Register (VLR).\n", 
                          "example": "081932214823362973"
                        }, 
                        "sim_card_group_id": {
                          "format": "uuid", 
                          "type": "string", 
                          "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
                          "description": "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource."
                        }
                      }, 
                      "title": "SIMCard"
                    }
                  }
                }
              }
            }, 
            "description": "Successful response"
          }
        }, 
        "description": "Updates a SIM card's group and tags", 
        "parameters": [
          {
            "description": "Uniquely identifies the resource or object.", 
            "required": true, 
            "in": "path", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
              "format": "uuid"
            }
          }, 
          {
            "description": "The list of tags for the given SIM card.", 
            "required": false, 
            "in": "query", 
            "name": "tags", 
            "schema": {
              "items": {
                "type": "string"
              }, 
              "type": "array", 
              "example": [
                "personal", 
                "customers", 
                "active-customers"
              ]
            }
          }, 
          {
            "description": "The SIM card group associated with the SIM card.", 
            "required": false, 
            "in": "query", 
            "name": "sim_card_group_id", 
            "schema": {
              "type": "string", 
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "SIM Cards"
        ], 
        "summary": "Update a SIM card", 
        "operationId": "SimCardUpdate"
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "status": {
                          "enum": [
                            "activating", 
                            "active", 
                            "inactivating", 
                            "inactive", 
                            "data_limit_exceeded"
                          ], 
                          "type": "string", 
                          "description": "The current status of the SIM card. It will be one of: </br>\n<ul>\n  <li><code>activating</code> - the card is being activated</li>\n  <li><code>active</code> - the card is active and ready for use</li>\n  <li><code>inactivating</code> - the card is being inactivated</li>\n  <li><code>inactive</code> - the card has been inactivated and cannot be used</li>\n  <li><code>data_limit_exceeded</code> - the card has exceeded its data consumption limit</li>\n</ul>\nTransitioning between the active and inactive states may take a period of time.\n", 
                          "example": "active"
                        }, 
                        "tags": {
                          "items": {
                            "type": "string"
                          }, 
                          "type": "array", 
                          "description": "Searchable tags associated with the SIM card", 
                          "example": [
                            "personal", 
                            "customers", 
                            "active-customers"
                          ]
                        }, 
                        "msisdn": {
                          "type": "string", 
                          "description": "Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. </br>\nMSISDN is defined by the E.164 numbering plan. It includes a country code and a National Destination Code which identifies the subscriber's operator.\n", 
                          "example": "+13109976224"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "example": "2018-02-02T22:25:27.521Z"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "example": "2018-02-02T22:2520:27.521Z"
                        }, 
                        "record_type": {
                          "type": "string", 
                          "description": "Identifies the type of the resource.", 
                          "example": "sim_card"
                        }, 
                        "ipv4": {
                          "type": "string", 
                          "description": "The SIM's address in the currently connected network. This IPv4 address is usually obtained dynamically so it may vary according to the location or new connections.\n", 
                          "example": "192.168.0.0"
                        }, 
                        "ipv6": {
                          "type": "string", 
                          "description": "The SIM's address in the currently connected network. This IPv6 address is usually obtained dynamically so it may vary according to the location or new connections.\n", 
                          "example": "2001:cdba:0000:0000:0000:0000:3257:9652"
                        }, 
                        "iccid": {
                          "type": "string", 
                          "description": "The ICCID is the identifier of the specific SIM card/chip. Each SIM is internationally identified by its integrated circuit card identifier (ICCID). ICCIDs are stored in the SIM card's memory and are also engraved or printed on the SIM card body during a process called personalization.\n", 
                          "example": "89310410106543789301"
                        }, 
                        "id": {
                          "format": "uuid", 
                          "type": "string", 
                          "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
                          "description": "Uniquely identifies the resource or object."
                        }, 
                        "imsi": {
                          "type": "string", 
                          "description": "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). </br>\nMobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the appropriate network. It is used to acquire the details of the mobile in the Home Location Register (HLR) or the Visitor Location Register (VLR).\n", 
                          "example": "081932214823362973"
                        }, 
                        "sim_card_group_id": {
                          "format": "uuid", 
                          "type": "string", 
                          "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
                          "description": "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource."
                        }
                      }, 
                      "title": "SIMCard"
                    }
                  }
                }
              }
            }, 
            "description": "Successful response"
          }
        }, 
        "description": "Returns the details regarding a specific SIM card.", 
        "parameters": [
          {
            "description": "Uniquely identifies the resource or object.", 
            "required": true, 
            "in": "path", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "SIM Cards"
        ], 
        "summary": "Get SIM card", 
        "operationId": "SimCardGet"
      }
    }, 
    "/calls/{call_control_id}/actions/playback_start": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Play audio URL", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "audio_url"
                ], 
                "type": "object", 
                "properties": {
                  "target_legs": {
                    "default": "self", 
                    "type": "string", 
                    "description": "Specifies the leg or legs on which audio will be played. If supplied, the value must be either `self`, `opposite` or `both`.", 
                    "example": "self"
                  }, 
                  "overlay": {
                    "default": "false", 
                    "type": "boolean", 
                    "description": "When enabled, audio will be mixed on top of any other audio that is actively being played back. Note that `overlay: true` will only work if there is another audio file already being played on the call.", 
                    "example": "true"
                  }, 
                  "stop": {
                    "default": null, 
                    "type": "string", 
                    "description": "When specified, it stops the current audio being played.  Specify `current` to stop the current audio being played, and to play the next file in the queue. Specify `all` to stop the current audio file being played and to also clear all audio files from the queue.", 
                    "example": "current"
                  }, 
                  "audio_url": {
                    "type": "string", 
                    "description": "The URL of the file to be played back on the call. The URL can point to either a WAV or MP3 file.", 
                    "example": "http://www.example.com/sounds/greeting.wav"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "loop": {
                    "default": 1, 
                    "type": "string", 
                    "description": "The number of times the audio file should be played. If supplied, the value must be an integer between 1 and 100, or the special string `infinity` for an endless loop.", 
                    "example": "infinity"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Play Audio URL request"
              }
            }
          }, 
          "required": true, 
          "description": "Play audio URL request"
        }, 
        "callbacks": {
          "callPlaybackEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "valid", 
                                  "invalid", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "valid", 
                                "description": "Reflects how command ended."
                              }, 
                              "overlay": {
                                "type": "boolean", 
                                "example": "false", 
                                "description": "Whether the audio is going to be played in overlay mode or not."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }, 
                              "media_url": {
                                "type": "string", 
                                "example": "http://example.com/audio.wav", 
                                "description": "The audio URL being played back."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.playback.ended"
                            ], 
                            "type": "string", 
                            "example": "call.playback.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callPlaybackStarted": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "overlay": {
                                "type": "boolean", 
                                "example": "false", 
                                "description": "Whether the audio is going to be played in overlay mode or not."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }, 
                              "media_url": {
                                "type": "string", 
                                "example": "http://example.com/audio.wav", 
                                "description": "The audio URL being played back."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.playback.started"
                            ], 
                            "type": "string", 
                            "example": "call.playback.started", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlPlaybackStart", 
        "description": "Play an audio file on the call. If multiple play audio commands are issued consecutively,\nthe audio files will be placed in a queue awaiting playback.\n\n*Notes:*\n\n- When `overlay` is enabled, `loop` is limited to 1, and `target_legs` is limited to `self`.\n- A customer cannot Play Audio with `overlay=true` unless there is a Play Audio with `overlay=false` actively playing.\n\n**Expected Webhooks:**\n\n- `call.playback.started`\n- `call.playback.ended`\n"
      }
    }, 
    "/messaging_phone_numbers/{id}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "phone_number": "+18005550001", 
                        "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "id": "+18665550001", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "messaging_phone_number", 
                        "country_code": "US", 
                        "traffic_type": "P2P", 
                        "type": "toll-free", 
                        "messaging_product": "P2P"
                      }, 
                      "properties": {
                        "phone_number": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "+E.164 formatted phone number.", 
                          "format": "e164"
                        }, 
                        "eligible_messaging_products": {
                          "items": {
                            "type": "string"
                          }, 
                          "readOnly": true, 
                          "type": "array", 
                          "description": "The messaging products that this number can be registered to use"
                        }, 
                        "features": {
                          "readOnly": true, 
                          "type": "object", 
                          "properties": {
                            "sms": {
                              "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                              "nullable": true, 
                              "default": null, 
                              "required": [
                                "domestic_two_way", 
                                "international_inbound", 
                                "international_outbound"
                              ], 
                              "type": "object", 
                              "properties": {
                                "international_inbound": {
                                  "type": "boolean", 
                                  "description": "Receive messages from numbers in other countries."
                                }, 
                                "international_outbound": {
                                  "type": "boolean", 
                                  "description": "Send messages to numbers in other countries."
                                }, 
                                "domestic_two_way": {
                                  "type": "boolean", 
                                  "description": "Send messages to and receive messages from numbers in the same country."
                                }
                              }
                            }, 
                            "mms": {
                              "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                              "nullable": true, 
                              "default": null, 
                              "required": [
                                "domestic_two_way", 
                                "international_inbound", 
                                "international_outbound"
                              ], 
                              "type": "object", 
                              "properties": {
                                "international_inbound": {
                                  "type": "boolean", 
                                  "description": "Receive messages from numbers in other countries."
                                }, 
                                "international_outbound": {
                                  "type": "boolean", 
                                  "description": "Send messages to numbers in other countries."
                                }, 
                                "domestic_two_way": {
                                  "type": "boolean", 
                                  "description": "Send messages to and receive messages from numbers in the same country."
                                }
                              }
                            }
                          }
                        }, 
                        "messaging_profile_id": {
                          "format": "uuid", 
                          "type": "string", 
                          "description": "Unique identifier for a messaging profile.", 
                          "nullable": true
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object."
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "messaging_phone_number"
                          ], 
                          "type": "string", 
                          "example": "messaging_phone_number", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "country_code": {
                          "pattern": "^[A-Z]{2}$", 
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 3166-1 alpha-2 country code.", 
                          "example": "US"
                        }, 
                        "traffic_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "The messaging traffic or use case for which the number is currently configured.", 
                          "example": "P2P"
                        }, 
                        "type": {
                          "readOnly": true, 
                          "enum": [
                            "long-code", 
                            "toll-free", 
                            "short-code"
                          ], 
                          "type": "string", 
                          "description": "The type of the phone number"
                        }, 
                        "messaging_product": {
                          "type": "string", 
                          "description": "The messaging product that the number is registered to use", 
                          "example": "P2P"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected update response"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the phone number", 
            "name": "id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Phone Numbers"
        ], 
        "summary": "Update a messaging phone number", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "messaging_product": {
                    "type": "string", 
                    "description": "The requested messaging product the number should be on", 
                    "example": "P2P"
                  }, 
                  "messaging_profile_id": {
                    "type": "string", 
                    "description": "Unique identifier for a messaging profile.", 
                    "format": "uuid"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Messaging Phone Number Update"
        }, 
        "operationId": "updateMessagingPhoneNumber", 
        "description": "Update the settings for a specific number. To unbind a number from, a profile, set the `messaging_profile_id` to `null` or an empty string."
      }, 
      "get": {
        "tags": [
          "Phone Numbers"
        ], 
        "summary": "Retrieve a messaging phone number", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "phone_number": "+18005550001", 
                        "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "id": "+18665550001", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "messaging_phone_number", 
                        "country_code": "US", 
                        "traffic_type": "P2P", 
                        "type": "toll-free", 
                        "messaging_product": "P2P"
                      }, 
                      "properties": {
                        "phone_number": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "+E.164 formatted phone number.", 
                          "format": "e164"
                        }, 
                        "eligible_messaging_products": {
                          "items": {
                            "type": "string"
                          }, 
                          "readOnly": true, 
                          "type": "array", 
                          "description": "The messaging products that this number can be registered to use"
                        }, 
                        "features": {
                          "readOnly": true, 
                          "type": "object", 
                          "properties": {
                            "sms": {
                              "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                              "nullable": true, 
                              "default": null, 
                              "required": [
                                "domestic_two_way", 
                                "international_inbound", 
                                "international_outbound"
                              ], 
                              "type": "object", 
                              "properties": {
                                "international_inbound": {
                                  "type": "boolean", 
                                  "description": "Receive messages from numbers in other countries."
                                }, 
                                "international_outbound": {
                                  "type": "boolean", 
                                  "description": "Send messages to numbers in other countries."
                                }, 
                                "domestic_two_way": {
                                  "type": "boolean", 
                                  "description": "Send messages to and receive messages from numbers in the same country."
                                }
                              }
                            }, 
                            "mms": {
                              "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                              "nullable": true, 
                              "default": null, 
                              "required": [
                                "domestic_two_way", 
                                "international_inbound", 
                                "international_outbound"
                              ], 
                              "type": "object", 
                              "properties": {
                                "international_inbound": {
                                  "type": "boolean", 
                                  "description": "Receive messages from numbers in other countries."
                                }, 
                                "international_outbound": {
                                  "type": "boolean", 
                                  "description": "Send messages to numbers in other countries."
                                }, 
                                "domestic_two_way": {
                                  "type": "boolean", 
                                  "description": "Send messages to and receive messages from numbers in the same country."
                                }
                              }
                            }
                          }
                        }, 
                        "messaging_profile_id": {
                          "format": "uuid", 
                          "type": "string", 
                          "description": "Unique identifier for a messaging profile.", 
                          "nullable": true
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object."
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "messaging_phone_number"
                          ], 
                          "type": "string", 
                          "example": "messaging_phone_number", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "country_code": {
                          "pattern": "^[A-Z]{2}$", 
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 3166-1 alpha-2 country code.", 
                          "example": "US"
                        }, 
                        "traffic_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "The messaging traffic or use case for which the number is currently configured.", 
                          "example": "P2P"
                        }, 
                        "type": {
                          "readOnly": true, 
                          "enum": [
                            "long-code", 
                            "toll-free", 
                            "short-code"
                          ], 
                          "type": "string", 
                          "description": "The type of the phone number"
                        }, 
                        "messaging_product": {
                          "type": "string", 
                          "description": "The messaging product that the number is registered to use", 
                          "example": "P2P"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected phone number response to a valid request"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the phone number", 
            "name": "id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "operationId": "retrieveMessagingPhoneNumber"
      }
    }, 
    "/sim_cards/{id}/actions/activate": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "202": {
            "description": "Successful response"
          }, 
          "422": {
            "description": "Unprocessable entity. Check the 'detail' field in response for details."
          }
        }, 
        "description": "The SIM card will be able to connect to the network once the activation is complete, thus making it possible to consume data with it.</br>\nIn order for a SIM card to be activated, it must be be associated with a SIM card group that has a data plan.</br>\nTransitioning to the active state may take a period of time. Until the transition is completed, the SIM card status will be <code>activating</code>.\n", 
        "parameters": [
          {
            "description": "Uniquely identifies the resource or object.", 
            "required": true, 
            "in": "path", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "SIM Cards"
        ], 
        "summary": "Request a SIM card activation", 
        "operationId": "SimCardActivate"
      }
    }, 
    "/number_reservations/{number_reservation_id}/actions/extend": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "status": {
                          "readOnly": true, 
                          "enum": [
                            "pending", 
                            "success", 
                            "failure"
                          ], 
                          "type": "string", 
                          "description": "The status of the entire reservation"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the numbers reservation was created"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string for when the number reservation was updated"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "phone_number_reservation"
                        }, 
                        "phone_numbers": {
                          "items": {
                            "properties": {
                              "phone_number": {
                                "type": "string", 
                                "example": "+13125000000", 
                                "format": "e164_phone_number"
                              }, 
                              "status": {
                                "readOnly": true, 
                                "enum": [
                                  "pending", 
                                  "success", 
                                  "failure"
                                ], 
                                "type": "string", 
                                "description": "The status of the phone number's reservation"
                              }, 
                              "created_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string denoting when the individual number reservation was created"
                              }, 
                              "updated_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string for when the the individual number reservation was updated"
                              }, 
                              "record_type": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "reserved_phone_number"
                              }, 
                              "id": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                                "format": "uuid"
                              }, 
                              "expired_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string for when the individual number reservation is going to expire"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "customer_reference": {
                          "type": "string", 
                          "description": "A customer reference string for customer look ups", 
                          "example": "MY REF 001"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number reservation was found"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number reservation id", 
            "name": "number_reservation_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Reservations"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Extend a Phone Number Reservation", 
        "operationId": "extendNumberReservationExpiryTime", 
        "description": "Extends reservation expiry time on all phone numbers"
      }
    }, 
    "/number_order_documents": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "customer_reference": {
                          "type": "string", 
                          "description": "Human readable description of the file"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "number_order_document"
                        }, 
                        "file_id": {
                          "type": "string", 
                          "description": "The id of the file to associate as a number order document", 
                          "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                        }, 
                        "requirement_type": {
                          "readOnly": true, 
                          "enum": [
                            "identification", 
                            "reg_form", 
                            "address_proof"
                          ], 
                          "type": "string"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "387d1e31-a218-4375-8151-103f2d5e2d2c", 
                          "format": "uuid"
                        }, 
                        "requirements_id": {
                          "type": "string", 
                          "description": "Unique id for a requirement"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number order document has been uploaded successfully"
          }
        }, 
        "tags": [
          "Number Order Documents"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Upload Phone Number Order Document", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer_reference": {
                    "type": "string", 
                    "description": "Human readable description of the file"
                  }, 
                  "created_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
                  }, 
                  "record_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "number_order_document"
                  }, 
                  "file_id": {
                    "type": "string", 
                    "description": "The id of the file to associate as a number order document", 
                    "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                  }, 
                  "requirement_type": {
                    "readOnly": true, 
                    "enum": [
                      "identification", 
                      "reg_form", 
                      "address_proof"
                    ], 
                    "type": "string"
                  }, 
                  "id": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "387d1e31-a218-4375-8151-103f2d5e2d2c", 
                    "format": "uuid"
                  }, 
                  "requirements_id": {
                    "type": "string", 
                    "description": "Unique id for a requirement"
                  }
                }
              }
            }
          }, 
          "required": true
        }, 
        "operationId": "createNumberOrderDocument", 
        "description": "Upload a Phone Number Order Document"
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "properties": {
                          "customer_reference": {
                            "type": "string", 
                            "description": "Human readable description of the file"
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "number_order_document"
                          }, 
                          "file_id": {
                            "type": "string", 
                            "description": "The id of the file to associate as a number order document", 
                            "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                          }, 
                          "requirement_type": {
                            "readOnly": true, 
                            "enum": [
                              "identification", 
                              "reg_form", 
                              "address_proof"
                            ], 
                            "type": "string"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "387d1e31-a218-4375-8151-103f2d5e2d2c", 
                            "format": "uuid"
                          }, 
                          "requirements_id": {
                            "type": "string", 
                            "description": "Unique id for a requirement"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Returns a list of number order documents"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "Filter number order documents by requirement_id", 
            "name": "filter[requirement_id]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number order documents after this datetime", 
            "name": "filter[created_at][gt]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number order documents from before this datetime", 
            "name": "filter[created_at][lt]", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Order Documents"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Gets a paginated list of Number Order Documents", 
        "operationId": "listNumberOrderDocuments", 
        "description": "Gets a paginated list of Number Order Documents"
      }
    }, 
    "/calls/{call_control_id}/actions/gather_using_audio": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Gather using audio", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "audio_url"
                ], 
                "type": "object", 
                "properties": {
                  "terminating_digit": {
                    "default": "#", 
                    "type": "string", 
                    "description": "The digit used to terminate input if fewer than `maximum_digits` digits have been gathered.", 
                    "example": "#"
                  }, 
                  "audio_url": {
                    "type": "string", 
                    "example": "http://example.com/message.wav", 
                    "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
                  }, 
                  "minimum_digits": {
                    "default": 1, 
                    "example": 1, 
                    "type": "integer", 
                    "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.", 
                    "format": "int32"
                  }, 
                  "valid_digits": {
                    "default": "0123456789#*", 
                    "type": "string", 
                    "description": "A list of all digits accepted as valid.", 
                    "example": "123"
                  }, 
                  "timeout_millis": {
                    "default": 60000, 
                    "example": 60000, 
                    "type": "integer", 
                    "description": "The number of milliseconds to wait for a DTMF response after file playback ends before a replaying the sound file.", 
                    "format": "int32"
                  }, 
                  "maximum_digits": {
                    "default": 128, 
                    "example": 10, 
                    "type": "integer", 
                    "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.", 
                    "format": "int32"
                  }, 
                  "invalid_audio_url": {
                    "type": "string", 
                    "description": "The URL of a file to play when digits don't match the `valid_digits` parameter or the number of digits is not between `min` and `max`. The URL can point to either a WAV or MP3 file.", 
                    "example": "http://example.com/invalid.wav"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "maximum_tries": {
                    "default": 3, 
                    "example": 3, 
                    "type": "integer", 
                    "description": "The maximum number of times the file should be played if there is no input from the user on the call.", 
                    "format": "int32"
                  }, 
                  "inter_digit_timeout_millis": {
                    "default": 5000, 
                    "example": 10000, 
                    "type": "integer", 
                    "description": "The number of milliseconds to wait for input between digits.", 
                    "format": "int32"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Gather using audio with all parameters request"
              }
            }
          }, 
          "required": true, 
          "description": "Gather using audio request"
        }, 
        "callbacks": {
          "callGatherEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "digits": {
                                "type": "string", 
                                "example": "5503", 
                                "description": "The received DTMF digit or symbol."
                              }, 
                              "status": {
                                "enum": [
                                  "valid", 
                                  "invalid", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "valid", 
                                "description": "Reflects how command ended."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.gather.ended"
                            ], 
                            "type": "string", 
                            "example": "call.gather.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callPlaybackEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "valid", 
                                  "invalid", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "valid", 
                                "description": "Reflects how command ended."
                              }, 
                              "overlay": {
                                "type": "boolean", 
                                "example": "false", 
                                "description": "Whether the audio is going to be played in overlay mode or not."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }, 
                              "media_url": {
                                "type": "string", 
                                "example": "http://example.com/audio.wav", 
                                "description": "The audio URL being played back."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.playback.ended"
                            ], 
                            "type": "string", 
                            "example": "call.playback.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callDtmfReceived": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "digit": {
                                "type": "string", 
                                "example": "#", 
                                "description": "The received DTMF digit or symbol."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Uniquely identifies the resource or object."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.dtmf.received"
                            ], 
                            "type": "string", 
                            "example": "call.dtmf.received", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callPlaybackStarted": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "overlay": {
                                "type": "boolean", 
                                "example": "false", 
                                "description": "Whether the audio is going to be played in overlay mode or not."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }, 
                              "media_url": {
                                "type": "string", 
                                "example": "http://example.com/audio.wav", 
                                "description": "The audio URL being played back."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.playback.started"
                            ], 
                            "type": "string", 
                            "example": "call.playback.started", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlGatherUsingAudio", 
        "description": "Play an audio file on the call until the required DTMF signals are gathered to build interactive menus.\n\nYou can pass a list of valid digits along with an 'invalid_audio_url', which will be played back at the beginning of each prompt. Playback will be interrupted when a DTMF signal is received. The [Answer](/docs/api/v2/call-control/Call-Commands#CallControlAnswer) command must be issued before the `gather_using_audio` command.\n\n**Expected Webhooks:**\n\n- `call.playback.started`\n- `call.playback.ended`\n- `call.dtmf.received` (you may receive many of these webhooks)\n- `call.gather.ended`\n"
      }
    }, 
    "/messages/long_code": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "valid_until": {
                          "format": "date-time", 
                          "type": "string", 
                          "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                          "nullable": true
                        }, 
                        "media": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "url": {
                                "type": "string", 
                                "format": "url"
                              }, 
                              "content_type": {
                                "format": "mime-type", 
                                "type": "string", 
                                "nullable": true
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "direction": {
                          "enum": [
                            "outbound"
                          ], 
                          "type": "string", 
                          "example": "outbound", 
                          "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                        }, 
                        "errors": {
                          "items": {
                            "required": [
                              "code", 
                              "title"
                            ], 
                            "properties": {
                              "source": {
                                "type": "object", 
                                "properties": {
                                  "pointer": {
                                    "type": "string", 
                                    "description": "JSON pointer (RFC6901) to the offending entity.", 
                                    "format": "json-pointer"
                                  }, 
                                  "parameter": {
                                    "type": "string", 
                                    "description": "Indicates which query parameter caused the error."
                                  }
                                }
                              }, 
                              "code": {
                                "type": "string", 
                                "format": "int"
                              }, 
                              "meta": {
                                "type": "object"
                              }, 
                              "detail": {
                                "type": "string"
                              }, 
                              "title": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                        }, 
                        "from": {
                          "type": "string", 
                          "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                          "format": "address"
                        }, 
                        "record_type": {
                          "enum": [
                            "message"
                          ], 
                          "type": "string", 
                          "example": "message", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "text": {
                          "type": "string", 
                          "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "to": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "queued", 
                                  "sending", 
                                  "sent", 
                                  "delivered", 
                                  "sending_failed", 
                                  "delivery_failed", 
                                  "delivery_unconfirmed"
                                ], 
                                "type": "string"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                "format": "address"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "type": {
                          "enum": [
                            "sms", 
                            "mms"
                          ], 
                          "type": "string", 
                          "description": "The type of message. This value can be either 'sms' or 'mms'."
                        }, 
                        "parts": {
                          "minimum": 1, 
                          "type": "integer", 
                          "maximum": 10, 
                          "description": "Number of parts into which the message's body must be split."
                        }, 
                        "line_type": {
                          "enum": [
                            "Wireline", 
                            "Wireless", 
                            "VoWiFi", 
                            "VoIP", 
                            "Pre-Paid Wireless"
                          ], 
                          "type": "string", 
                          "description": "The line-type of the receiver.", 
                          "nullable": true
                        }, 
                        "carrier": {
                          "type": "string", 
                          "description": "The carrier of the receiver.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this message will be sent.", 
                          "nullable": true
                        }, 
                        "use_profile_webhooks": {
                          "default": false, 
                          "type": "boolean", 
                          "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "cost": {
                          "type": "object", 
                          "properties": {
                            "currency": {
                              "type": "string", 
                              "description": "The ISO 4217 currency identifier.", 
                              "format": "iso4217"
                            }, 
                            "amount": {
                              "type": "string", 
                              "description": "The amount deducted from your account.", 
                              "format": "decimal"
                            }
                          }, 
                          "nullable": true
                        }
                      }, 
                      "example": {
                        "valid_until": "2019-01-23T18:10:02.574Z", 
                        "direction": "outbound", 
                        "errors": [], 
                        "from": "+18445550001", 
                        "record_type": "message", 
                        "text": "Hello, World!", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "to": [
                          {
                            "status": "queued", 
                            "updated_at": "2019-01-23T18:10:02.574Z", 
                            "address": "+18665550001"
                          }
                        ], 
                        "type": "sms", 
                        "parts": 1, 
                        "line_type": "Wireless", 
                        "carrier": "Verizon", 
                        "webhook_url": "https://www.example.com/hooks", 
                        "use_profile_webhooks": false, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": "https://www.example.com/callbacks", 
                        "cost": {
                          "currency": "USD", 
                          "amount": "1.23"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Detailed message object"
          }
        }, 
        "tags": [
          "Messages"
        ], 
        "summary": "Send a Long Code message", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "from", 
                  "to"
                ], 
                "type": "object", 
                "properties": {
                  "from": {
                    "type": "string", 
                    "description": "Phone number, in +E.164 format, used to send the message", 
                    "format": "address"
                  }, 
                  "text": {
                    "type": "string", 
                    "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                  }, 
                  "to": {
                    "oneOf": [
                      {
                        "type": "string", 
                        "description": "Receiving address (+E.164 formatted phone number or short code)", 
                        "format": "address"
                      }, 
                      {
                        "items": {
                          "type": "string", 
                          "description": "Receiving address (+E.164 formatted phone number or short code)", 
                          "format": "address"
                        }, 
                        "type": "array"
                      }
                    ]
                  }, 
                  "webhook_url": {
                    "type": "string", 
                    "description": "The URL where webhooks related to this message will be sent.", 
                    "format": "url"
                  }, 
                  "media_urls": {
                    "items": {
                      "type": "string", 
                      "format": "url"
                    }, 
                    "type": "array", 
                    "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**"
                  }, 
                  "use_profile_webhooks": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                  }, 
                  "webhook_failover_url": {
                    "type": "string", 
                    "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                    "format": "url"
                  }, 
                  "subject": {
                    "type": "string", 
                    "description": "Subject of multimedia message"
                  }
                }
              }
            }
          }, 
          "description": "Message payload"
        }, 
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "valid_until": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                            "nullable": true
                          }, 
                          "media": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "url": {
                                  "type": "string", 
                                  "format": "url"
                                }, 
                                "content_type": {
                                  "format": "mime-type", 
                                  "type": "string", 
                                  "nullable": true
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "direction": {
                            "enum": [
                              "outbound"
                            ], 
                            "type": "string", 
                            "example": "outbound", 
                            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                          }, 
                          "errors": {
                            "items": {
                              "required": [
                                "code", 
                                "title"
                              ], 
                              "properties": {
                                "source": {
                                  "type": "object", 
                                  "properties": {
                                    "pointer": {
                                      "type": "string", 
                                      "description": "JSON pointer (RFC6901) to the offending entity.", 
                                      "format": "json-pointer"
                                    }, 
                                    "parameter": {
                                      "type": "string", 
                                      "description": "Indicates which query parameter caused the error."
                                    }
                                  }
                                }, 
                                "code": {
                                  "type": "string", 
                                  "format": "int"
                                }, 
                                "meta": {
                                  "type": "object"
                                }, 
                                "detail": {
                                  "type": "string"
                                }, 
                                "title": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "type": "array", 
                            "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                          }, 
                          "from": {
                            "type": "string", 
                            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                            "format": "address"
                          }, 
                          "record_type": {
                            "enum": [
                              "message"
                            ], 
                            "type": "string", 
                            "example": "message", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "text": {
                            "type": "string", 
                            "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "to": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "status": {
                                  "enum": [
                                    "queued", 
                                    "sending", 
                                    "sent", 
                                    "delivered", 
                                    "sending_failed", 
                                    "delivery_failed", 
                                    "delivery_unconfirmed"
                                  ], 
                                  "type": "string"
                                }, 
                                "updated_at": {
                                  "type": "string", 
                                  "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                  "format": "date-time"
                                }, 
                                "address": {
                                  "type": "string", 
                                  "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                  "format": "address"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "type": {
                            "enum": [
                              "sms", 
                              "mms"
                            ], 
                            "type": "string", 
                            "description": "The type of message. This value can be either 'sms' or 'mms'."
                          }, 
                          "parts": {
                            "minimum": 1, 
                            "type": "integer", 
                            "maximum": 10, 
                            "description": "Number of parts into which the message's body must be split."
                          }, 
                          "line_type": {
                            "enum": [
                              "Wireline", 
                              "Wireless", 
                              "VoWiFi", 
                              "VoIP", 
                              "Pre-Paid Wireless"
                            ], 
                            "type": "string", 
                            "description": "The line-type of the receiver.", 
                            "nullable": true
                          }, 
                          "carrier": {
                            "type": "string", 
                            "description": "The carrier of the receiver.", 
                            "nullable": true
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The URL where webhooks related to this message will be sent.", 
                            "nullable": true
                          }, 
                          "use_profile_webhooks": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                            "nullable": true
                          }, 
                          "cost": {
                            "type": "object", 
                            "properties": {
                              "currency": {
                                "type": "string", 
                                "description": "The ISO 4217 currency identifier.", 
                                "format": "iso4217"
                              }, 
                              "amount": {
                                "type": "string", 
                                "description": "The amount deducted from your account.", 
                                "format": "decimal"
                              }
                            }, 
                            "nullable": true
                          }
                        }, 
                        "example": {
                          "valid_until": "2019-01-23T18:10:02.574Z", 
                          "direction": "outbound", 
                          "errors": [], 
                          "from": "+18445550001", 
                          "record_type": "message", 
                          "text": "Hello, World!", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "to": [
                            {
                              "status": "queued", 
                              "updated_at": "2019-01-23T18:10:02.574Z", 
                              "address": "+18665550001"
                            }
                          ], 
                          "type": "sms", 
                          "parts": 1, 
                          "line_type": "Wireless", 
                          "carrier": "Verizon", 
                          "webhook_url": "https://www.example.com/hooks", 
                          "use_profile_webhooks": false, 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "webhook_failover_url": "https://www.example.com/callbacks", 
                          "cost": {
                            "currency": "USD", 
                            "amount": "1.23"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "createLongCodeMessage"
      }
    }, 
    "/conferences/{id}/actions/mute": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "title": "Command result", 
                      "required": [
                        "result"
                      ], 
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Conference command response"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "query", 
            "name": "id", 
            "schema": {
              "type": "object", 
              "properties": {
                "call_control_ids": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array", 
                  "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be muted."
                }
              }, 
              "title": "Mute Conference participants request"
            }
          }
        ], 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "Mute a conference participant.", 
        "security": [
          {
            "basicAuth": []
          }, 
          {
            "bearerAuth": []
          }
        ], 
        "operationId": "MuteConference", 
        "description": "Mute a list of participants in a conference call"
      }
    }, 
    "/calls/{call_control_id}/actions/record_start": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Recording start", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "format", 
                  "channels"
                ], 
                "type": "object", 
                "properties": {
                  "channels": {
                    "enum": [
                      "single", 
                      "dual"
                    ], 
                    "type": "string", 
                    "description": "When `dual`, final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B.", 
                    "example": "single"
                  }, 
                  "play_beep": {
                    "type": "boolean", 
                    "description": "If enabled, a beep sound will be played at the start of a recording.", 
                    "example": true
                  }, 
                  "format": {
                    "enum": [
                      "wav", 
                      "mp3"
                    ], 
                    "type": "string", 
                    "description": "The audio file format used when storing the call recording. Can be either `mp3` or `wav`.", 
                    "example": "mp3"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Start Recording request"
              }
            }
          }, 
          "required": true, 
          "description": "Start recording audio request"
        }, 
        "operationId": "CallControlRecordStart", 
        "description": "Start recording the call. Recording will stop on call hang-up, or can be initiated via the Stop Recording command.\n\n**Expected Webhooks:**\n\nThere are no webhooks associated with this Command.\n"
      }
    }, 
    "/messaging_url_domains": {
      "get": {
        "tags": [
          "Messaging URL Domains"
        ], 
        "summary": "List all available messaging URL domains", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "url_domain": {
                            "type": "string"
                          }, 
                          "record_type": {
                            "type": "string"
                          }, 
                          "id": {
                            "type": "string"
                          }, 
                          "use_case": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Returns a list of all available messaging URL shortener domains."
          }
        }, 
        "operationId": "getAllMessagingUrlDomains"
      }
    }, 
    "/messaging_profiles/{id}/short_codes": {
      "get": {
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "List all short codes associated with a messaging profile", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "required": [
                          "messaging_profile_id"
                        ], 
                        "type": "object", 
                        "example": {
                          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "short_code": "12345", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "record_type": "short_code", 
                          "country_code": "US", 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        }, 
                        "properties": {
                          "messaging_profile_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Unique identifier for a messaging profile.", 
                            "nullable": true
                          }, 
                          "short_code": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Short digit sequence used to address messages."
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "organization_id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Unique identifier for the organization that owns the resource.", 
                            "format": "uuid"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "enum": [
                              "short_code"
                            ], 
                            "type": "string", 
                            "example": "short_code", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "country_code": {
                            "pattern": "^[A-Z]{2}$", 
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code.", 
                            "example": "US"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Paginated array of short codes associated with the messaging profile"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }, 
          {
            "in": "query", 
            "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.", 
            "name": "page[token]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the messaging profile to retrieve", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "operationId": "listMessagingProfileShortCodes"
      }
    }, 
    "/calls/{call_control_id}": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "required": [
                        "record_type", 
                        "call_control_id", 
                        "call_leg_id", 
                        "call_session_id", 
                        "is_alive"
                      ], 
                      "type": "object", 
                      "example": {
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                        "record_type": "call", 
                        "is_alive": true, 
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                      }, 
                      "properties": {
                        "call_session_id": {
                          "type": "string", 
                          "description": "ID that is unique to the call session and can be used to correlate webhook events", 
                          "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                        }, 
                        "record_type": {
                          "enum": [
                            "call"
                          ], 
                          "type": "string"
                        }, 
                        "is_alive": {
                          "type": "boolean", 
                          "description": "Indicates whether the call is alive or not. For Dial command it will always be `false` (dialing is asynchronous).", 
                          "example": true
                        }, 
                        "call_leg_id": {
                          "type": "string", 
                          "description": "ID that is unique to the call and can be used to correlate webhook events", 
                          "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                        }, 
                        "call_control_id": {
                          "type": "string", 
                          "description": "Unique identifier and token for controlling the call. For Dial command it will always be `null` (dialing is asynchronous).", 
                          "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Retrieve call status response"
          }
        }, 
        "description": "Returns the status of a call.", 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Information"
        ], 
        "summary": "Retrieve call status", 
        "operationId": "RetrieveCallStatus"
      }
    }, 
    "/calls/{call_control_id}/actions/send_dtmf": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Send DTMF", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "digits"
                ], 
                "type": "object", 
                "properties": {
                  "digits": {
                    "type": "string", 
                    "description": "DTMF digits to send. Valid digits are 0-9, A-D, *, and #. Pauses can be added using w (0.5s) and W (1s).", 
                    "example": "1www2WABCDw9"
                  }, 
                  "duration_millis": {
                    "default": 250, 
                    "format": "int32", 
                    "type": "integer", 
                    "example": 500, 
                    "description": "Specifies for how many milliseconds each digit will be played in the audio stream. Ranges from 100 to 500ms"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Send DTMF request"
              }
            }
          }, 
          "required": true, 
          "description": "Send DTMF request"
        }, 
        "operationId": "CallControlSendDTMF", 
        "description": "Sends DTMF tones from this leg. DTMF tones will be heard by the other end of the call.\n\n**Expected Webhooks:**\n\nThere are no webhooks associated with this command.\n"
      }
    }, 
    "/messages": {
      "post": {
        "description": "Send a message with a Phone Number, Alphanumeric Sender ID, Short Code or Number Pool.\n\nThis endpoint allows you to send a message with any messaging resource.\nCurrent messaging resources include: long-code, short-code, number-pool, and\nalphanumeric-sender-id.\n", 
        "tags": [
          "Messages"
        ], 
        "summary": "Send a message", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "to"
                ], 
                "type": "object", 
                "properties": {
                  "from": {
                    "type": "string", 
                    "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code).\n\n**Required if sending with a phone number, short code, or alphanumeric sender ID.**\n", 
                    "format": "address"
                  }, 
                  "messaging_profile_id": {
                    "type": "string", 
                    "description": "Unique identifier for a messaging profile.\n\n**Required if sending via number pool or with an alphanumeric sender ID.**\n", 
                    "format": "uuid"
                  }, 
                  "text": {
                    "type": "string", 
                    "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                  }, 
                  "to": {
                    "oneOf": [
                      {
                        "type": "string", 
                        "description": "Receiving address (+E.164 formatted phone number or short code)", 
                        "format": "address"
                      }
                    ]
                  }, 
                  "webhook_url": {
                    "type": "string", 
                    "description": "The URL where webhooks related to this message will be sent.", 
                    "format": "url"
                  }, 
                  "media_urls": {
                    "items": {
                      "type": "string", 
                      "format": "url"
                    }, 
                    "type": "array", 
                    "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**"
                  }, 
                  "use_profile_webhooks": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                  }, 
                  "webhook_failover_url": {
                    "type": "string", 
                    "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                    "format": "url"
                  }, 
                  "subject": {
                    "type": "string", 
                    "description": "Subject of multimedia message"
                  }
                }
              }
            }
          }, 
          "description": "Message payload"
        }, 
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "valid_until": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                            "nullable": true
                          }, 
                          "media": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "url": {
                                  "type": "string", 
                                  "format": "url"
                                }, 
                                "content_type": {
                                  "format": "mime-type", 
                                  "type": "string", 
                                  "nullable": true
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "direction": {
                            "enum": [
                              "outbound"
                            ], 
                            "type": "string", 
                            "example": "outbound", 
                            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                          }, 
                          "errors": {
                            "items": {
                              "required": [
                                "code", 
                                "title"
                              ], 
                              "properties": {
                                "source": {
                                  "type": "object", 
                                  "properties": {
                                    "pointer": {
                                      "type": "string", 
                                      "description": "JSON pointer (RFC6901) to the offending entity.", 
                                      "format": "json-pointer"
                                    }, 
                                    "parameter": {
                                      "type": "string", 
                                      "description": "Indicates which query parameter caused the error."
                                    }
                                  }
                                }, 
                                "code": {
                                  "type": "string", 
                                  "format": "int"
                                }, 
                                "meta": {
                                  "type": "object"
                                }, 
                                "detail": {
                                  "type": "string"
                                }, 
                                "title": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "type": "array", 
                            "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                          }, 
                          "from": {
                            "type": "string", 
                            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                            "format": "address"
                          }, 
                          "record_type": {
                            "enum": [
                              "message"
                            ], 
                            "type": "string", 
                            "example": "message", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "text": {
                            "type": "string", 
                            "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "to": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "status": {
                                  "enum": [
                                    "queued", 
                                    "sending", 
                                    "sent", 
                                    "delivered", 
                                    "sending_failed", 
                                    "delivery_failed", 
                                    "delivery_unconfirmed"
                                  ], 
                                  "type": "string"
                                }, 
                                "updated_at": {
                                  "type": "string", 
                                  "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                  "format": "date-time"
                                }, 
                                "address": {
                                  "type": "string", 
                                  "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                  "format": "address"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "type": {
                            "enum": [
                              "sms", 
                              "mms"
                            ], 
                            "type": "string", 
                            "description": "The type of message. This value can be either 'sms' or 'mms'."
                          }, 
                          "parts": {
                            "minimum": 1, 
                            "type": "integer", 
                            "maximum": 10, 
                            "description": "Number of parts into which the message's body must be split."
                          }, 
                          "line_type": {
                            "enum": [
                              "Wireline", 
                              "Wireless", 
                              "VoWiFi", 
                              "VoIP", 
                              "Pre-Paid Wireless"
                            ], 
                            "type": "string", 
                            "description": "The line-type of the receiver.", 
                            "nullable": true
                          }, 
                          "carrier": {
                            "type": "string", 
                            "description": "The carrier of the receiver.", 
                            "nullable": true
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The URL where webhooks related to this message will be sent.", 
                            "nullable": true
                          }, 
                          "use_profile_webhooks": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                            "nullable": true
                          }, 
                          "cost": {
                            "type": "object", 
                            "properties": {
                              "currency": {
                                "type": "string", 
                                "description": "The ISO 4217 currency identifier.", 
                                "format": "iso4217"
                              }, 
                              "amount": {
                                "type": "string", 
                                "description": "The amount deducted from your account.", 
                                "format": "decimal"
                              }
                            }, 
                            "nullable": true
                          }
                        }, 
                        "example": {
                          "valid_until": "2019-01-23T18:10:02.574Z", 
                          "direction": "outbound", 
                          "errors": [], 
                          "from": "+18445550001", 
                          "record_type": "message", 
                          "text": "Hello, World!", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "to": [
                            {
                              "status": "queued", 
                              "updated_at": "2019-01-23T18:10:02.574Z", 
                              "address": "+18665550001"
                            }
                          ], 
                          "type": "sms", 
                          "parts": 1, 
                          "line_type": "Wireless", 
                          "carrier": "Verizon", 
                          "webhook_url": "https://www.example.com/hooks", 
                          "use_profile_webhooks": false, 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "webhook_failover_url": "https://www.example.com/callbacks", 
                          "cost": {
                            "currency": "USD", 
                            "amount": "1.23"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "createMessage", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "valid_until": {
                          "format": "date-time", 
                          "type": "string", 
                          "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                          "nullable": true
                        }, 
                        "media": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "url": {
                                "type": "string", 
                                "format": "url"
                              }, 
                              "content_type": {
                                "format": "mime-type", 
                                "type": "string", 
                                "nullable": true
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "direction": {
                          "enum": [
                            "outbound"
                          ], 
                          "type": "string", 
                          "example": "outbound", 
                          "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                        }, 
                        "errors": {
                          "items": {
                            "required": [
                              "code", 
                              "title"
                            ], 
                            "properties": {
                              "source": {
                                "type": "object", 
                                "properties": {
                                  "pointer": {
                                    "type": "string", 
                                    "description": "JSON pointer (RFC6901) to the offending entity.", 
                                    "format": "json-pointer"
                                  }, 
                                  "parameter": {
                                    "type": "string", 
                                    "description": "Indicates which query parameter caused the error."
                                  }
                                }
                              }, 
                              "code": {
                                "type": "string", 
                                "format": "int"
                              }, 
                              "meta": {
                                "type": "object"
                              }, 
                              "detail": {
                                "type": "string"
                              }, 
                              "title": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                        }, 
                        "from": {
                          "type": "string", 
                          "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                          "format": "address"
                        }, 
                        "record_type": {
                          "enum": [
                            "message"
                          ], 
                          "type": "string", 
                          "example": "message", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "text": {
                          "type": "string", 
                          "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "to": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "queued", 
                                  "sending", 
                                  "sent", 
                                  "delivered", 
                                  "sending_failed", 
                                  "delivery_failed", 
                                  "delivery_unconfirmed"
                                ], 
                                "type": "string"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                "format": "address"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "type": {
                          "enum": [
                            "sms", 
                            "mms"
                          ], 
                          "type": "string", 
                          "description": "The type of message. This value can be either 'sms' or 'mms'."
                        }, 
                        "parts": {
                          "minimum": 1, 
                          "type": "integer", 
                          "maximum": 10, 
                          "description": "Number of parts into which the message's body must be split."
                        }, 
                        "line_type": {
                          "enum": [
                            "Wireline", 
                            "Wireless", 
                            "VoWiFi", 
                            "VoIP", 
                            "Pre-Paid Wireless"
                          ], 
                          "type": "string", 
                          "description": "The line-type of the receiver.", 
                          "nullable": true
                        }, 
                        "carrier": {
                          "type": "string", 
                          "description": "The carrier of the receiver.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this message will be sent.", 
                          "nullable": true
                        }, 
                        "use_profile_webhooks": {
                          "default": false, 
                          "type": "boolean", 
                          "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "cost": {
                          "type": "object", 
                          "properties": {
                            "currency": {
                              "type": "string", 
                              "description": "The ISO 4217 currency identifier.", 
                              "format": "iso4217"
                            }, 
                            "amount": {
                              "type": "string", 
                              "description": "The amount deducted from your account.", 
                              "format": "decimal"
                            }
                          }, 
                          "nullable": true
                        }
                      }, 
                      "example": {
                        "valid_until": "2019-01-23T18:10:02.574Z", 
                        "direction": "outbound", 
                        "errors": [], 
                        "from": "+18445550001", 
                        "record_type": "message", 
                        "text": "Hello, World!", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "to": [
                          {
                            "status": "queued", 
                            "updated_at": "2019-01-23T18:10:02.574Z", 
                            "address": "+18665550001"
                          }
                        ], 
                        "type": "sms", 
                        "parts": 1, 
                        "line_type": "Wireless", 
                        "carrier": "Verizon", 
                        "webhook_url": "https://www.example.com/hooks", 
                        "use_profile_webhooks": false, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": "https://www.example.com/callbacks", 
                        "cost": {
                          "currency": "USD", 
                          "amount": "1.23"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Detailed message object"
          }
        }
      }
    }, 
    "/call_events": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "items": {
                        "required": [
                          "record_type", 
                          "call_leg_id", 
                          "call_session_id", 
                          "event_timestamp", 
                          "name", 
                          "type", 
                          "metadata"
                        ], 
                        "type": "object", 
                        "properties": {
                          "name": {
                            "type": "string", 
                            "description": "Event name"
                          }, 
                          "event_timestamp": {
                            "type": "string", 
                            "description": "Event timestamp"
                          }, 
                          "call_session_id": {
                            "type": "string", 
                            "description": "The unique identifier of the call control session. A session may include multiple call leg events."
                          }, 
                          "record_type": {
                            "enum": [
                              "call_event"
                            ], 
                            "type": "string"
                          }, 
                          "call_leg_id": {
                            "type": "string", 
                            "description": "The unique identifier of an individual call leg."
                          }, 
                          "type": {
                            "enum": [
                              "command", 
                              "webhook"
                            ], 
                            "type": "string", 
                            "description": "Event type"
                          }, 
                          "metadata": {
                            "type": "object", 
                            "description": "Event metadata, which includes raw event, and extra information based on event type"
                          }
                        }, 
                        "example": {
                          "name": "call.hangup", 
                          "event_timestamp": "2019-03-29T11:10:19.127783Z", 
                          "call_session_id": "308fec30-5213-11e9-9d3f-02420a0f0668", 
                          "record_type": "call_event", 
                          "call_leg_id": "308fe500-5213-11e9-ace7-02420a0f0668", 
                          "type": "webhook", 
                          "metadata": {}
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "An array of call events"
          }
        }, 
        "description": "Filters call events by given filter parameters. Events are ordered by `event_timestamp`. If filter for `call_leg_id` or `call_session_id` is not present, it only filters events from the last 24 hours.\n\n**Note**: Only one `filter[event_timestamp]` can be passed.\n", 
        "parameters": [
          {
            "required": false, 
            "in": "query", 
            "description": "The unique identifier of an individual call leg.", 
            "name": "filter[call_leg_id]", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "The unique identifier of the call control session. A session may include multiple call leg events.", 
            "name": "filter[call_session_id]", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event status", 
            "name": "filter[status]", 
            "schema": {
              "enum": [
                "delivered", 
                "failed"
              ], 
              "type": "string", 
              "example": "delivered"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event type", 
            "name": "filter[type]", 
            "schema": {
              "enum": [
                "command", 
                "webhook"
              ], 
              "type": "string", 
              "example": "webhook"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event timestamp: greater than", 
            "name": "filter[event_timestamp][gt]", 
            "schema": {
              "type": "string", 
              "example": "2019-03-29T11:10:00Z"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event timestamp: greater than or equal", 
            "name": "filter[event_timestamp][gte]", 
            "schema": {
              "type": "string", 
              "example": "2019-03-29T11:10:00Z"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event timestamp: lower than", 
            "name": "filter[event_timestamp][lt]", 
            "schema": {
              "type": "string", 
              "example": "2019-03-29T11:10:00Z"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event timestamp: lower than or equal", 
            "name": "filter[event_timestamp][lte]", 
            "schema": {
              "type": "string", 
              "example": "2019-03-29T11:10:00Z"
            }
          }, 
          {
            "required": false, 
            "in": "query", 
            "description": "Event timestamp: equal", 
            "name": "filter[event_timestamp][eq]", 
            "schema": {
              "type": "string", 
              "example": "2019-03-29T11:10:00Z"
            }
          }
        ], 
        "tags": [
          "Debugging"
        ], 
        "summary": "List call events", 
        "operationId": "CallControlDebuggingEventList"
      }
    }, 
    "/messages/number_pool": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "valid_until": {
                          "format": "date-time", 
                          "type": "string", 
                          "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                          "nullable": true
                        }, 
                        "media": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "url": {
                                "type": "string", 
                                "format": "url"
                              }, 
                              "content_type": {
                                "format": "mime-type", 
                                "type": "string", 
                                "nullable": true
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "direction": {
                          "enum": [
                            "outbound"
                          ], 
                          "type": "string", 
                          "example": "outbound", 
                          "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                        }, 
                        "errors": {
                          "items": {
                            "required": [
                              "code", 
                              "title"
                            ], 
                            "properties": {
                              "source": {
                                "type": "object", 
                                "properties": {
                                  "pointer": {
                                    "type": "string", 
                                    "description": "JSON pointer (RFC6901) to the offending entity.", 
                                    "format": "json-pointer"
                                  }, 
                                  "parameter": {
                                    "type": "string", 
                                    "description": "Indicates which query parameter caused the error."
                                  }
                                }
                              }, 
                              "code": {
                                "type": "string", 
                                "format": "int"
                              }, 
                              "meta": {
                                "type": "object"
                              }, 
                              "detail": {
                                "type": "string"
                              }, 
                              "title": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                        }, 
                        "from": {
                          "type": "string", 
                          "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                          "format": "address"
                        }, 
                        "record_type": {
                          "enum": [
                            "message"
                          ], 
                          "type": "string", 
                          "example": "message", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "text": {
                          "type": "string", 
                          "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "to": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "queued", 
                                  "sending", 
                                  "sent", 
                                  "delivered", 
                                  "sending_failed", 
                                  "delivery_failed", 
                                  "delivery_unconfirmed"
                                ], 
                                "type": "string"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                "format": "address"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "type": {
                          "enum": [
                            "sms", 
                            "mms"
                          ], 
                          "type": "string", 
                          "description": "The type of message. This value can be either 'sms' or 'mms'."
                        }, 
                        "parts": {
                          "minimum": 1, 
                          "type": "integer", 
                          "maximum": 10, 
                          "description": "Number of parts into which the message's body must be split."
                        }, 
                        "line_type": {
                          "enum": [
                            "Wireline", 
                            "Wireless", 
                            "VoWiFi", 
                            "VoIP", 
                            "Pre-Paid Wireless"
                          ], 
                          "type": "string", 
                          "description": "The line-type of the receiver.", 
                          "nullable": true
                        }, 
                        "carrier": {
                          "type": "string", 
                          "description": "The carrier of the receiver.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this message will be sent.", 
                          "nullable": true
                        }, 
                        "use_profile_webhooks": {
                          "default": false, 
                          "type": "boolean", 
                          "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "cost": {
                          "type": "object", 
                          "properties": {
                            "currency": {
                              "type": "string", 
                              "description": "The ISO 4217 currency identifier.", 
                              "format": "iso4217"
                            }, 
                            "amount": {
                              "type": "string", 
                              "description": "The amount deducted from your account.", 
                              "format": "decimal"
                            }
                          }, 
                          "nullable": true
                        }
                      }, 
                      "example": {
                        "valid_until": "2019-01-23T18:10:02.574Z", 
                        "direction": "outbound", 
                        "errors": [], 
                        "from": "+18445550001", 
                        "record_type": "message", 
                        "text": "Hello, World!", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "to": [
                          {
                            "status": "queued", 
                            "updated_at": "2019-01-23T18:10:02.574Z", 
                            "address": "+18665550001"
                          }
                        ], 
                        "type": "sms", 
                        "parts": 1, 
                        "line_type": "Wireless", 
                        "carrier": "Verizon", 
                        "webhook_url": "https://www.example.com/hooks", 
                        "use_profile_webhooks": false, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": "https://www.example.com/callbacks", 
                        "cost": {
                          "currency": "USD", 
                          "amount": "1.23"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Detailed message object"
          }
        }, 
        "tags": [
          "Messages"
        ], 
        "summary": "Send a message using Number Pool", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "to", 
                  "messaging_profile_id"
                ], 
                "type": "object", 
                "properties": {
                  "messaging_profile_id": {
                    "type": "string", 
                    "description": "Unique identifier for a messaging profile.", 
                    "format": "uuid"
                  }, 
                  "text": {
                    "type": "string", 
                    "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                  }, 
                  "to": {
                    "oneOf": [
                      {
                        "type": "string", 
                        "description": "Receiving address (+E.164 formatted phone number)", 
                        "format": "address"
                      }, 
                      {
                        "items": {
                          "type": "string", 
                          "description": "Receiving address (+E.164 formatted phone number)", 
                          "format": "address"
                        }, 
                        "type": "array"
                      }
                    ]
                  }, 
                  "webhook_url": {
                    "type": "string", 
                    "description": "The URL where webhooks related to this message will be sent.", 
                    "format": "url"
                  }, 
                  "media_urls": {
                    "items": {
                      "type": "string", 
                      "format": "url"
                    }, 
                    "type": "array", 
                    "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**"
                  }, 
                  "use_profile_webhooks": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                  }, 
                  "webhook_failover_url": {
                    "type": "string", 
                    "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                    "format": "url"
                  }, 
                  "subject": {
                    "type": "string", 
                    "description": "Subject of multimedia message"
                  }
                }
              }
            }
          }, 
          "description": "Message payload"
        }, 
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "valid_until": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                            "nullable": true
                          }, 
                          "media": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "url": {
                                  "type": "string", 
                                  "format": "url"
                                }, 
                                "content_type": {
                                  "format": "mime-type", 
                                  "type": "string", 
                                  "nullable": true
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "direction": {
                            "enum": [
                              "outbound"
                            ], 
                            "type": "string", 
                            "example": "outbound", 
                            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                          }, 
                          "errors": {
                            "items": {
                              "required": [
                                "code", 
                                "title"
                              ], 
                              "properties": {
                                "source": {
                                  "type": "object", 
                                  "properties": {
                                    "pointer": {
                                      "type": "string", 
                                      "description": "JSON pointer (RFC6901) to the offending entity.", 
                                      "format": "json-pointer"
                                    }, 
                                    "parameter": {
                                      "type": "string", 
                                      "description": "Indicates which query parameter caused the error."
                                    }
                                  }
                                }, 
                                "code": {
                                  "type": "string", 
                                  "format": "int"
                                }, 
                                "meta": {
                                  "type": "object"
                                }, 
                                "detail": {
                                  "type": "string"
                                }, 
                                "title": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "type": "array", 
                            "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                          }, 
                          "from": {
                            "type": "string", 
                            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                            "format": "address"
                          }, 
                          "record_type": {
                            "enum": [
                              "message"
                            ], 
                            "type": "string", 
                            "example": "message", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "text": {
                            "type": "string", 
                            "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "to": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "status": {
                                  "enum": [
                                    "queued", 
                                    "sending", 
                                    "sent", 
                                    "delivered", 
                                    "sending_failed", 
                                    "delivery_failed", 
                                    "delivery_unconfirmed"
                                  ], 
                                  "type": "string"
                                }, 
                                "updated_at": {
                                  "type": "string", 
                                  "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                  "format": "date-time"
                                }, 
                                "address": {
                                  "type": "string", 
                                  "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                  "format": "address"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "type": {
                            "enum": [
                              "sms", 
                              "mms"
                            ], 
                            "type": "string", 
                            "description": "The type of message. This value can be either 'sms' or 'mms'."
                          }, 
                          "parts": {
                            "minimum": 1, 
                            "type": "integer", 
                            "maximum": 10, 
                            "description": "Number of parts into which the message's body must be split."
                          }, 
                          "line_type": {
                            "enum": [
                              "Wireline", 
                              "Wireless", 
                              "VoWiFi", 
                              "VoIP", 
                              "Pre-Paid Wireless"
                            ], 
                            "type": "string", 
                            "description": "The line-type of the receiver.", 
                            "nullable": true
                          }, 
                          "carrier": {
                            "type": "string", 
                            "description": "The carrier of the receiver.", 
                            "nullable": true
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The URL where webhooks related to this message will be sent.", 
                            "nullable": true
                          }, 
                          "use_profile_webhooks": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                            "nullable": true
                          }, 
                          "cost": {
                            "type": "object", 
                            "properties": {
                              "currency": {
                                "type": "string", 
                                "description": "The ISO 4217 currency identifier.", 
                                "format": "iso4217"
                              }, 
                              "amount": {
                                "type": "string", 
                                "description": "The amount deducted from your account.", 
                                "format": "decimal"
                              }
                            }, 
                            "nullable": true
                          }
                        }, 
                        "example": {
                          "valid_until": "2019-01-23T18:10:02.574Z", 
                          "direction": "outbound", 
                          "errors": [], 
                          "from": "+18445550001", 
                          "record_type": "message", 
                          "text": "Hello, World!", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "to": [
                            {
                              "status": "queued", 
                              "updated_at": "2019-01-23T18:10:02.574Z", 
                              "address": "+18665550001"
                            }
                          ], 
                          "type": "sms", 
                          "parts": 1, 
                          "line_type": "Wireless", 
                          "carrier": "Verizon", 
                          "webhook_url": "https://www.example.com/hooks", 
                          "use_profile_webhooks": false, 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "webhook_failover_url": "https://www.example.com/callbacks", 
                          "cost": {
                            "currency": "USD", 
                            "amount": "1.23"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "createNumberPoolMessage"
      }
    }, 
    "/calls/{call_control_id}/actions/bridge": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Bridge calls", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "call_control_id"
                ], 
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }, 
                  "call_control_id": {
                    "type": "string", 
                    "description": "The Call Control ID of the call you want to bridge with.", 
                    "example": "c8ac9611-25c3-494a-b8b4-2f036a18a6b2"
                  }, 
                  "park_after_unbridge": {
                    "type": "string", 
                    "description": "Specifies behavior after the bridge ends (i.e. the opposite leg either hangs up or is transferred). If supplied with the value `self`, the current leg will be parked after unbridge. If not set, the default behavior is to hang up the leg.", 
                    "example": "self"
                  }
                }, 
                "title": "Bridge request"
              }
            }
          }, 
          "required": true, 
          "description": "Bridge call request"
        }, 
        "callbacks": {
          "callBridged": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "bridged"
                                ], 
                                "type": "string", 
                                "example": "bridged", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.bridged"
                            ], 
                            "type": "string", 
                            "example": "call.bridged", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlBridge", 
        "description": "Bridge two call control calls.\n\n**Expected Webhooks:**\n\n- `call.bridged` for Leg A\n- `call.bridged` for Leg B\n"
      }
    }, 
    "/number_orders/{number_order_id}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "phone_numbers": {
                          "writeOnly": true
                        }
                      }, 
                      "allOf": [
                        {
                          "properties": {
                            "status": {
                              "readOnly": true, 
                              "enum": [
                                "pending", 
                                "success", 
                                "failure"
                              ], 
                              "type": "string", 
                              "description": "The status of the order"
                            }, 
                            "requirements_met": {
                              "readOnly": true, 
                              "type": "boolean", 
                              "description": "True if all requirements are met for every phone number, false otherwise"
                            }, 
                            "messaging_profile_id": {
                              "format": "uuid", 
                              "type": "string", 
                              "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                              "description": "The messaging profile id to set the number to upon acquiring the number"
                            }, 
                            "phone_numbers_count": {
                              "readOnly": true, 
                              "type": "integer", 
                              "description": "The count of phone numbers in the number order", 
                              "example": 1
                            }, 
                            "created_at": {
                              "readOnly": true, 
                              "format": "datetime", 
                              "type": "string", 
                              "example": "2018-01-01T00:00:00.000000Z", 
                              "description": "An ISO 8901 datetime string denoting when the number order was created"
                            }, 
                            "connection_id": {
                              "type": "string", 
                              "description": "The connection id to set the number to upon acquiring the number", 
                              "example": "442191469269222625"
                            }, 
                            "updated_at": {
                              "readOnly": true, 
                              "format": "datetime", 
                              "type": "string", 
                              "example": "2018-01-01T00:00:00.000000Z", 
                              "description": "An ISO 8901 datetime string for when the number order was updated"
                            }, 
                            "record_type": {
                              "readOnly": true, 
                              "type": "string", 
                              "example": "number_order"
                            }, 
                            "id": {
                              "readOnly": true, 
                              "type": "string", 
                              "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                              "format": "uuid"
                            }, 
                            "webhook_url": {
                              "format": "url", 
                              "type": "string", 
                              "example": "https://webhook.test", 
                              "description": "A webhook URL for number order status updates"
                            }, 
                            "customer_reference": {
                              "type": "string", 
                              "description": "A customer reference string for customer look ups", 
                              "example": "MY REF 001"
                            }, 
                            "phone_numbers": {
                              "items": {
                                "properties": {
                                  "phone_number": {
                                    "type": "string", 
                                    "format": "e164_phone_number"
                                  }, 
                                  "status": {
                                    "readOnly": true, 
                                    "enum": [
                                      "pending", 
                                      "success", 
                                      "failure"
                                    ], 
                                    "type": "string", 
                                    "description": "The status of the phone number in the order"
                                  }, 
                                  "requirements_met": {
                                    "readOnly": true, 
                                    "type": "boolean", 
                                    "description": "True if all requirements are met for a phone number, false otherwise"
                                  }, 
                                  "regulatory_group_id": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                                  }, 
                                  "record_type": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "number_order_phone_number"
                                  }, 
                                  "regulatory_requirements": {
                                    "items": {
                                      "properties": {
                                        "record_type": {
                                          "readOnly": true, 
                                          "type": "string", 
                                          "example": "phone_number_regulatory_requirement"
                                        }, 
                                        "field_value": {
                                          "type": "string", 
                                          "description": "The value of the requirement, this could be an id to a resource or a string value"
                                        }, 
                                        "requirement_id": {
                                          "format": "uuid", 
                                          "type": "string", 
                                          "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                          "description": "Unique id for a requirement"
                                        }, 
                                        "field_type": {
                                          "readOnly": true, 
                                          "enum": [
                                            "string", 
                                            "datetime", 
                                            "address_id", 
                                            "number_order_document_id"
                                          ], 
                                          "type": "string", 
                                          "example": "address_id"
                                        }
                                      }
                                    }, 
                                    "type": "array"
                                  }, 
                                  "id": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                                    "format": "uuid"
                                  }
                                }
                              }, 
                              "writeOnly": true, 
                              "type": "array"
                            }, 
                            "webhook_failover_url": {
                              "format": "url", 
                              "type": "string", 
                              "example": "https://webhook-failover.test", 
                              "description": "If above webhook URL fails, this URL will be used as a fail over"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }, 
            "description": "Number order has been updated succesfully"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number order id", 
            "name": "number_order_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Orders"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Update phone number order", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status": {
                    "readOnly": true, 
                    "enum": [
                      "pending", 
                      "success", 
                      "failure"
                    ], 
                    "type": "string", 
                    "description": "The status of the order"
                  }, 
                  "requirements_met": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "True if all requirements are met for every phone number, false otherwise"
                  }, 
                  "messaging_profile_id": {
                    "format": "uuid", 
                    "type": "string", 
                    "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                    "description": "The messaging profile id to set the number to upon acquiring the number"
                  }, 
                  "phone_numbers_count": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The count of phone numbers in the number order", 
                    "example": 1
                  }, 
                  "created_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string denoting when the number order was created"
                  }, 
                  "connection_id": {
                    "type": "string", 
                    "description": "The connection id to set the number to upon acquiring the number", 
                    "example": "442191469269222625"
                  }, 
                  "updated_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string for when the number order was updated"
                  }, 
                  "record_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "number_order"
                  }, 
                  "id": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                    "format": "uuid"
                  }, 
                  "webhook_url": {
                    "format": "url", 
                    "type": "string", 
                    "example": "https://webhook.test", 
                    "description": "A webhook URL for number order status updates"
                  }, 
                  "customer_reference": {
                    "type": "string", 
                    "description": "A customer reference string for customer look ups", 
                    "example": "MY REF 001"
                  }, 
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "phone_number": {
                          "type": "string", 
                          "format": "e164_phone_number"
                        }, 
                        "status": {
                          "readOnly": true, 
                          "enum": [
                            "pending", 
                            "success", 
                            "failure"
                          ], 
                          "type": "string", 
                          "description": "The status of the phone number in the order"
                        }, 
                        "requirements_met": {
                          "readOnly": true, 
                          "type": "boolean", 
                          "description": "True if all requirements are met for a phone number, false otherwise"
                        }, 
                        "regulatory_group_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "number_order_phone_number"
                        }, 
                        "regulatory_requirements": {
                          "items": {
                            "properties": {
                              "record_type": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "phone_number_regulatory_requirement"
                              }, 
                              "field_value": {
                                "type": "string", 
                                "description": "The value of the requirement, this could be an id to a resource or a string value"
                              }, 
                              "requirement_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                "description": "Unique id for a requirement"
                              }, 
                              "field_type": {
                                "readOnly": true, 
                                "enum": [
                                  "string", 
                                  "datetime", 
                                  "address_id", 
                                  "number_order_document_id"
                                ], 
                                "type": "string", 
                                "example": "address_id"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                          "format": "uuid"
                        }
                      }
                    }, 
                    "writeOnly": true, 
                    "type": "array"
                  }, 
                  "webhook_failover_url": {
                    "format": "url", 
                    "type": "string", 
                    "example": "https://webhook-failover.test", 
                    "description": "If above webhook URL fails, this URL will be used as a fail over"
                  }
                }
              }
            }
          }, 
          "required": true
        }, 
        "operationId": "updateNumberOrder", 
        "description": "Updates a Phone Number Order"
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "phone_numbers": {
                          "writeOnly": true
                        }
                      }, 
                      "allOf": [
                        {
                          "properties": {
                            "status": {
                              "readOnly": true, 
                              "enum": [
                                "pending", 
                                "success", 
                                "failure"
                              ], 
                              "type": "string", 
                              "description": "The status of the order"
                            }, 
                            "requirements_met": {
                              "readOnly": true, 
                              "type": "boolean", 
                              "description": "True if all requirements are met for every phone number, false otherwise"
                            }, 
                            "messaging_profile_id": {
                              "format": "uuid", 
                              "type": "string", 
                              "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                              "description": "The messaging profile id to set the number to upon acquiring the number"
                            }, 
                            "phone_numbers_count": {
                              "readOnly": true, 
                              "type": "integer", 
                              "description": "The count of phone numbers in the number order", 
                              "example": 1
                            }, 
                            "created_at": {
                              "readOnly": true, 
                              "format": "datetime", 
                              "type": "string", 
                              "example": "2018-01-01T00:00:00.000000Z", 
                              "description": "An ISO 8901 datetime string denoting when the number order was created"
                            }, 
                            "connection_id": {
                              "type": "string", 
                              "description": "The connection id to set the number to upon acquiring the number", 
                              "example": "442191469269222625"
                            }, 
                            "updated_at": {
                              "readOnly": true, 
                              "format": "datetime", 
                              "type": "string", 
                              "example": "2018-01-01T00:00:00.000000Z", 
                              "description": "An ISO 8901 datetime string for when the number order was updated"
                            }, 
                            "record_type": {
                              "readOnly": true, 
                              "type": "string", 
                              "example": "number_order"
                            }, 
                            "id": {
                              "readOnly": true, 
                              "type": "string", 
                              "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                              "format": "uuid"
                            }, 
                            "webhook_url": {
                              "format": "url", 
                              "type": "string", 
                              "example": "https://webhook.test", 
                              "description": "A webhook URL for number order status updates"
                            }, 
                            "customer_reference": {
                              "type": "string", 
                              "description": "A customer reference string for customer look ups", 
                              "example": "MY REF 001"
                            }, 
                            "phone_numbers": {
                              "items": {
                                "properties": {
                                  "phone_number": {
                                    "type": "string", 
                                    "format": "e164_phone_number"
                                  }, 
                                  "status": {
                                    "readOnly": true, 
                                    "enum": [
                                      "pending", 
                                      "success", 
                                      "failure"
                                    ], 
                                    "type": "string", 
                                    "description": "The status of the phone number in the order"
                                  }, 
                                  "requirements_met": {
                                    "readOnly": true, 
                                    "type": "boolean", 
                                    "description": "True if all requirements are met for a phone number, false otherwise"
                                  }, 
                                  "regulatory_group_id": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                                  }, 
                                  "record_type": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "number_order_phone_number"
                                  }, 
                                  "regulatory_requirements": {
                                    "items": {
                                      "properties": {
                                        "record_type": {
                                          "readOnly": true, 
                                          "type": "string", 
                                          "example": "phone_number_regulatory_requirement"
                                        }, 
                                        "field_value": {
                                          "type": "string", 
                                          "description": "The value of the requirement, this could be an id to a resource or a string value"
                                        }, 
                                        "requirement_id": {
                                          "format": "uuid", 
                                          "type": "string", 
                                          "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                          "description": "Unique id for a requirement"
                                        }, 
                                        "field_type": {
                                          "readOnly": true, 
                                          "enum": [
                                            "string", 
                                            "datetime", 
                                            "address_id", 
                                            "number_order_document_id"
                                          ], 
                                          "type": "string", 
                                          "example": "address_id"
                                        }
                                      }
                                    }, 
                                    "type": "array"
                                  }, 
                                  "id": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                                    "format": "uuid"
                                  }
                                }
                              }, 
                              "writeOnly": true, 
                              "type": "array"
                            }, 
                            "webhook_failover_url": {
                              "format": "url", 
                              "type": "string", 
                              "example": "https://webhook-failover.test", 
                              "description": "If above webhook URL fails, this URL will be used as a fail over"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }, 
            "description": "Number order was found"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number order id", 
            "name": "number_order_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Orders"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Retrieve a single phone number order", 
        "operationId": "retrieveNumberOrder", 
        "description": "Retrieve an existing single phone number order"
      }
    }, 
    "/available_phone_numbers": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "example": {
                        "total_results": 100, 
                        "best_effort_results": 50
                      }, 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 1
                        }, 
                        "best_effort_results": {
                          "type": "integer", 
                          "example": 0
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "type": "object", 
                        "properties": {
                          "phone_number": {
                            "type": "string", 
                            "example": "+17735035030"
                          }, 
                          "reservable": {
                            "type": "boolean", 
                            "description": "Specifies whether the phone number can be reserved before purchase or not.", 
                            "example": true
                          }, 
                          "vanity_format": {
                            "type": "string"
                          }, 
                          "region_information": {
                            "items": {
                              "properties": {
                                "region_type": {
                                  "enum": [
                                    "country_code", 
                                    "rate_center", 
                                    "state", 
                                    "location"
                                  ], 
                                  "type": "string", 
                                  "example": "country_code"
                                }, 
                                "region_name": {
                                  "type": "string", 
                                  "example": "US"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "cost_information": {
                            "type": "object", 
                            "properties": {
                              "monthly_cost": {
                                "type": "string", 
                                "example": "6.54"
                              }, 
                              "upfront_cost": {
                                "type": "string", 
                                "example": "3.21"
                              }, 
                              "currency": {
                                "type": "string", 
                                "description": "The ISO 4217 code for the currency", 
                                "example": "USD"
                              }
                            }
                          }, 
                          "record_type": {
                            "enum": [
                              "available_phone_number"
                            ], 
                            "type": "string", 
                            "example": "available_phone_number"
                          }, 
                          "regulatory_requirements": {
                            "items": {
                              "properties": {
                                "field_type": {
                                  "enum": [
                                    "text field", 
                                    "file upload", 
                                    "address", 
                                    "datetime"
                                  ], 
                                  "type": "string"
                                }, 
                                "requirement_type": {
                                  "enum": [
                                    "entity identification", 
                                    "end user address", 
                                    "end user proof of address"
                                  ], 
                                  "type": "string"
                                }, 
                                "description": {
                                  "type": "string"
                                }, 
                                "label": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "quickship": {
                            "type": "boolean", 
                            "description": "Specifies whether the phone number can receive calls immediately after purchase or not.", 
                            "example": true
                          }, 
                          "best_effort": {
                            "type": "boolean", 
                            "description": "Specifies whether the phone number is an exact match based on the search criteria or not.", 
                            "example": false
                          }
                        }, 
                        "example": {
                          "phone_number": "+17735035030", 
                          "reservable": true, 
                          "vanity_format": "", 
                          "region_information": [
                            {
                              "region_type": "country_code", 
                              "region_name": "US"
                            }
                          ], 
                          "cost_information": {
                            "monthly_cost": "6.54", 
                            "upfront_cost": "3.21", 
                            "currency": "USD"
                          }, 
                          "record_type": "available_phone_number", 
                          "quickship": true, 
                          "best_effort": false
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "A paginated array of Phone Numbers"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "in": "query", 
            "examples": {
              "generic": {
                "value": "FOO", 
                "summary": "Find numbers starting with the prefix 'FREE'"
              }
            }, 
            "name": "filter[phone_number][starts_with]", 
            "description": "Filter numbers starting with a pattern"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "in": "query", 
            "examples": {
              "generic": {
                "value": "CALL", 
                "summary": "Find numbers ending with the suffix 'CALL'"
              }
            }, 
            "name": "filter[phone_number][ends_with]", 
            "description": "Filter numbers ending with a pattern"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "in": "query", 
            "examples": {
              "generic": {
                "value": "TELNYX", 
                "summary": "Find numbers that contain the word 'TELNYX' in any position"
              }
            }, 
            "name": "filter[phone_number][contains]", 
            "description": "Filter numbers containing a pattern"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "in": "query", 
            "examples": {
              "CA": {
                "value": "Toronto"
              }, 
              "AU": {
                "value": "Canberra"
              }, 
              "US": {
                "value": "Chicago"
              }
            }, 
            "name": "filter[locality]", 
            "description": "Filter phone numbers by city"
          }, 
          {
            "in": "query", 
            "description": "Filter phone numbers by US state/CA province", 
            "name": "filter[administrative_area]", 
            "schema": {
              "type": "string", 
              "example": "IL"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter phone numbers by ISO 2 country code", 
            "name": "filter[country_code]", 
            "schema": {
              "type": "string", 
              "example": "US"
            }
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "in": "query", 
            "examples": {
              "CA": {
                "value": "437"
              }, 
              "AU": {
                "value": "0251"
              }, 
              "US": {
                "value": "312"
              }
            }, 
            "name": "filter[national_destination_code]", 
            "description": "Filter by the national destination code of the number. This filter is only applicable to North American numbers"
          }, 
          {
            "in": "query", 
            "description": "Filter phone numbers by NANP rate center. This filter is only applicable to North American numbers", 
            "name": "filter[rate_center]", 
            "schema": {
              "type": "string", 
              "example": "CHICAGO HEIGHTS"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter phone numbers by number type", 
            "name": "filter[number_type]", 
            "schema": {
              "enum": [
                "toll-free", 
                "national", 
                "mobile", 
                "local"
              ], 
              "type": "string", 
              "example": "local"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter if the phone number should be used for voice, fax, sms", 
            "name": "filter[features]", 
            "schema": {
              "items": {
                "enum": [
                  "sms", 
                  "mms", 
                  "voice", 
                  "fax"
                ], 
                "type": "string"
              }, 
              "type": "array", 
              "example": "voice,sms"
            }
          }, 
          {
            "in": "query", 
            "description": "Limits the number of results", 
            "name": "filter[limit]", 
            "schema": {
              "type": "integer", 
              "example": 100
            }
          }, 
          {
            "in": "query", 
            "description": "Filter to determine if best effort results should be included.", 
            "name": "filter[best_effort]", 
            "schema": {
              "type": "boolean", 
              "example": false
            }
          }, 
          {
            "in": "query", 
            "description": "Filter to exclude phone numbers that need additional time after to purchase to receive phone calls.", 
            "name": "filter[quickship]", 
            "schema": {
              "type": "boolean", 
              "example": true
            }
          }, 
          {
            "in": "query", 
            "description": "Filter to exclude phone numbers that cannot be reserved before purchase.", 
            "name": "filter[reservable]", 
            "schema": {
              "type": "boolean", 
              "example": true
            }
          }, 
          {
            "in": "query", 
            "description": "Filter to determine if the phone number has regulatory requirements", 
            "name": "filter[exclude_regulatory_requirements]", 
            "schema": {
              "type": "boolean", 
              "example": false
            }
          }
        ], 
        "tags": [
          "Number Search"
        ], 
        "x-latency-category": "responsive", 
        "summary": "List available phone numbers", 
        "operationId": "listAvailablePhoneNumbers"
      }
    }, 
    "/calls/{call_control_id}/actions/reject": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Reject call", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Reject request"
              }
            }
          }, 
          "required": true, 
          "description": "Reject request"
        }, 
        "callbacks": {
          "callHangup": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "sip_hangup_cause": {
                                "type": "string", 
                                "example": "603", 
                                "description": "The reason the call was ended (SIP response code). If the SIP response is unavailable (in inbound calls for example) this is set to `unspecified`."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "hangup"
                                ], 
                                "type": "string", 
                                "example": "hangup", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "hangup_cause": {
                                "enum": [
                                  "call_rejected", 
                                  "normal_clearing", 
                                  "originator_cancel", 
                                  "timeout", 
                                  "time_limit", 
                                  "user_busy", 
                                  "not_found", 
                                  "unspecified"
                                ], 
                                "type": "string", 
                                "example": "call_rejected", 
                                "description": "The reason the call was ended (`call_rejected`, `normal_clearing`, `originator_cancel`, `timeout`, `time_limit`, `user_busy`, `not_found` or `unspecified`)."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.hangup"
                            ], 
                            "type": "string", 
                            "example": "call.hangup", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlReject", 
        "description": "Reject an incoming call.\n\n**Expected Webhooks:**\n\n- `call.hangup`\n"
      }
    }, 
    "/messaging_profiles/{id}/phone_numbers": {
      "get": {
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "List all phone numbers associated with a messaging profile", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "type": "object", 
                        "example": {
                          "phone_number": "+18005550001", 
                          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "id": "+18665550001", 
                          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "record_type": "messaging_phone_number", 
                          "country_code": "US", 
                          "traffic_type": "P2P", 
                          "type": "toll-free", 
                          "messaging_product": "P2P"
                        }, 
                        "properties": {
                          "phone_number": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "+E.164 formatted phone number.", 
                            "format": "e164"
                          }, 
                          "eligible_messaging_products": {
                            "items": {
                              "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array", 
                            "description": "The messaging products that this number can be registered to use"
                          }, 
                          "features": {
                            "readOnly": true, 
                            "type": "object", 
                            "properties": {
                              "sms": {
                                "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                                "nullable": true, 
                                "default": null, 
                                "required": [
                                  "domestic_two_way", 
                                  "international_inbound", 
                                  "international_outbound"
                                ], 
                                "type": "object", 
                                "properties": {
                                  "international_inbound": {
                                    "type": "boolean", 
                                    "description": "Receive messages from numbers in other countries."
                                  }, 
                                  "international_outbound": {
                                    "type": "boolean", 
                                    "description": "Send messages to numbers in other countries."
                                  }, 
                                  "domestic_two_way": {
                                    "type": "boolean", 
                                    "description": "Send messages to and receive messages from numbers in the same country."
                                  }
                                }
                              }, 
                              "mms": {
                                "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                                "nullable": true, 
                                "default": null, 
                                "required": [
                                  "domestic_two_way", 
                                  "international_inbound", 
                                  "international_outbound"
                                ], 
                                "type": "object", 
                                "properties": {
                                  "international_inbound": {
                                    "type": "boolean", 
                                    "description": "Receive messages from numbers in other countries."
                                  }, 
                                  "international_outbound": {
                                    "type": "boolean", 
                                    "description": "Send messages to numbers in other countries."
                                  }, 
                                  "domestic_two_way": {
                                    "type": "boolean", 
                                    "description": "Send messages to and receive messages from numbers in the same country."
                                  }
                                }
                              }
                            }
                          }, 
                          "messaging_profile_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Unique identifier for a messaging profile.", 
                            "nullable": true
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object."
                          }, 
                          "organization_id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Unique identifier for the organization that owns the resource.", 
                            "format": "uuid"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "enum": [
                              "messaging_phone_number"
                            ], 
                            "type": "string", 
                            "example": "messaging_phone_number", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "country_code": {
                            "pattern": "^[A-Z]{2}$", 
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code.", 
                            "example": "US"
                          }, 
                          "traffic_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "The messaging traffic or use case for which the number is currently configured.", 
                            "example": "P2P"
                          }, 
                          "type": {
                            "readOnly": true, 
                            "enum": [
                              "long-code", 
                              "toll-free", 
                              "short-code"
                            ], 
                            "type": "string", 
                            "description": "The type of the phone number"
                          }, 
                          "messaging_product": {
                            "type": "string", 
                            "description": "The messaging product that the number is registered to use", 
                            "example": "P2P"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Paginated array of phone numbers associated with the messaging profile"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }, 
          {
            "in": "query", 
            "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.", 
            "name": "page[token]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the messaging profile to retrieve", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "operationId": "listMessagingProfilePhoneNumbers"
      }
    }, 
    "/short_codes": {
      "get": {
        "tags": [
          "Short Codes"
        ], 
        "summary": "List all short codes", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "required": [
                          "messaging_profile_id"
                        ], 
                        "type": "object", 
                        "example": {
                          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "short_code": "12345", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "record_type": "short_code", 
                          "country_code": "US", 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        }, 
                        "properties": {
                          "messaging_profile_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Unique identifier for a messaging profile.", 
                            "nullable": true
                          }, 
                          "short_code": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Short digit sequence used to address messages."
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "organization_id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Unique identifier for the organization that owns the resource.", 
                            "format": "uuid"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "enum": [
                              "short_code"
                            ], 
                            "type": "string", 
                            "example": "short_code", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "country_code": {
                            "pattern": "^[A-Z]{2}$", 
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code.", 
                            "example": "US"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "A paginated array of the short codes"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }, 
          {
            "in": "query", 
            "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.", 
            "name": "page[token]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/short_codes` endpoint when querying about an extant profile.", 
            "name": "filter[messaging_profile_id]", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "operationId": "listShortCodes"
      }
    }, 
    "/messaging_profiles/{id}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string", 
                          "description": "A user friendly name for the messaging profile"
                        }, 
                        "number_pool_settings": {
                          "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "toll_free_weight", 
                            "long_code_weight", 
                            "skip_unhealthy"
                          ], 
                          "type": "object", 
                          "properties": {
                            "long_code_weight": {
                              "type": "number", 
                              "example": 1.0, 
                              "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "skip_unhealthy": {
                              "type": "boolean", 
                              "example": true, 
                              "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                            }, 
                            "toll_free_weight": {
                              "type": "number", 
                              "example": 10.0, 
                              "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "sticky_sender": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                            }, 
                            "geomatch": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                            }
                          }
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "webhook_api_version": {
                          "enum": [
                            "1", 
                            "2"
                          ], 
                          "type": "string", 
                          "description": "Determines which webhook format will be used, API v1 or API v2."
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "messaging_profile"
                          ], 
                          "type": "string", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "url_shortener_settings": {
                          "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "domain"
                          ], 
                          "type": "object", 
                          "properties": {
                            "domain": {
                              "type": "string", 
                              "example": "acct.fyi", 
                              "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                            }, 
                            "prefix": {
                              "type": "string", 
                              "example": "", 
                              "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                            }
                          }
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "whitelisted_destinations": {
                          "items": {
                            "pattern": "^[A-Z]{2}$", 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code."
                          }, 
                          "type": "array", 
                          "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this messaging profile will be sent.", 
                          "nullable": true
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "enabled": {
                          "type": "boolean", 
                          "description": "Specifies whether the messaging profile is enabled or not."
                        }
                      }, 
                      "example": {
                        "name": "Profile for Messages", 
                        "webhook_api_version": "2", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "enabled": true, 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "messaging_profile", 
                        "whitelisted_destinations": [
                          "US"
                        ], 
                        "webhook_url": null, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": null
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected messaging profile response to a valid request"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the messaging profile to retrieve", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "Update a messaging profile", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "description": "A user friendly name for the messaging profile"
                  }, 
                  "number_pool_settings": {
                    "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                    "nullable": true, 
                    "default": null, 
                    "required": [
                      "toll_free_weight", 
                      "long_code_weight", 
                      "skip_unhealthy"
                    ], 
                    "type": "object", 
                    "properties": {
                      "long_code_weight": {
                        "type": "number", 
                        "example": 1.0, 
                        "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                      }, 
                      "skip_unhealthy": {
                        "type": "boolean", 
                        "example": true, 
                        "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                      }, 
                      "toll_free_weight": {
                        "type": "number", 
                        "example": 10.0, 
                        "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                      }, 
                      "sticky_sender": {
                        "default": false, 
                        "type": "boolean", 
                        "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                      }, 
                      "geomatch": {
                        "default": false, 
                        "type": "boolean", 
                        "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                      }
                    }
                  }, 
                  "created_at": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ISO 8601 formatted date indicating when the resource was created.", 
                    "format": "date-time"
                  }, 
                  "webhook_api_version": {
                    "enum": [
                      "1", 
                      "2"
                    ], 
                    "type": "string", 
                    "description": "Determines which webhook format will be used, API v1 or API v2."
                  }, 
                  "updated_at": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                    "format": "date-time"
                  }, 
                  "organization_id": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Unique identifier for the organization that owns the resource.", 
                    "format": "uuid"
                  }, 
                  "record_type": {
                    "readOnly": true, 
                    "enum": [
                      "messaging_profile"
                    ], 
                    "type": "string", 
                    "description": "Identifies the type of the resource."
                  }, 
                  "url_shortener_settings": {
                    "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                    "nullable": true, 
                    "default": null, 
                    "required": [
                      "domain"
                    ], 
                    "type": "object", 
                    "properties": {
                      "domain": {
                        "type": "string", 
                        "example": "acct.fyi", 
                        "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                      }, 
                      "prefix": {
                        "type": "string", 
                        "example": "", 
                        "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                      }
                    }
                  }, 
                  "webhook_failover_url": {
                    "format": "url", 
                    "type": "string", 
                    "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                    "nullable": true
                  }, 
                  "whitelisted_destinations": {
                    "items": {
                      "pattern": "^[A-Z]{2}$", 
                      "type": "string", 
                      "description": "ISO 3166-1 alpha-2 country code."
                    }, 
                    "type": "array", 
                    "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.", 
                    "nullable": true
                  }, 
                  "webhook_url": {
                    "format": "url", 
                    "type": "string", 
                    "description": "The URL where webhooks related to this messaging profile will be sent.", 
                    "nullable": true
                  }, 
                  "id": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Uniquely identifies the resource or object.", 
                    "format": "uuid"
                  }, 
                  "enabled": {
                    "type": "boolean", 
                    "description": "Specifies whether the messaging profile is enabled or not."
                  }
                }, 
                "example": {
                  "name": "Profile for Messages", 
                  "webhook_api_version": "2", 
                  "created_at": "2019-01-23T18:10:02.574Z", 
                  "enabled": true, 
                  "updated_at": "2019-01-23T18:10:02.574Z", 
                  "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                  "record_type": "messaging_profile", 
                  "whitelisted_destinations": [
                    "US"
                  ], 
                  "webhook_url": null, 
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                  "webhook_failover_url": null
                }
              }
            }
          }, 
          "required": true, 
          "description": "New Messaging Profile object"
        }, 
        "operationId": "updateMessagingProfile"
      }, 
      "get": {
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "Retrieve a messaging profile", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string", 
                          "description": "A user friendly name for the messaging profile"
                        }, 
                        "number_pool_settings": {
                          "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "toll_free_weight", 
                            "long_code_weight", 
                            "skip_unhealthy"
                          ], 
                          "type": "object", 
                          "properties": {
                            "long_code_weight": {
                              "type": "number", 
                              "example": 1.0, 
                              "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "skip_unhealthy": {
                              "type": "boolean", 
                              "example": true, 
                              "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                            }, 
                            "toll_free_weight": {
                              "type": "number", 
                              "example": 10.0, 
                              "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "sticky_sender": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                            }, 
                            "geomatch": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                            }
                          }
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "webhook_api_version": {
                          "enum": [
                            "1", 
                            "2"
                          ], 
                          "type": "string", 
                          "description": "Determines which webhook format will be used, API v1 or API v2."
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "messaging_profile"
                          ], 
                          "type": "string", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "url_shortener_settings": {
                          "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "domain"
                          ], 
                          "type": "object", 
                          "properties": {
                            "domain": {
                              "type": "string", 
                              "example": "acct.fyi", 
                              "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                            }, 
                            "prefix": {
                              "type": "string", 
                              "example": "", 
                              "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                            }
                          }
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "whitelisted_destinations": {
                          "items": {
                            "pattern": "^[A-Z]{2}$", 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code."
                          }, 
                          "type": "array", 
                          "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this messaging profile will be sent.", 
                          "nullable": true
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "enabled": {
                          "type": "boolean", 
                          "description": "Specifies whether the messaging profile is enabled or not."
                        }
                      }, 
                      "example": {
                        "name": "Profile for Messages", 
                        "webhook_api_version": "2", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "enabled": true, 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "messaging_profile", 
                        "whitelisted_destinations": [
                          "US"
                        ], 
                        "webhook_url": null, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": null
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected messaging profile response to a valid request"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the messaging profile to retrieve", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "operationId": "retrieveMessagingProfile"
      }, 
      "delete": {
        "tags": [
          "Messaging Profiles"
        ], 
        "summary": "Delete a messaging profile", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string", 
                          "description": "A user friendly name for the messaging profile"
                        }, 
                        "number_pool_settings": {
                          "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type. The pool consists of all the long code and toll free numbers\nassigned to the messaging profile.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "toll_free_weight", 
                            "long_code_weight", 
                            "skip_unhealthy"
                          ], 
                          "type": "object", 
                          "properties": {
                            "long_code_weight": {
                              "type": "number", 
                              "example": 1.0, 
                              "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "skip_unhealthy": {
                              "type": "boolean", 
                              "example": true, 
                              "description": "If set to true all unhealthy numbers will be automatically excluded from the pool.\nHealth metrics per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
                            }, 
                            "toll_free_weight": {
                              "type": "number", 
                              "example": 10.0, 
                              "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
                            }, 
                            "sticky_sender": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to true, a new\nnumber will be chosen.\n"
                            }, 
                            "geomatch": {
                              "default": false, 
                              "type": "boolean", 
                              "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
                            }
                          }
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "webhook_api_version": {
                          "enum": [
                            "1", 
                            "2"
                          ], 
                          "type": "string", 
                          "description": "Determines which webhook format will be used, API v1 or API v2."
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "messaging_profile"
                          ], 
                          "type": "string", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "url_shortener_settings": {
                          "description": "The URL shortener feature allows automatic replacement of URLs that were generated using\na public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,\nis.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with\nwith links generated by Telnyx. The use of custom links can improve branding and message\ndeliverability.\n\nTo disable this feature, set the object field to `null`.\n", 
                          "nullable": true, 
                          "default": null, 
                          "required": [
                            "domain"
                          ], 
                          "type": "object", 
                          "properties": {
                            "domain": {
                              "type": "string", 
                              "example": "acct.fyi", 
                              "description": "One of the domains provided by the Telnyx URL shortener service.\n"
                            }, 
                            "prefix": {
                              "type": "string", 
                              "example": "", 
                              "description": "Optional prefix that can be used to identify your brand, and will appear in the Telnyx generated URLs after the domain name.\n"
                            }
                          }
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "whitelisted_destinations": {
                          "items": {
                            "pattern": "^[A-Z]{2}$", 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code."
                          }, 
                          "type": "array", 
                          "description": "Destinations to which the messaging profile is allowed to send. If set to `null`, all destinations will be allowed. Setting a value of `[\"*\"]` has the equivalent effect. The elements in the list must be valid ISO 3166-1 alpha-2 country codes.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this messaging profile will be sent.", 
                          "nullable": true
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "enabled": {
                          "type": "boolean", 
                          "description": "Specifies whether the messaging profile is enabled or not."
                        }
                      }, 
                      "example": {
                        "name": "Profile for Messages", 
                        "webhook_api_version": "2", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "enabled": true, 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "messaging_profile", 
                        "whitelisted_destinations": [
                          "US"
                        ], 
                        "webhook_url": null, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": null
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected messaging profile response to a valid request"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the messaging profile to retrieve", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "operationId": "deleteMessagingProfile"
      }
    }, 
    "/messaging_phone_numbers": {
      "get": {
        "tags": [
          "Phone Numbers"
        ], 
        "summary": "List all messaging capable phone numbers", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "type": "object", 
                        "example": {
                          "phone_number": "+18005550001", 
                          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "id": "+18665550001", 
                          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "record_type": "messaging_phone_number", 
                          "country_code": "US", 
                          "traffic_type": "P2P", 
                          "type": "toll-free", 
                          "messaging_product": "P2P"
                        }, 
                        "properties": {
                          "phone_number": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "+E.164 formatted phone number.", 
                            "format": "e164"
                          }, 
                          "eligible_messaging_products": {
                            "items": {
                              "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array", 
                            "description": "The messaging products that this number can be registered to use"
                          }, 
                          "features": {
                            "readOnly": true, 
                            "type": "object", 
                            "properties": {
                              "sms": {
                                "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                                "nullable": true, 
                                "default": null, 
                                "required": [
                                  "domestic_two_way", 
                                  "international_inbound", 
                                  "international_outbound"
                                ], 
                                "type": "object", 
                                "properties": {
                                  "international_inbound": {
                                    "type": "boolean", 
                                    "description": "Receive messages from numbers in other countries."
                                  }, 
                                  "international_outbound": {
                                    "type": "boolean", 
                                    "description": "Send messages to numbers in other countries."
                                  }, 
                                  "domestic_two_way": {
                                    "type": "boolean", 
                                    "description": "Send messages to and receive messages from numbers in the same country."
                                  }
                                }
                              }, 
                              "mms": {
                                "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n", 
                                "nullable": true, 
                                "default": null, 
                                "required": [
                                  "domestic_two_way", 
                                  "international_inbound", 
                                  "international_outbound"
                                ], 
                                "type": "object", 
                                "properties": {
                                  "international_inbound": {
                                    "type": "boolean", 
                                    "description": "Receive messages from numbers in other countries."
                                  }, 
                                  "international_outbound": {
                                    "type": "boolean", 
                                    "description": "Send messages to numbers in other countries."
                                  }, 
                                  "domestic_two_way": {
                                    "type": "boolean", 
                                    "description": "Send messages to and receive messages from numbers in the same country."
                                  }
                                }
                              }
                            }
                          }, 
                          "messaging_profile_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Unique identifier for a messaging profile.", 
                            "nullable": true
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object."
                          }, 
                          "organization_id": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "Unique identifier for the organization that owns the resource.", 
                            "format": "uuid"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "enum": [
                              "messaging_phone_number"
                            ], 
                            "type": "string", 
                            "example": "messaging_phone_number", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "country_code": {
                            "pattern": "^[A-Z]{2}$", 
                            "readOnly": true, 
                            "type": "string", 
                            "description": "ISO 3166-1 alpha-2 country code.", 
                            "example": "US"
                          }, 
                          "traffic_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "The messaging traffic or use case for which the number is currently configured.", 
                            "example": "P2P"
                          }, 
                          "type": {
                            "readOnly": true, 
                            "enum": [
                              "long-code", 
                              "toll-free", 
                              "short-code"
                            ], 
                            "type": "string", 
                            "description": "The type of the phone number"
                          }, 
                          "messaging_product": {
                            "type": "string", 
                            "description": "The messaging product that the number is registered to use", 
                            "example": "P2P"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "A paginated array of the phone numbers"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "The page number to load", 
            "name": "page[number]", 
            "schema": {
              "default": 1, 
              "minimum": 1, 
              "type": "integer"
            }
          }, 
          {
            "in": "query", 
            "description": "The size of the page", 
            "name": "page[size]", 
            "schema": {
              "default": 20, 
              "minimum": 1, 
              "type": "integer", 
              "maximum": 250
            }
          }, 
          {
            "in": "query", 
            "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.", 
            "name": "page[token]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/phone_number` endpoint when querying about an extant profile.", 
            "name": "filter[messaging_profile_id]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "A comma separated list of phone numbers to return", 
            "name": "filter[phone_number]", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "operationId": "listMessagingPhoneNumbers"
      }
    }, 
    "/messages/short_code": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "properties": {
                        "valid_until": {
                          "format": "date-time", 
                          "type": "string", 
                          "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                          "nullable": true
                        }, 
                        "media": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "url": {
                                "type": "string", 
                                "format": "url"
                              }, 
                              "content_type": {
                                "format": "mime-type", 
                                "type": "string", 
                                "nullable": true
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "direction": {
                          "enum": [
                            "outbound"
                          ], 
                          "type": "string", 
                          "example": "outbound", 
                          "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                        }, 
                        "errors": {
                          "items": {
                            "required": [
                              "code", 
                              "title"
                            ], 
                            "properties": {
                              "source": {
                                "type": "object", 
                                "properties": {
                                  "pointer": {
                                    "type": "string", 
                                    "description": "JSON pointer (RFC6901) to the offending entity.", 
                                    "format": "json-pointer"
                                  }, 
                                  "parameter": {
                                    "type": "string", 
                                    "description": "Indicates which query parameter caused the error."
                                  }
                                }
                              }, 
                              "code": {
                                "type": "string", 
                                "format": "int"
                              }, 
                              "meta": {
                                "type": "object"
                              }, 
                              "detail": {
                                "type": "string"
                              }, 
                              "title": {
                                "type": "string"
                              }
                            }
                          }, 
                          "type": "array", 
                          "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                        }, 
                        "from": {
                          "type": "string", 
                          "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                          "format": "address"
                        }, 
                        "record_type": {
                          "enum": [
                            "message"
                          ], 
                          "type": "string", 
                          "example": "message", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "text": {
                          "type": "string", 
                          "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                        }, 
                        "created_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "to": {
                          "items": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "queued", 
                                  "sending", 
                                  "sent", 
                                  "delivered", 
                                  "sending_failed", 
                                  "delivery_failed", 
                                  "delivery_unconfirmed"
                                ], 
                                "type": "string"
                              }, 
                              "updated_at": {
                                "type": "string", 
                                "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                "format": "date-time"
                              }, 
                              "address": {
                                "type": "string", 
                                "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                "format": "address"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "type": {
                          "enum": [
                            "sms", 
                            "mms"
                          ], 
                          "type": "string", 
                          "description": "The type of message. This value can be either 'sms' or 'mms'."
                        }, 
                        "parts": {
                          "minimum": 1, 
                          "type": "integer", 
                          "maximum": 10, 
                          "description": "Number of parts into which the message's body must be split."
                        }, 
                        "line_type": {
                          "enum": [
                            "Wireline", 
                            "Wireless", 
                            "VoWiFi", 
                            "VoIP", 
                            "Pre-Paid Wireless"
                          ], 
                          "type": "string", 
                          "description": "The line-type of the receiver.", 
                          "nullable": true
                        }, 
                        "carrier": {
                          "type": "string", 
                          "description": "The carrier of the receiver.", 
                          "nullable": true
                        }, 
                        "webhook_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The URL where webhooks related to this message will be sent.", 
                          "nullable": true
                        }, 
                        "use_profile_webhooks": {
                          "default": false, 
                          "type": "boolean", 
                          "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                        }, 
                        "id": {
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }, 
                        "webhook_failover_url": {
                          "format": "url", 
                          "type": "string", 
                          "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                          "nullable": true
                        }, 
                        "cost": {
                          "type": "object", 
                          "properties": {
                            "currency": {
                              "type": "string", 
                              "description": "The ISO 4217 currency identifier.", 
                              "format": "iso4217"
                            }, 
                            "amount": {
                              "type": "string", 
                              "description": "The amount deducted from your account.", 
                              "format": "decimal"
                            }
                          }, 
                          "nullable": true
                        }
                      }, 
                      "example": {
                        "valid_until": "2019-01-23T18:10:02.574Z", 
                        "direction": "outbound", 
                        "errors": [], 
                        "from": "+18445550001", 
                        "record_type": "message", 
                        "text": "Hello, World!", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "to": [
                          {
                            "status": "queued", 
                            "updated_at": "2019-01-23T18:10:02.574Z", 
                            "address": "+18665550001"
                          }
                        ], 
                        "type": "sms", 
                        "parts": 1, 
                        "line_type": "Wireless", 
                        "carrier": "Verizon", 
                        "webhook_url": "https://www.example.com/hooks", 
                        "use_profile_webhooks": false, 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "webhook_failover_url": "https://www.example.com/callbacks", 
                        "cost": {
                          "currency": "USD", 
                          "amount": "1.23"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Detailed message object"
          }
        }, 
        "tags": [
          "Messages"
        ], 
        "summary": "Send a Short Code message", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "from", 
                  "to"
                ], 
                "type": "object", 
                "properties": {
                  "from": {
                    "type": "string", 
                    "description": "Phone number, in +E.164 format, used to send the message", 
                    "format": "address"
                  }, 
                  "text": {
                    "type": "string", 
                    "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                  }, 
                  "to": {
                    "oneOf": [
                      {
                        "type": "string", 
                        "description": "Receiving address (+E.164 formatted phone number)", 
                        "format": "address"
                      }, 
                      {
                        "items": {
                          "type": "string", 
                          "description": "Receiving short code", 
                          "format": "address"
                        }, 
                        "type": "array"
                      }
                    ]
                  }, 
                  "webhook_url": {
                    "default": "", 
                    "type": "string", 
                    "description": "The URL where webhooks related to this message will be sent.", 
                    "format": "url"
                  }, 
                  "media_urls": {
                    "items": {
                      "type": "string", 
                      "format": "url"
                    }, 
                    "type": "array", 
                    "description": "A list of media URLs. The total media size must be less than 1 MB.\n\n**Required for MMS**"
                  }, 
                  "use_profile_webhooks": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                  }, 
                  "webhook_failover_url": {
                    "default": "", 
                    "type": "string", 
                    "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                    "format": "url"
                  }, 
                  "subject": {
                    "type": "string", 
                    "description": "Subject of multimedia message"
                  }
                }
              }
            }
          }, 
          "description": "Message payload"
        }, 
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "valid_until": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled", 
                            "nullable": true
                          }, 
                          "media": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "url": {
                                  "type": "string", 
                                  "format": "url"
                                }, 
                                "content_type": {
                                  "format": "mime-type", 
                                  "type": "string", 
                                  "nullable": true
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "direction": {
                            "enum": [
                              "outbound"
                            ], 
                            "type": "string", 
                            "example": "outbound", 
                            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
                          }, 
                          "errors": {
                            "items": {
                              "required": [
                                "code", 
                                "title"
                              ], 
                              "properties": {
                                "source": {
                                  "type": "object", 
                                  "properties": {
                                    "pointer": {
                                      "type": "string", 
                                      "description": "JSON pointer (RFC6901) to the offending entity.", 
                                      "format": "json-pointer"
                                    }, 
                                    "parameter": {
                                      "type": "string", 
                                      "description": "Indicates which query parameter caused the error."
                                    }
                                  }
                                }, 
                                "code": {
                                  "type": "string", 
                                  "format": "int"
                                }, 
                                "meta": {
                                  "type": "object"
                                }, 
                                "detail": {
                                  "type": "string"
                                }, 
                                "title": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "type": "array", 
                            "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses."
                          }, 
                          "from": {
                            "type": "string", 
                            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)", 
                            "format": "address"
                          }, 
                          "record_type": {
                            "enum": [
                              "message"
                            ], 
                            "type": "string", 
                            "example": "message", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "text": {
                            "type": "string", 
                            "description": "Message body (i.e., content) as a non-empty string.\n\n**Required for SMS**"
                          }, 
                          "created_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was created.", 
                            "format": "date-time"
                          }, 
                          "updated_at": {
                            "type": "string", 
                            "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                            "format": "date-time"
                          }, 
                          "to": {
                            "items": {
                              "type": "object", 
                              "properties": {
                                "status": {
                                  "enum": [
                                    "queued", 
                                    "sending", 
                                    "sent", 
                                    "delivered", 
                                    "sending_failed", 
                                    "delivery_failed", 
                                    "delivery_unconfirmed"
                                  ], 
                                  "type": "string"
                                }, 
                                "updated_at": {
                                  "type": "string", 
                                  "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                                  "format": "date-time"
                                }, 
                                "address": {
                                  "type": "string", 
                                  "description": "Receiving address (+E.164 formatted phone number or short code)", 
                                  "format": "address"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "type": {
                            "enum": [
                              "sms", 
                              "mms"
                            ], 
                            "type": "string", 
                            "description": "The type of message. This value can be either 'sms' or 'mms'."
                          }, 
                          "parts": {
                            "minimum": 1, 
                            "type": "integer", 
                            "maximum": 10, 
                            "description": "Number of parts into which the message's body must be split."
                          }, 
                          "line_type": {
                            "enum": [
                              "Wireline", 
                              "Wireless", 
                              "VoWiFi", 
                              "VoIP", 
                              "Pre-Paid Wireless"
                            ], 
                            "type": "string", 
                            "description": "The line-type of the receiver.", 
                            "nullable": true
                          }, 
                          "carrier": {
                            "type": "string", 
                            "description": "The carrier of the receiver.", 
                            "nullable": true
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The URL where webhooks related to this message will be sent.", 
                            "nullable": true
                          }, 
                          "use_profile_webhooks": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
                          }, 
                          "id": {
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "format": "uuid"
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.", 
                            "nullable": true
                          }, 
                          "cost": {
                            "type": "object", 
                            "properties": {
                              "currency": {
                                "type": "string", 
                                "description": "The ISO 4217 currency identifier.", 
                                "format": "iso4217"
                              }, 
                              "amount": {
                                "type": "string", 
                                "description": "The amount deducted from your account.", 
                                "format": "decimal"
                              }
                            }, 
                            "nullable": true
                          }
                        }, 
                        "example": {
                          "valid_until": "2019-01-23T18:10:02.574Z", 
                          "direction": "outbound", 
                          "errors": [], 
                          "from": "+18445550001", 
                          "record_type": "message", 
                          "text": "Hello, World!", 
                          "created_at": "2019-01-23T18:10:02.574Z", 
                          "updated_at": "2019-01-23T18:10:02.574Z", 
                          "to": [
                            {
                              "status": "queued", 
                              "updated_at": "2019-01-23T18:10:02.574Z", 
                              "address": "+18665550001"
                            }
                          ], 
                          "type": "sms", 
                          "parts": 1, 
                          "line_type": "Wireless", 
                          "carrier": "Verizon", 
                          "webhook_url": "https://www.example.com/hooks", 
                          "use_profile_webhooks": false, 
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                          "webhook_failover_url": "https://www.example.com/callbacks", 
                          "cost": {
                            "currency": "USD", 
                            "amount": "1.23"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "createShortCodeMessage"
      }
    }, 
    "/calls/{call_control_id}/actions/answer": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Answer call", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Answer request"
              }
            }
          }, 
          "required": true, 
          "description": "Answer call request"
        }, 
        "callbacks": {
          "callAnswered": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "answered"
                                ], 
                                "type": "string", 
                                "example": "answered", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.answered"
                            ], 
                            "type": "string", 
                            "example": "call.answered", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlAnswer", 
        "description": "Answer an incoming call.\n\n**Expected Webhooks:**\n\n- `call.answered`\n"
      }
    }, 
    "/calls": {
      "post": {
        "description": "Dial a number from a given connection. A successful response will include a `call_leg_id` which can be used to correlate the command with subsequent webhooks.\n\n**Expected Webhooks:**\n\n- `call.initiated`\n- `call.answered` or `call.hangup`\n- `call.machine.detection.ended` if `answering_machine_detection` was requested\n", 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Dial", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "connection_id", 
                  "to", 
                  "from"
                ], 
                "type": "object", 
                "properties": {
                  "link_to": {
                    "type": "string", 
                    "description": "Use another call's control id for sharing the same call session id", 
                    "example": "ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg=="
                  }, 
                  "from": {
                    "type": "string", 
                    "description": "The `from` number to be used as the caller id presented to the destination (`to` number). The number should be in +E164 format. This attribute will default to the `from` number of the original call if omitted.", 
                    "example": "+18005550101"
                  }, 
                  "to": {
                    "type": "string", 
                    "description": "The DID or SIP URI to dial out to.", 
                    "example": "+18005550100 or SIP:username@sip.telnyx.com"
                  }, 
                  "sip_auth_password": {
                    "type": "string", 
                    "description": "SIP Authentication password used for SIP challenges."
                  }, 
                  "connection_id": {
                    "type": "string", 
                    "description": "The ID of the connection to be used when dialing the destination."
                  }, 
                  "answering_machine_detection": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Enables Answering Machine Detection. When a call gets answered, Telnyx runs an algorithm to determine whether it was picked up by a human or a machine and sends an `answering_machine_detection_result` webhook with the analysis result."
                  }, 
                  "audio_url": {
                    "type": "string", 
                    "example": "http://example.com/message.wav", 
                    "description": "The URL of a file to be played back to the callee when the call is answered. The URL can point to either a WAV or MP3 file."
                  }, 
                  "custom_headers": {
                    "items": {
                      "required": [
                        "name", 
                        "value"
                      ], 
                      "type": "object", 
                      "properties": {
                        "name": {
                          "type": "string", 
                          "description": "The name of the header to add.", 
                          "example": "head_1"
                        }, 
                        "value": {
                          "type": "string", 
                          "description": "The value of the header.", 
                          "example": "val_1"
                        }
                      }, 
                      "title": "Custom SIP header"
                    }, 
                    "type": "array", 
                    "description": "Custom headers to be added to the SIP INVITE.", 
                    "example": [
                      {
                        "name": "head_1", 
                        "value": "val_1"
                      }, 
                      {
                        "name": "head_2", 
                        "value": "val_2"
                      }
                    ]
                  }, 
                  "sip_auth_username": {
                    "type": "string", 
                    "description": "SIP Authentication username used for SIP challenges."
                  }, 
                  "timeout_secs": {
                    "default": 30, 
                    "example": 60, 
                    "type": "integer", 
                    "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being called. If the timeout is reached before an answer is received, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `timeout` will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.", 
                    "format": "int32"
                  }, 
                  "time_limit_secs": {
                    "default": 14400, 
                    "example": 600, 
                    "type": "integer", 
                    "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a `call.hangup` webhook with a `hangup_cause` of `time_limit` will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.", 
                    "format": "int32"
                  }, 
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Dial request"
              }
            }
          }, 
          "required": true, 
          "description": "Dial request"
        }, 
        "callbacks": {
          "callMachineDetectionEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "result": {
                                "enum": [
                                  "human", 
                                  "machine", 
                                  "not_sure"
                                ], 
                                "type": "string", 
                                "example": "machine", 
                                "description": "Answering machine detection result."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.machine.detection.ended"
                            ], 
                            "type": "string", 
                            "example": "call.machine.detection.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callInitiated": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "direction": {
                                "enum": [
                                  "incoming", 
                                  "outgoing"
                                ], 
                                "type": "string", 
                                "example": "incoming", 
                                "description": "Whether the call is `incoming` or `outgoing`."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "parked"
                                ], 
                                "type": "string", 
                                "example": "parked", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.initiated"
                            ], 
                            "type": "string", 
                            "example": "call.initiated", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callAnswered": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "answered"
                                ], 
                                "type": "string", 
                                "example": "answered", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.answered"
                            ], 
                            "type": "string", 
                            "example": "call.answered", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callHangup": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "from": {
                                "type": "string", 
                                "example": "+35319605860", 
                                "description": "Number or SIP user placing the call."
                              }, 
                              "sip_hangup_cause": {
                                "type": "string", 
                                "example": "603", 
                                "description": "The reason the call was ended (SIP response code). If the SIP response is unavailable (in inbound calls for example) this is set to `unspecified`."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "to": {
                                "type": "string", 
                                "example": "+13129457420", 
                                "description": "Destination number or SIP URI of the call."
                              }, 
                              "state": {
                                "enum": [
                                  "hangup"
                                ], 
                                "type": "string", 
                                "example": "hangup", 
                                "description": "State received from a command."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "hangup_cause": {
                                "enum": [
                                  "call_rejected", 
                                  "normal_clearing", 
                                  "originator_cancel", 
                                  "timeout", 
                                  "time_limit", 
                                  "user_busy", 
                                  "not_found", 
                                  "unspecified"
                                ], 
                                "type": "string", 
                                "example": "call_rejected", 
                                "description": "The reason the call was ended (`call_rejected`, `normal_clearing`, `originator_cancel`, `timeout`, `time_limit`, `user_busy`, `not_found` or `unspecified`)."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.hangup"
                            ], 
                            "type": "string", 
                            "example": "call.hangup", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlDial", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "required": [
                        "record_type", 
                        "call_control_id", 
                        "call_leg_id", 
                        "call_session_id", 
                        "is_alive"
                      ], 
                      "type": "object", 
                      "example": {
                        "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                        "record_type": "call", 
                        "is_alive": true, 
                        "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                        "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                      }, 
                      "properties": {
                        "call_session_id": {
                          "type": "string", 
                          "description": "ID that is unique to the call session and can be used to correlate webhook events", 
                          "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                        }, 
                        "record_type": {
                          "enum": [
                            "call"
                          ], 
                          "type": "string"
                        }, 
                        "is_alive": {
                          "type": "boolean", 
                          "description": "Indicates whether the call is alive or not. For Dial command it will always be `false` (dialing is asynchronous).", 
                          "example": true
                        }, 
                        "call_leg_id": {
                          "type": "string", 
                          "description": "ID that is unique to the call and can be used to correlate webhook events", 
                          "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
                        }, 
                        "call_control_id": {
                          "type": "string", 
                          "description": "Unique identifier and token for controlling the call. For Dial command it will always be `null` (dialing is asynchronous).", 
                          "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Retrieve call status response"
          }
        }
      }
    }, 
    "/number_reservations/{number_reservation_id}": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "status": {
                          "readOnly": true, 
                          "enum": [
                            "pending", 
                            "success", 
                            "failure"
                          ], 
                          "type": "string", 
                          "description": "The status of the entire reservation"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the numbers reservation was created"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string for when the number reservation was updated"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "phone_number_reservation"
                        }, 
                        "phone_numbers": {
                          "items": {
                            "properties": {
                              "phone_number": {
                                "type": "string", 
                                "example": "+13125000000", 
                                "format": "e164_phone_number"
                              }, 
                              "status": {
                                "readOnly": true, 
                                "enum": [
                                  "pending", 
                                  "success", 
                                  "failure"
                                ], 
                                "type": "string", 
                                "description": "The status of the phone number's reservation"
                              }, 
                              "created_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string denoting when the individual number reservation was created"
                              }, 
                              "updated_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string for when the the individual number reservation was updated"
                              }, 
                              "record_type": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "reserved_phone_number"
                              }, 
                              "id": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                                "format": "uuid"
                              }, 
                              "expired_at": {
                                "readOnly": true, 
                                "format": "datetime", 
                                "type": "string", 
                                "example": "2018-01-01T00:00:00.000000Z", 
                                "description": "An ISO 8901 datetime string for when the individual number reservation is going to expire"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "customer_reference": {
                          "type": "string", 
                          "description": "A customer reference string for customer look ups", 
                          "example": "MY REF 001"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number reservation was found"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number reservation id", 
            "name": "number_reservation_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Reservations"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Retrieve a Single Phone Number Reservation", 
        "operationId": "retrieveNumberReservation", 
        "description": "Gets a single Phone Number Reservation"
      }
    }, 
    "/calls/{call_control_id}/actions/playback_stop": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier and token for controlling the call", 
            "required": true, 
            "in": "path", 
            "name": "call_control_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Call Commands"
        ], 
        "summary": "Stop audio playback", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "stop": {
                    "default": "all", 
                    "type": "string", 
                    "description": "Use `current` to stop only the current audio or `all` to stop all audios in the queue.", 
                    "example": "current"
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Playback Stop request"
              }
            }
          }, 
          "required": true, 
          "description": "Stop audio playback request"
        }, 
        "callbacks": {
          "callSpeakEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "completed", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "completed", 
                                "description": "Reflects how `speak` ended."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.speak.ended"
                            ], 
                            "type": "string", 
                            "example": "call.speak.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "callPlaybackEnded": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "status": {
                                "enum": [
                                  "valid", 
                                  "invalid", 
                                  "call_hangup"
                                ], 
                                "type": "string", 
                                "example": "valid", 
                                "description": "Reflects how command ended."
                              }, 
                              "overlay": {
                                "type": "boolean", 
                                "example": "false", 
                                "description": "Whether the audio is going to be played in overlay mode or not."
                              }, 
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }, 
                              "media_url": {
                                "type": "string", 
                                "example": "http://example.com/audio.wav", 
                                "description": "The audio URL being played back."
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "call.playback.ended"
                            ], 
                            "type": "string", 
                            "example": "call.playback.ended", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "CallControlPlaybackStop", 
        "description": "Stop audio being played on the call.\n\n**Expected Webhooks:**\n\n- `call.playback.ended` or `call.speak.ended`\n"
      }
    }, 
    "/conferences/{id}/actions/join": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "title": "Command result", 
                      "required": [
                        "result"
                      ], 
                      "type": "object", 
                      "example": {
                        "result": "ok"
                      }, 
                      "properties": {
                        "result": {
                          "type": "string", 
                          "example": "ok"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Conference command response"
          }
        }, 
        "parameters": [
          {
            "description": "Unique identifier of the conference", 
            "required": true, 
            "in": "path", 
            "name": "id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Conference Commands"
        ], 
        "summary": "Join a conference.", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "call_control_id"
                ], 
                "type": "object", 
                "properties": {
                  "client_state": {
                    "type": "string", 
                    "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.", 
                    "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
                  }, 
                  "call_control_id": {
                    "type": "string", 
                    "description": "Unique identifier and token for controlling the call", 
                    "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
                  }, 
                  "command_id": {
                    "type": "string", 
                    "description": "Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same `command_id` as one that has already been executed.", 
                    "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
                  }
                }, 
                "title": "Join a conference request"
              }
            }
          }, 
          "required": true, 
          "description": "New Messaging Profile object"
        }, 
        "callbacks": {
          "conferenceParticipantJoined": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "conference_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "Conference ID that the participant joined."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "conference.participant.joined"
                            ], 
                            "type": "string", 
                            "example": "conference.participant.joined", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }, 
          "conferenceParticipantLeft": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object", 
                        "properties": {
                          "id": {
                            "format": "uuid", 
                            "type": "string", 
                            "description": "Uniquely identifies the resource or object.", 
                            "example": "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0"
                          }, 
                          "record_type": {
                            "enum": [
                              "event"
                            ], 
                            "type": "string", 
                            "example": "event", 
                            "description": "Identifies the type of the resource."
                          }, 
                          "occurred_at": {
                            "format": "date-time", 
                            "type": "string", 
                            "description": "ISO-8601 datetime of when the event occurred.", 
                            "example": "2018-02-02T22:25:27.521992Z"
                          }, 
                          "payload": {
                            "type": "object", 
                            "properties": {
                              "connection_id": {
                                "type": "string", 
                                "example": "7267xxxxxxxxxxxxxx", 
                                "description": "Telnyx connection ID used in the call."
                              }, 
                              "call_session_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "ID that is unique to the call session and can be used to correlate webhook events."
                              }, 
                              "call_leg_id": {
                                "type": "string", 
                                "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1", 
                                "description": "ID that is unique to the call and can be used to correlate webhook events."
                              }, 
                              "conference_id": {
                                "type": "string", 
                                "example": "428c31b6-abf3-3bc1-b7f4-5013ef9657c1", 
                                "description": "Conference ID that the participant joined."
                              }, 
                              "client_state": {
                                "type": "string", 
                                "example": "aGF2ZSBhIG5pY2UgZGF5ID1d", 
                                "description": "State received from a command."
                              }, 
                              "call_control_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "description": "Call ID used to issue commands via Call Control API.", 
                                "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfX"
                              }
                            }
                          }, 
                          "event_type": {
                            "enum": [
                              "conference.participant.left"
                            ], 
                            "type": "string", 
                            "example": "conference.participant.left", 
                            "description": "The type of event being delivered."
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }, 
        "operationId": "JoinConference", 
        "description": "Join an existing call leg to a conference. Issue the Join Conference command with the conference ID in the path and the `call_control_id` of the leg you wish to join to the conference as an attribute.\n\n**Expected Webhooks:**\n\n- `conference.participant.joined`\n- `conference.participant.left`\n"
      }
    }, 
    "/number_orders": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "phone_numbers": {
                          "writeOnly": true
                        }
                      }, 
                      "allOf": [
                        {
                          "properties": {
                            "status": {
                              "readOnly": true, 
                              "enum": [
                                "pending", 
                                "success", 
                                "failure"
                              ], 
                              "type": "string", 
                              "description": "The status of the order"
                            }, 
                            "requirements_met": {
                              "readOnly": true, 
                              "type": "boolean", 
                              "description": "True if all requirements are met for every phone number, false otherwise"
                            }, 
                            "messaging_profile_id": {
                              "format": "uuid", 
                              "type": "string", 
                              "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                              "description": "The messaging profile id to set the number to upon acquiring the number"
                            }, 
                            "phone_numbers_count": {
                              "readOnly": true, 
                              "type": "integer", 
                              "description": "The count of phone numbers in the number order", 
                              "example": 1
                            }, 
                            "created_at": {
                              "readOnly": true, 
                              "format": "datetime", 
                              "type": "string", 
                              "example": "2018-01-01T00:00:00.000000Z", 
                              "description": "An ISO 8901 datetime string denoting when the number order was created"
                            }, 
                            "connection_id": {
                              "type": "string", 
                              "description": "The connection id to set the number to upon acquiring the number", 
                              "example": "442191469269222625"
                            }, 
                            "updated_at": {
                              "readOnly": true, 
                              "format": "datetime", 
                              "type": "string", 
                              "example": "2018-01-01T00:00:00.000000Z", 
                              "description": "An ISO 8901 datetime string for when the number order was updated"
                            }, 
                            "record_type": {
                              "readOnly": true, 
                              "type": "string", 
                              "example": "number_order"
                            }, 
                            "id": {
                              "readOnly": true, 
                              "type": "string", 
                              "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                              "format": "uuid"
                            }, 
                            "webhook_url": {
                              "format": "url", 
                              "type": "string", 
                              "example": "https://webhook.test", 
                              "description": "A webhook URL for number order status updates"
                            }, 
                            "customer_reference": {
                              "type": "string", 
                              "description": "A customer reference string for customer look ups", 
                              "example": "MY REF 001"
                            }, 
                            "phone_numbers": {
                              "items": {
                                "properties": {
                                  "phone_number": {
                                    "type": "string", 
                                    "format": "e164_phone_number"
                                  }, 
                                  "status": {
                                    "readOnly": true, 
                                    "enum": [
                                      "pending", 
                                      "success", 
                                      "failure"
                                    ], 
                                    "type": "string", 
                                    "description": "The status of the phone number in the order"
                                  }, 
                                  "requirements_met": {
                                    "readOnly": true, 
                                    "type": "boolean", 
                                    "description": "True if all requirements are met for a phone number, false otherwise"
                                  }, 
                                  "regulatory_group_id": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                                  }, 
                                  "record_type": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "number_order_phone_number"
                                  }, 
                                  "regulatory_requirements": {
                                    "items": {
                                      "properties": {
                                        "record_type": {
                                          "readOnly": true, 
                                          "type": "string", 
                                          "example": "phone_number_regulatory_requirement"
                                        }, 
                                        "field_value": {
                                          "type": "string", 
                                          "description": "The value of the requirement, this could be an id to a resource or a string value"
                                        }, 
                                        "requirement_id": {
                                          "format": "uuid", 
                                          "type": "string", 
                                          "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                          "description": "Unique id for a requirement"
                                        }, 
                                        "field_type": {
                                          "readOnly": true, 
                                          "enum": [
                                            "string", 
                                            "datetime", 
                                            "address_id", 
                                            "number_order_document_id"
                                          ], 
                                          "type": "string", 
                                          "example": "address_id"
                                        }
                                      }
                                    }, 
                                    "type": "array"
                                  }, 
                                  "id": {
                                    "readOnly": true, 
                                    "type": "string", 
                                    "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                                    "format": "uuid"
                                  }
                                }
                              }, 
                              "writeOnly": true, 
                              "type": "array"
                            }, 
                            "webhook_failover_url": {
                              "format": "url", 
                              "type": "string", 
                              "example": "https://webhook-failover.test", 
                              "description": "If above webhook URL fails, this URL will be used as a fail over"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }, 
            "description": "Number order has been created successfully"
          }
        }, 
        "tags": [
          "Number Orders"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Create Phone Number Order", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status": {
                    "readOnly": true, 
                    "enum": [
                      "pending", 
                      "success", 
                      "failure"
                    ], 
                    "type": "string", 
                    "description": "The status of the order"
                  }, 
                  "requirements_met": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "True if all requirements are met for every phone number, false otherwise"
                  }, 
                  "messaging_profile_id": {
                    "format": "uuid", 
                    "type": "string", 
                    "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                    "description": "The messaging profile id to set the number to upon acquiring the number"
                  }, 
                  "phone_numbers_count": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The count of phone numbers in the number order", 
                    "example": 1
                  }, 
                  "created_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string denoting when the number order was created"
                  }, 
                  "connection_id": {
                    "type": "string", 
                    "description": "The connection id to set the number to upon acquiring the number", 
                    "example": "442191469269222625"
                  }, 
                  "updated_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string for when the number order was updated"
                  }, 
                  "record_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "number_order"
                  }, 
                  "id": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                    "format": "uuid"
                  }, 
                  "webhook_url": {
                    "format": "url", 
                    "type": "string", 
                    "example": "https://webhook.test", 
                    "description": "A webhook URL for number order status updates"
                  }, 
                  "customer_reference": {
                    "type": "string", 
                    "description": "A customer reference string for customer look ups", 
                    "example": "MY REF 001"
                  }, 
                  "phone_numbers": {
                    "items": {
                      "properties": {
                        "phone_number": {
                          "type": "string", 
                          "format": "e164_phone_number"
                        }, 
                        "status": {
                          "readOnly": true, 
                          "enum": [
                            "pending", 
                            "success", 
                            "failure"
                          ], 
                          "type": "string", 
                          "description": "The status of the phone number in the order"
                        }, 
                        "requirements_met": {
                          "readOnly": true, 
                          "type": "boolean", 
                          "description": "True if all requirements are met for a phone number, false otherwise"
                        }, 
                        "regulatory_group_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "number_order_phone_number"
                        }, 
                        "regulatory_requirements": {
                          "items": {
                            "properties": {
                              "record_type": {
                                "readOnly": true, 
                                "type": "string", 
                                "example": "phone_number_regulatory_requirement"
                              }, 
                              "field_value": {
                                "type": "string", 
                                "description": "The value of the requirement, this could be an id to a resource or a string value"
                              }, 
                              "requirement_id": {
                                "format": "uuid", 
                                "type": "string", 
                                "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                "description": "Unique id for a requirement"
                              }, 
                              "field_type": {
                                "readOnly": true, 
                                "enum": [
                                  "string", 
                                  "datetime", 
                                  "address_id", 
                                  "number_order_document_id"
                                ], 
                                "type": "string", 
                                "example": "address_id"
                              }
                            }
                          }, 
                          "type": "array"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                          "format": "uuid"
                        }
                      }
                    }, 
                    "writeOnly": true, 
                    "type": "array"
                  }, 
                  "webhook_failover_url": {
                    "format": "url", 
                    "type": "string", 
                    "example": "https://webhook-failover.test", 
                    "description": "If above webhook URL fails, this URL will be used as a fail over"
                  }
                }
              }
            }
          }, 
          "required": true
        }, 
        "callbacks": {
          "numberOrderStatusUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "status": {
                            "readOnly": true, 
                            "enum": [
                              "pending", 
                              "success", 
                              "failure"
                            ], 
                            "type": "string", 
                            "description": "The status of the order"
                          }, 
                          "requirements_met": {
                            "readOnly": true, 
                            "type": "boolean", 
                            "description": "True if all requirements are met for every phone number, false otherwise"
                          }, 
                          "messaging_profile_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                            "description": "The messaging profile id to set the number to upon acquiring the number"
                          }, 
                          "phone_numbers_count": {
                            "readOnly": true, 
                            "type": "integer", 
                            "description": "The count of phone numbers in the number order", 
                            "example": 1
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string denoting when the number order was created"
                          }, 
                          "connection_id": {
                            "type": "string", 
                            "description": "The connection id to set the number to upon acquiring the number", 
                            "example": "442191469269222625"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string for when the number order was updated"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "number_order"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                            "format": "uuid"
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "example": "https://webhook.test", 
                            "description": "A webhook URL for number order status updates"
                          }, 
                          "customer_reference": {
                            "type": "string", 
                            "description": "A customer reference string for customer look ups", 
                            "example": "MY REF 001"
                          }, 
                          "phone_numbers": {
                            "items": {
                              "properties": {
                                "phone_number": {
                                  "type": "string", 
                                  "format": "e164_phone_number"
                                }, 
                                "status": {
                                  "readOnly": true, 
                                  "enum": [
                                    "pending", 
                                    "success", 
                                    "failure"
                                  ], 
                                  "type": "string", 
                                  "description": "The status of the phone number in the order"
                                }, 
                                "requirements_met": {
                                  "readOnly": true, 
                                  "type": "boolean", 
                                  "description": "True if all requirements are met for a phone number, false otherwise"
                                }, 
                                "regulatory_group_id": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                                }, 
                                "record_type": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "number_order_phone_number"
                                }, 
                                "regulatory_requirements": {
                                  "items": {
                                    "properties": {
                                      "record_type": {
                                        "readOnly": true, 
                                        "type": "string", 
                                        "example": "phone_number_regulatory_requirement"
                                      }, 
                                      "field_value": {
                                        "type": "string", 
                                        "description": "The value of the requirement, this could be an id to a resource or a string value"
                                      }, 
                                      "requirement_id": {
                                        "format": "uuid", 
                                        "type": "string", 
                                        "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                        "description": "Unique id for a requirement"
                                      }, 
                                      "field_type": {
                                        "readOnly": true, 
                                        "enum": [
                                          "string", 
                                          "datetime", 
                                          "address_id", 
                                          "number_order_document_id"
                                        ], 
                                        "type": "string", 
                                        "example": "address_id"
                                      }
                                    }
                                  }, 
                                  "type": "array"
                                }, 
                                "id": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                                  "format": "uuid"
                                }
                              }
                            }, 
                            "writeOnly": true, 
                            "type": "array"
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "example": "https://webhook-failover.test", 
                            "description": "If above webhook URL fails, this URL will be used as a fail over"
                          }
                        }
                      }
                    }
                  }, 
                  "required": true
                }, 
                "responses": {
                  "200": {
                    "description": "The server must return a HTTP 200, otherwise we will reattempt to deliver the webhook to the failover url"
                  }
                }
              }
            }
          }
        }, 
        "operationId": "createNumberOrder", 
        "description": "Creates a Phone Number Order"
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "properties": {
                          "status": {
                            "readOnly": true, 
                            "enum": [
                              "pending", 
                              "success", 
                              "failure"
                            ], 
                            "type": "string", 
                            "description": "The status of the order"
                          }, 
                          "requirements_met": {
                            "readOnly": true, 
                            "type": "boolean", 
                            "description": "True if all requirements are met for every phone number, false otherwise"
                          }, 
                          "messaging_profile_id": {
                            "format": "uuid", 
                            "type": "string", 
                            "example": "730911e3-8488-40a8-a818-dc0a5df8bc03", 
                            "description": "The messaging profile id to set the number to upon acquiring the number"
                          }, 
                          "phone_numbers_count": {
                            "readOnly": true, 
                            "type": "integer", 
                            "description": "The count of phone numbers in the number order", 
                            "example": 1
                          }, 
                          "created_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string denoting when the number order was created"
                          }, 
                          "connection_id": {
                            "type": "string", 
                            "description": "The connection id to set the number to upon acquiring the number", 
                            "example": "442191469269222625"
                          }, 
                          "updated_at": {
                            "readOnly": true, 
                            "format": "datetime", 
                            "type": "string", 
                            "example": "2018-01-01T00:00:00.000000Z", 
                            "description": "An ISO 8901 datetime string for when the number order was updated"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "number_order"
                          }, 
                          "id": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "12ade33a-21c0-473b-b055-b3c836e1c292", 
                            "format": "uuid"
                          }, 
                          "webhook_url": {
                            "format": "url", 
                            "type": "string", 
                            "example": "https://webhook.test", 
                            "description": "A webhook URL for number order status updates"
                          }, 
                          "customer_reference": {
                            "type": "string", 
                            "description": "A customer reference string for customer look ups", 
                            "example": "MY REF 001"
                          }, 
                          "phone_numbers": {
                            "items": {
                              "properties": {
                                "phone_number": {
                                  "type": "string", 
                                  "format": "e164_phone_number"
                                }, 
                                "status": {
                                  "readOnly": true, 
                                  "enum": [
                                    "pending", 
                                    "success", 
                                    "failure"
                                  ], 
                                  "type": "string", 
                                  "description": "The status of the phone number in the order"
                                }, 
                                "requirements_met": {
                                  "readOnly": true, 
                                  "type": "boolean", 
                                  "description": "True if all requirements are met for a phone number, false otherwise"
                                }, 
                                "regulatory_group_id": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
                                }, 
                                "record_type": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "number_order_phone_number"
                                }, 
                                "regulatory_requirements": {
                                  "items": {
                                    "properties": {
                                      "record_type": {
                                        "readOnly": true, 
                                        "type": "string", 
                                        "example": "phone_number_regulatory_requirement"
                                      }, 
                                      "field_value": {
                                        "type": "string", 
                                        "description": "The value of the requirement, this could be an id to a resource or a string value"
                                      }, 
                                      "requirement_id": {
                                        "format": "uuid", 
                                        "type": "string", 
                                        "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576", 
                                        "description": "Unique id for a requirement"
                                      }, 
                                      "field_type": {
                                        "readOnly": true, 
                                        "enum": [
                                          "string", 
                                          "datetime", 
                                          "address_id", 
                                          "number_order_document_id"
                                        ], 
                                        "type": "string", 
                                        "example": "address_id"
                                      }
                                    }
                                  }, 
                                  "type": "array"
                                }, 
                                "id": {
                                  "readOnly": true, 
                                  "type": "string", 
                                  "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", 
                                  "format": "uuid"
                                }
                              }
                            }, 
                            "writeOnly": true, 
                            "type": "array"
                          }, 
                          "webhook_failover_url": {
                            "format": "url", 
                            "type": "string", 
                            "example": "https://webhook-failover.test", 
                            "description": "If above webhook URL fails, this URL will be used as a fail over"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Returns a list of number orders"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "Filter number orders by status", 
            "name": "filter[status]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number orders later than this value", 
            "name": "filter[created_at][gt]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number orders earlier than this value", 
            "name": "filter[created_at][lt]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number orders having these phone numbers", 
            "name": "filter[phone_numbers.phone_number]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number orders via the customer reference set", 
            "name": "filter[customer_reference]", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "in": "query", 
            "description": "Filter number orders by requirements met", 
            "name": "filter[requirements_met]", 
            "schema": {
              "type": "boolean"
            }
          }
        ], 
        "tags": [
          "Number Orders"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Retrieve multiple Number Orders", 
        "operationId": "listNumberOrders", 
        "description": "Retrieve a paginated list of Number Orders"
      }
    }, 
    "/short_codes/{id}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "required": [
                        "messaging_profile_id"
                      ], 
                      "type": "object", 
                      "example": {
                        "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "short_code": "12345", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "short_code", 
                        "country_code": "US", 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                      }, 
                      "properties": {
                        "messaging_profile_id": {
                          "format": "uuid", 
                          "type": "string", 
                          "description": "Unique identifier for a messaging profile.", 
                          "nullable": true
                        }, 
                        "short_code": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Short digit sequence used to address messages."
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "short_code"
                          ], 
                          "type": "string", 
                          "example": "short_code", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "country_code": {
                          "pattern": "^[A-Z]{2}$", 
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 3166-1 alpha-2 country code.", 
                          "example": "US"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected update response"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the short code", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "tags": [
          "Short Codes"
        ], 
        "summary": "Update short code", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "messaging_profile_id"
                ], 
                "type": "object", 
                "properties": {
                  "messaging_profile_id": {
                    "type": "string", 
                    "description": "Unique identifier for a messaging profile.", 
                    "format": "uuid"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Short code update"
        }, 
        "operationId": "updateShortCode", 
        "description": "Update the settings for a specific short code. To unbind a short code from a profile, set the `messaging_profile_id` to `null` or an empty string."
      }, 
      "get": {
        "tags": [
          "Short Codes"
        ], 
        "summary": "Retrieve a short code", 
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "required": [
                        "messaging_profile_id"
                      ], 
                      "type": "object", 
                      "example": {
                        "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "short_code": "12345", 
                        "created_at": "2019-01-23T18:10:02.574Z", 
                        "updated_at": "2019-01-23T18:10:02.574Z", 
                        "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6", 
                        "record_type": "short_code", 
                        "country_code": "US", 
                        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                      }, 
                      "properties": {
                        "messaging_profile_id": {
                          "format": "uuid", 
                          "type": "string", 
                          "description": "Unique identifier for a messaging profile.", 
                          "nullable": true
                        }, 
                        "short_code": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Short digit sequence used to address messages."
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was created.", 
                          "format": "date-time"
                        }, 
                        "updated_at": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 8601 formatted date indicating when the resource was updated.", 
                          "format": "date-time"
                        }, 
                        "organization_id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Unique identifier for the organization that owns the resource.", 
                          "format": "uuid"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "enum": [
                            "short_code"
                          ], 
                          "type": "string", 
                          "example": "short_code", 
                          "description": "Identifies the type of the resource."
                        }, 
                        "country_code": {
                          "pattern": "^[A-Z]{2}$", 
                          "readOnly": true, 
                          "type": "string", 
                          "description": "ISO 3166-1 alpha-2 country code.", 
                          "example": "US"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "description": "Uniquely identifies the resource or object.", 
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Expected short code detail response to a valid request"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The id of the short code", 
            "name": "id", 
            "schema": {
              "type": "string", 
              "format": "uuid"
            }
          }
        ], 
        "operationId": "retrieveShortCode"
      }
    }, 
    "/phone_number_regulatory_requirements": {
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "meta": {
                      "type": "object", 
                      "properties": {
                        "total_results": {
                          "type": "integer", 
                          "example": 55
                        }, 
                        "total_pages": {
                          "type": "integer", 
                          "example": 3
                        }, 
                        "page_number": {
                          "type": "integer", 
                          "example": 2
                        }, 
                        "page_size": {
                          "type": "integer", 
                          "example": 25
                        }
                      }
                    }, 
                    "data": {
                      "items": {
                        "properties": {
                          "phone_number": {
                            "type": "string", 
                            "format": "e164_phone_number"
                          }, 
                          "record_type": {
                            "readOnly": true, 
                            "type": "string", 
                            "example": "phone_number_regulatory_group"
                          }, 
                          "regulatory_requirements": {
                            "items": {
                              "properties": {
                                "field_type": {
                                  "enum": [
                                    "text field", 
                                    "file upload", 
                                    "address", 
                                    "datetime"
                                  ], 
                                  "type": "string"
                                }, 
                                "requirement_type": {
                                  "enum": [
                                    "entity identification", 
                                    "end user address", 
                                    "end user proof of address"
                                  ], 
                                  "type": "string"
                                }, 
                                "description": {
                                  "type": "string"
                                }, 
                                "label": {
                                  "type": "string"
                                }
                              }
                            }, 
                            "type": "array"
                          }, 
                          "regulatory_group_id": {
                            "type": "string", 
                            "example": "d70873cd-7c98-401a-81b6-b1ae08246995", 
                            "format": "uuid"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "Returns a list of number order regulatory requirements"
          }
        }, 
        "parameters": [
          {
            "in": "query", 
            "description": "The list of phone numbers to retrieve regulatory requirements for", 
            "name": "filter[phone_number]", 
            "schema": {
              "items": {
                "type": "string"
              }, 
              "type": "array"
            }
          }
        ], 
        "tags": [
          "Number Order Regulatory Requirements"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Gets a paginated list of Phone Number Regulatory Requirements", 
        "operationId": "listPhoneNumberRegulatoryRequirements", 
        "description": "Gets a paginated list of Phone Number Regulatory Requirements"
      }
    }, 
    "/number_order_documents/{number_order_document_id}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "customer_reference": {
                          "type": "string", 
                          "description": "Human readable description of the file"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "number_order_document"
                        }, 
                        "file_id": {
                          "type": "string", 
                          "description": "The id of the file to associate as a number order document", 
                          "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                        }, 
                        "requirement_type": {
                          "readOnly": true, 
                          "enum": [
                            "identification", 
                            "reg_form", 
                            "address_proof"
                          ], 
                          "type": "string"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "387d1e31-a218-4375-8151-103f2d5e2d2c", 
                          "format": "uuid"
                        }, 
                        "requirements_id": {
                          "type": "string", 
                          "description": "Unique id for a requirement"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number order document has been updated succesfully"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number order document id", 
            "name": "number_order_document_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Order Documents"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Updates a Number Order Document", 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer_reference": {
                    "type": "string", 
                    "description": "Human readable description of the file"
                  }, 
                  "created_at": {
                    "readOnly": true, 
                    "format": "datetime", 
                    "type": "string", 
                    "example": "2018-01-01T00:00:00.000000Z", 
                    "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
                  }, 
                  "record_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "number_order_document"
                  }, 
                  "file_id": {
                    "type": "string", 
                    "description": "The id of the file to associate as a number order document", 
                    "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                  }, 
                  "requirement_type": {
                    "readOnly": true, 
                    "enum": [
                      "identification", 
                      "reg_form", 
                      "address_proof"
                    ], 
                    "type": "string"
                  }, 
                  "id": {
                    "readOnly": true, 
                    "type": "string", 
                    "example": "387d1e31-a218-4375-8151-103f2d5e2d2c", 
                    "format": "uuid"
                  }, 
                  "requirements_id": {
                    "type": "string", 
                    "description": "Unique id for a requirement"
                  }
                }
              }
            }
          }, 
          "required": true
        }, 
        "operationId": "updateNumberOrderDocument", 
        "description": "Updates a Number Order Document"
      }, 
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "required": [
                          "code", 
                          "title"
                        ], 
                        "properties": {
                          "source": {
                            "type": "object", 
                            "properties": {
                              "pointer": {
                                "type": "string", 
                                "description": "JSON pointer (RFC6901) to the offending entity.", 
                                "format": "json-pointer"
                              }, 
                              "parameter": {
                                "type": "string", 
                                "description": "Indicates which query parameter caused the error."
                              }
                            }
                          }, 
                          "code": {
                            "type": "string", 
                            "format": "int"
                          }, 
                          "meta": {
                            "type": "object"
                          }, 
                          "detail": {
                            "type": "string"
                          }, 
                          "title": {
                            "type": "string"
                          }
                        }
                      }, 
                      "type": "array"
                    }
                  }
                }
              }
            }, 
            "description": "unexpected error"
          }, 
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "data": {
                      "properties": {
                        "customer_reference": {
                          "type": "string", 
                          "description": "Human readable description of the file"
                        }, 
                        "created_at": {
                          "readOnly": true, 
                          "format": "datetime", 
                          "type": "string", 
                          "example": "2018-01-01T00:00:00.000000Z", 
                          "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
                        }, 
                        "record_type": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "number_order_document"
                        }, 
                        "file_id": {
                          "type": "string", 
                          "description": "The id of the file to associate as a number order document", 
                          "example": "1e3c5822-0362-4702-8e46-5a129f0d3976"
                        }, 
                        "requirement_type": {
                          "readOnly": true, 
                          "enum": [
                            "identification", 
                            "reg_form", 
                            "address_proof"
                          ], 
                          "type": "string"
                        }, 
                        "id": {
                          "readOnly": true, 
                          "type": "string", 
                          "example": "387d1e31-a218-4375-8151-103f2d5e2d2c", 
                          "format": "uuid"
                        }, 
                        "requirements_id": {
                          "type": "string", 
                          "description": "Unique id for a requirement"
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Number order document was found"
          }
        }, 
        "parameters": [
          {
            "required": true, 
            "in": "path", 
            "description": "The number order document id", 
            "name": "number_order_document_id", 
            "schema": {
              "type": "string"
            }
          }
        ], 
        "tags": [
          "Number Order Documents"
        ], 
        "x-latency-category": "responsive", 
        "summary": "Gets a single Number Order Document", 
        "operationId": "retrieveNumberOrderDocument", 
        "description": "Gets a single Number Order Document"
      }
    }
  }, 
  "security": [
    {
      "bearerAuth": []
    }
  ], 
  "openapi": "3.0.0", 
  "servers": [
    {
      "url": "https://api.telnyx.com/v2", 
      "description": "Version 2.0.0 of the Telnyx API"
    }
  ]
}
